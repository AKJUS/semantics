package de.cau.cs.kieler.scl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.cau.cs.kieler.scl.services.SCLGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSCLParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_STRING", "RULE_HOSTCODE", "RULE_INT", "RULE_FLOAT", "RULE_BOOLEAN", "RULE_COMMENT_ANNOTATION", "RULE_SL_COMMENT_ANNOTATION", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_NUMBER", "RULE_WS", "RULE_ANY_OTHER", "'module'", "':'", "'pause'", "';'", "'goto'", "'schedule'", "'return'", "'if'", "'{'", "'}'", "'else'", "'then'", "'end'", "'fork'", "'par'", "'join'", "'run'", "'('", "','", "')'", "'()'", "'!'", "'&'", "'to'", "'['", "']'", "'scope'", "'expression'", "'const'", "'input'", "'output'", "'global'", "'static'", "'signal'", "'host'", "'ref'", "'extern'", "'='", "'combine'", "'.'", "'print'", "'randomize'", "'||'", "'&&'", "'|'", "'^'", "'<<'", "'>>'", "'>>>'", "'+'", "'-'", "'*'", "'/'", "'%'", "'\\''", "'random'", "'_'", "'null'", "'#'", "'@'", "'conflicting'", "'commuting'", "'+='", "'-='", "'*='", "'/='", "'%='", "'&='", "'|='", "'^='", "'<<='", "'>>='", "'>>>='", "'min='", "'max='", "'++'", "'--'", "'=='", "'<'", "'<='", "'>'", "'>='", "'!='", "'pre'", "'~'", "'val'", "'?'", "'->'", "'pure'", "'bool'", "'int'", "'float'", "'string'", "'struct'", "'class'", "'none'", "'max'", "'min'", "'public'", "'protected'", "'private'", "'void'"
    };
    public static final int T__50=50;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=4;
    public static final int RULE_INT=7;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=12;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int RULE_COMMENT_ANNOTATION=10;
    public static final int T__37=37;
    public static final int RULE_SL_COMMENT_ANNOTATION=11;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int RULE_FLOAT=8;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int RULE_BOOLEAN=9;
    public static final int T__19=19;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__26=26;
    public static final int RULE_HOSTCODE=6;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=5;
    public static final int RULE_SL_COMMENT=13;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=15;
    public static final int RULE_ANY_OTHER=16;
    public static final int RULE_NUMBER=14;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalSCLParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSCLParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSCLParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSCL.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private SCLGrammarAccess grammarAccess;

        public InternalSCLParser(TokenStream input, SCLGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "SCLProgram";
       	}

       	@Override
       	protected SCLGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleSCLProgram"
    // InternalSCL.g:71:1: entryRuleSCLProgram returns [EObject current=null] : iv_ruleSCLProgram= ruleSCLProgram EOF ;
    public final EObject entryRuleSCLProgram() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSCLProgram = null;


        try {
            // InternalSCL.g:71:51: (iv_ruleSCLProgram= ruleSCLProgram EOF )
            // InternalSCL.g:72:2: iv_ruleSCLProgram= ruleSCLProgram EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSCLProgramRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSCLProgram=ruleSCLProgram();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSCLProgram; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSCLProgram"


    // $ANTLR start "ruleSCLProgram"
    // InternalSCL.g:78:1: ruleSCLProgram returns [EObject current=null] : ( ( (lv_pragmas_0_0= rulePragma ) )* ( (lv_modules_1_0= ruleModule ) )* ) ;
    public final EObject ruleSCLProgram() throws RecognitionException {
        EObject current = null;

        EObject lv_pragmas_0_0 = null;

        EObject lv_modules_1_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:84:2: ( ( ( (lv_pragmas_0_0= rulePragma ) )* ( (lv_modules_1_0= ruleModule ) )* ) )
            // InternalSCL.g:85:2: ( ( (lv_pragmas_0_0= rulePragma ) )* ( (lv_modules_1_0= ruleModule ) )* )
            {
            // InternalSCL.g:85:2: ( ( (lv_pragmas_0_0= rulePragma ) )* ( (lv_modules_1_0= ruleModule ) )* )
            // InternalSCL.g:86:3: ( (lv_pragmas_0_0= rulePragma ) )* ( (lv_modules_1_0= ruleModule ) )*
            {
            // InternalSCL.g:86:3: ( (lv_pragmas_0_0= rulePragma ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==75) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalSCL.g:87:4: (lv_pragmas_0_0= rulePragma )
            	    {
            	    // InternalSCL.g:87:4: (lv_pragmas_0_0= rulePragma )
            	    // InternalSCL.g:88:5: lv_pragmas_0_0= rulePragma
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSCLProgramAccess().getPragmasPragmaParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    lv_pragmas_0_0=rulePragma();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSCLProgramRule());
            	      					}
            	      					add(
            	      						current,
            	      						"pragmas",
            	      						lv_pragmas_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Pragma");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // InternalSCL.g:105:3: ( (lv_modules_1_0= ruleModule ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==RULE_COMMENT_ANNOTATION||LA2_0==17||LA2_0==76) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalSCL.g:106:4: (lv_modules_1_0= ruleModule )
            	    {
            	    // InternalSCL.g:106:4: (lv_modules_1_0= ruleModule )
            	    // InternalSCL.g:107:5: lv_modules_1_0= ruleModule
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSCLProgramAccess().getModulesModuleParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_4);
            	    lv_modules_1_0=ruleModule();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSCLProgramRule());
            	      					}
            	      					add(
            	      						current,
            	      						"modules",
            	      						lv_modules_1_0,
            	      						"de.cau.cs.kieler.scl.SCL.Module");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSCLProgram"


    // $ANTLR start "entryRuleModule"
    // InternalSCL.g:128:1: entryRuleModule returns [EObject current=null] : iv_ruleModule= ruleModule EOF ;
    public final EObject entryRuleModule() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModule = null;


        try {
            // InternalSCL.g:128:47: (iv_ruleModule= ruleModule EOF )
            // InternalSCL.g:129:2: iv_ruleModule= ruleModule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModuleRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleModule=ruleModule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModule; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModule"


    // $ANTLR start "ruleModule"
    // InternalSCL.g:135:1: ruleModule returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' )? ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* ) ;
    public final EObject ruleModule() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_declarations_4_0 = null;

        EObject lv_statements_5_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:141:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' )? ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* ) )
            // InternalSCL.g:142:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' )? ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* )
            {
            // InternalSCL.g:142:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' )? ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* )
            // InternalSCL.g:143:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'module' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' )? ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )*
            {
            // InternalSCL.g:143:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==RULE_COMMENT_ANNOTATION||LA3_0==76) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // InternalSCL.g:144:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:144:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCL.g:145:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModuleAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_5);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModuleRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            otherlv_1=(Token)match(input,17,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getModuleAccess().getModuleKeyword_1());
              		
            }
            // InternalSCL.g:166:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalSCL.g:167:4: (lv_name_2_0= RULE_ID )
            {
            // InternalSCL.g:167:4: (lv_name_2_0= RULE_ID )
            // InternalSCL.g:168:5: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getModuleRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalSCL.g:184:3: (otherlv_3= ':' )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==18) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // InternalSCL.g:185:4: otherlv_3= ':'
                    {
                    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getModuleAccess().getColonKeyword_3());
                      			
                    }

                    }
                    break;

            }

            // InternalSCL.g:190:3: ( (lv_declarations_4_0= ruleDeclaration ) )*
            loop5:
            do {
                int alt5=2;
                alt5 = dfa5.predict(input);
                switch (alt5) {
            	case 1 :
            	    // InternalSCL.g:191:4: (lv_declarations_4_0= ruleDeclaration )
            	    {
            	    // InternalSCL.g:191:4: (lv_declarations_4_0= ruleDeclaration )
            	    // InternalSCL.g:192:5: lv_declarations_4_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModuleAccess().getDeclarationsDeclarationParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_8);
            	    lv_declarations_4_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModuleRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_4_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);

            // InternalSCL.g:209:3: ( (lv_statements_5_0= ruleStatement ) )*
            loop6:
            do {
                int alt6=2;
                alt6 = dfa6.predict(input);
                switch (alt6) {
            	case 1 :
            	    // InternalSCL.g:210:4: (lv_statements_5_0= ruleStatement )
            	    {
            	    // InternalSCL.g:210:4: (lv_statements_5_0= ruleStatement )
            	    // InternalSCL.g:211:5: lv_statements_5_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModuleAccess().getStatementsStatementParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_9);
            	    lv_statements_5_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModuleRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_5_0,
            	      						"de.cau.cs.kieler.scl.SCL.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModule"


    // $ANTLR start "entryRuleStatement"
    // InternalSCL.g:232:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            // InternalSCL.g:232:50: (iv_ruleStatement= ruleStatement EOF )
            // InternalSCL.g:233:2: iv_ruleStatement= ruleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStatement=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // InternalSCL.g:239:1: ruleStatement returns [EObject current=null] : (this_SclAssignment_0= ruleSclAssignment | this_SclPostfixAssignment_1= ruleSclPostfixAssignment | this_Label_2= ruleLabel | this_Conditional_3= ruleConditional | this_LegacyConditional_4= ruleLegacyConditional | this_Goto_5= ruleGoto | this_Parallel_6= ruleParallel | this_Pause_7= rulePause | this_ModuleCall_8= ruleModuleCall | this_ScopeStatement_9= ruleScopeStatement | this_Return_10= ruleReturn ) ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        EObject this_SclAssignment_0 = null;

        EObject this_SclPostfixAssignment_1 = null;

        EObject this_Label_2 = null;

        EObject this_Conditional_3 = null;

        EObject this_LegacyConditional_4 = null;

        EObject this_Goto_5 = null;

        EObject this_Parallel_6 = null;

        EObject this_Pause_7 = null;

        EObject this_ModuleCall_8 = null;

        EObject this_ScopeStatement_9 = null;

        EObject this_Return_10 = null;



        	enterRule();

        try {
            // InternalSCL.g:245:2: ( (this_SclAssignment_0= ruleSclAssignment | this_SclPostfixAssignment_1= ruleSclPostfixAssignment | this_Label_2= ruleLabel | this_Conditional_3= ruleConditional | this_LegacyConditional_4= ruleLegacyConditional | this_Goto_5= ruleGoto | this_Parallel_6= ruleParallel | this_Pause_7= rulePause | this_ModuleCall_8= ruleModuleCall | this_ScopeStatement_9= ruleScopeStatement | this_Return_10= ruleReturn ) )
            // InternalSCL.g:246:2: (this_SclAssignment_0= ruleSclAssignment | this_SclPostfixAssignment_1= ruleSclPostfixAssignment | this_Label_2= ruleLabel | this_Conditional_3= ruleConditional | this_LegacyConditional_4= ruleLegacyConditional | this_Goto_5= ruleGoto | this_Parallel_6= ruleParallel | this_Pause_7= rulePause | this_ModuleCall_8= ruleModuleCall | this_ScopeStatement_9= ruleScopeStatement | this_Return_10= ruleReturn )
            {
            // InternalSCL.g:246:2: (this_SclAssignment_0= ruleSclAssignment | this_SclPostfixAssignment_1= ruleSclPostfixAssignment | this_Label_2= ruleLabel | this_Conditional_3= ruleConditional | this_LegacyConditional_4= ruleLegacyConditional | this_Goto_5= ruleGoto | this_Parallel_6= ruleParallel | this_Pause_7= rulePause | this_ModuleCall_8= ruleModuleCall | this_ScopeStatement_9= ruleScopeStatement | this_Return_10= ruleReturn )
            int alt7=11;
            alt7 = dfa7.predict(input);
            switch (alt7) {
                case 1 :
                    // InternalSCL.g:247:3: this_SclAssignment_0= ruleSclAssignment
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getSclAssignmentParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SclAssignment_0=ruleSclAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SclAssignment_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCL.g:259:3: this_SclPostfixAssignment_1= ruleSclPostfixAssignment
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getSclPostfixAssignmentParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_SclPostfixAssignment_1=ruleSclPostfixAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_SclPostfixAssignment_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCL.g:271:3: this_Label_2= ruleLabel
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getLabelParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Label_2=ruleLabel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Label_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCL.g:283:3: this_Conditional_3= ruleConditional
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getConditionalParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Conditional_3=ruleConditional();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Conditional_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCL.g:295:3: this_LegacyConditional_4= ruleLegacyConditional
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getLegacyConditionalParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LegacyConditional_4=ruleLegacyConditional();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LegacyConditional_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSCL.g:307:3: this_Goto_5= ruleGoto
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getGotoParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Goto_5=ruleGoto();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Goto_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalSCL.g:319:3: this_Parallel_6= ruleParallel
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getParallelParserRuleCall_6());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Parallel_6=ruleParallel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Parallel_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalSCL.g:331:3: this_Pause_7= rulePause
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getPauseParserRuleCall_7());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Pause_7=rulePause();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Pause_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalSCL.g:343:3: this_ModuleCall_8= ruleModuleCall
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getModuleCallParserRuleCall_8());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ModuleCall_8=ruleModuleCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ModuleCall_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalSCL.g:355:3: this_ScopeStatement_9= ruleScopeStatement
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getScopeStatementParserRuleCall_9());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ScopeStatement_9=ruleScopeStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ScopeStatement_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalSCL.g:367:3: this_Return_10= ruleReturn
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getReturnParserRuleCall_10());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Return_10=ruleReturn();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Return_10;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRulePause"
    // InternalSCL.g:382:1: entryRulePause returns [EObject current=null] : iv_rulePause= rulePause EOF ;
    public final EObject entryRulePause() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePause = null;


        try {
            // InternalSCL.g:382:46: (iv_rulePause= rulePause EOF )
            // InternalSCL.g:383:2: iv_rulePause= rulePause EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPauseRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePause=rulePause();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePause; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePause"


    // $ANTLR start "rulePause"
    // InternalSCL.g:389:1: rulePause returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'pause' ( (lv_semicolon_3_0= ';' ) )? ) ;
    public final EObject rulePause() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_semicolon_3_0=null;
        EObject lv_annotations_1_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:395:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'pause' ( (lv_semicolon_3_0= ';' ) )? ) )
            // InternalSCL.g:396:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'pause' ( (lv_semicolon_3_0= ';' ) )? )
            {
            // InternalSCL.g:396:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'pause' ( (lv_semicolon_3_0= ';' ) )? )
            // InternalSCL.g:397:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'pause' ( (lv_semicolon_3_0= ';' ) )?
            {
            // InternalSCL.g:397:3: ()
            // InternalSCL.g:398:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getPauseAccess().getPauseAction_0(),
              					current);
              			
            }

            }

            // InternalSCL.g:407:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop8:
            do {
                int alt8=2;
                int LA8_0 = input.LA(1);

                if ( (LA8_0==RULE_COMMENT_ANNOTATION||LA8_0==76) ) {
                    alt8=1;
                }


                switch (alt8) {
            	case 1 :
            	    // InternalSCL.g:408:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:408:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCL.g:409:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPauseAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_10);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPauseRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop8;
                }
            } while (true);

            otherlv_2=(Token)match(input,19,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getPauseAccess().getPauseKeyword_2());
              		
            }
            // InternalSCL.g:430:3: ( (lv_semicolon_3_0= ';' ) )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==20) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // InternalSCL.g:431:4: (lv_semicolon_3_0= ';' )
                    {
                    // InternalSCL.g:431:4: (lv_semicolon_3_0= ';' )
                    // InternalSCL.g:432:5: lv_semicolon_3_0= ';'
                    {
                    lv_semicolon_3_0=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_3_0, grammarAccess.getPauseAccess().getSemicolonSemicolonKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getPauseRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePause"


    // $ANTLR start "entryRuleLabel"
    // InternalSCL.g:448:1: entryRuleLabel returns [EObject current=null] : iv_ruleLabel= ruleLabel EOF ;
    public final EObject entryRuleLabel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLabel = null;


        try {
            // InternalSCL.g:448:46: (iv_ruleLabel= ruleLabel EOF )
            // InternalSCL.g:449:2: iv_ruleLabel= ruleLabel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLabelRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLabel=ruleLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLabel; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLabel"


    // $ANTLR start "ruleLabel"
    // InternalSCL.g:455:1: ruleLabel returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ) ;
    public final EObject ruleLabel() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:461:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' ) )
            // InternalSCL.g:462:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' )
            {
            // InternalSCL.g:462:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':' )
            // InternalSCL.g:463:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_name_1_0= RULE_ID ) ) otherlv_2= ':'
            {
            // InternalSCL.g:463:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop10:
            do {
                int alt10=2;
                int LA10_0 = input.LA(1);

                if ( (LA10_0==RULE_COMMENT_ANNOTATION||LA10_0==76) ) {
                    alt10=1;
                }


                switch (alt10) {
            	case 1 :
            	    // InternalSCL.g:464:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:464:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCL.g:465:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLabelAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_12);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLabelRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop10;
                }
            } while (true);

            // InternalSCL.g:482:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalSCL.g:483:4: (lv_name_1_0= RULE_ID )
            {
            // InternalSCL.g:483:4: (lv_name_1_0= RULE_ID )
            // InternalSCL.g:484:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getLabelRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getLabelAccess().getColonKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLabel"


    // $ANTLR start "entryRuleGoto"
    // InternalSCL.g:508:1: entryRuleGoto returns [EObject current=null] : iv_ruleGoto= ruleGoto EOF ;
    public final EObject entryRuleGoto() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGoto = null;


        try {
            // InternalSCL.g:508:45: (iv_ruleGoto= ruleGoto EOF )
            // InternalSCL.g:509:2: iv_ruleGoto= ruleGoto EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGotoRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleGoto=ruleGoto();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGoto; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGoto"


    // $ANTLR start "ruleGoto"
    // InternalSCL.g:515:1: ruleGoto returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'goto' ( (otherlv_2= RULE_ID ) ) ( (lv_semicolon_3_0= ';' ) )? ) ;
    public final EObject ruleGoto() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_semicolon_3_0=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:521:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'goto' ( (otherlv_2= RULE_ID ) ) ( (lv_semicolon_3_0= ';' ) )? ) )
            // InternalSCL.g:522:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'goto' ( (otherlv_2= RULE_ID ) ) ( (lv_semicolon_3_0= ';' ) )? )
            {
            // InternalSCL.g:522:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'goto' ( (otherlv_2= RULE_ID ) ) ( (lv_semicolon_3_0= ';' ) )? )
            // InternalSCL.g:523:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'goto' ( (otherlv_2= RULE_ID ) ) ( (lv_semicolon_3_0= ';' ) )?
            {
            // InternalSCL.g:523:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop11:
            do {
                int alt11=2;
                int LA11_0 = input.LA(1);

                if ( (LA11_0==RULE_COMMENT_ANNOTATION||LA11_0==76) ) {
                    alt11=1;
                }


                switch (alt11) {
            	case 1 :
            	    // InternalSCL.g:524:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:524:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCL.g:525:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getGotoAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_14);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getGotoRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop11;
                }
            } while (true);

            otherlv_1=(Token)match(input,21,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGotoAccess().getGotoKeyword_1());
              		
            }
            // InternalSCL.g:546:3: ( (otherlv_2= RULE_ID ) )
            // InternalSCL.g:547:4: (otherlv_2= RULE_ID )
            {
            // InternalSCL.g:547:4: (otherlv_2= RULE_ID )
            // InternalSCL.g:548:5: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGotoRule());
              					}
              				
            }
            otherlv_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getGotoAccess().getTargetLabelCrossReference_2_0());
              				
            }

            }


            }

            // InternalSCL.g:562:3: ( (lv_semicolon_3_0= ';' ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==20) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalSCL.g:563:4: (lv_semicolon_3_0= ';' )
                    {
                    // InternalSCL.g:563:4: (lv_semicolon_3_0= ';' )
                    // InternalSCL.g:564:5: lv_semicolon_3_0= ';'
                    {
                    lv_semicolon_3_0=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_3_0, grammarAccess.getGotoAccess().getSemicolonSemicolonKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getGotoRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGoto"


    // $ANTLR start "entryRuleSclAssignment"
    // InternalSCL.g:580:1: entryRuleSclAssignment returns [EObject current=null] : iv_ruleSclAssignment= ruleSclAssignment EOF ;
    public final EObject entryRuleSclAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSclAssignment = null;


        try {
            // InternalSCL.g:580:54: (iv_ruleSclAssignment= ruleSclAssignment EOF )
            // InternalSCL.g:581:2: iv_ruleSclAssignment= ruleSclAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSclAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSclAssignment=ruleSclAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSclAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSclAssignment"


    // $ANTLR start "ruleSclAssignment"
    // InternalSCL.g:587:1: ruleSclAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_6_0= ';' ) )? ) ;
    public final EObject ruleSclAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token lv_semicolon_6_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_schedule_5_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:593:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_6_0= ';' ) )? ) )
            // InternalSCL.g:594:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_6_0= ';' ) )? )
            {
            // InternalSCL.g:594:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_6_0= ';' ) )? )
            // InternalSCL.g:595:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_6_0= ';' ) )?
            {
            // InternalSCL.g:595:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop13:
            do {
                int alt13=2;
                int LA13_0 = input.LA(1);

                if ( (LA13_0==RULE_COMMENT_ANNOTATION||LA13_0==76) ) {
                    alt13=1;
                }


                switch (alt13) {
            	case 1 :
            	    // InternalSCL.g:596:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:596:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCL.g:597:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSclAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_12);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSclAssignmentRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop13;
                }
            } while (true);

            // InternalSCL.g:614:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCL.g:615:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCL.g:615:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCL.g:616:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSclAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_15);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSclAssignmentRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:633:3: ( (lv_operator_2_0= ruleAssignOperator ) )
            // InternalSCL.g:634:4: (lv_operator_2_0= ruleAssignOperator )
            {
            // InternalSCL.g:634:4: (lv_operator_2_0= ruleAssignOperator )
            // InternalSCL.g:635:5: lv_operator_2_0= ruleAssignOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSclAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_16);
            lv_operator_2_0=ruleAssignOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSclAssignmentRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_2_0,
              						"de.cau.cs.kieler.kexpressions.keffects.KEffects.AssignOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:652:3: ( (lv_expression_3_0= ruleExpression ) )
            // InternalSCL.g:653:4: (lv_expression_3_0= ruleExpression )
            {
            // InternalSCL.g:653:4: (lv_expression_3_0= ruleExpression )
            // InternalSCL.g:654:5: lv_expression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSclAssignmentAccess().getExpressionExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_17);
            lv_expression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSclAssignmentRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_3_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:671:3: (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==22) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // InternalSCL.g:672:4: otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_4=(Token)match(input,22,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSclAssignmentAccess().getScheduleKeyword_4_0());
                      			
                    }
                    // InternalSCL.g:676:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
                    int cnt14=0;
                    loop14:
                    do {
                        int alt14=2;
                        alt14 = dfa14.predict(input);
                        switch (alt14) {
                    	case 1 :
                    	    // InternalSCL.g:677:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCL.g:677:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    // InternalSCL.g:678:6: lv_schedule_5_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getSclAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_4_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_18);
                    	    lv_schedule_5_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getSclAssignmentRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_5_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt14 >= 1 ) break loop14;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(14, input);
                                throw eee;
                        }
                        cnt14++;
                    } while (true);


                    }
                    break;

            }

            // InternalSCL.g:696:3: ( (lv_semicolon_6_0= ';' ) )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==20) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // InternalSCL.g:697:4: (lv_semicolon_6_0= ';' )
                    {
                    // InternalSCL.g:697:4: (lv_semicolon_6_0= ';' )
                    // InternalSCL.g:698:5: lv_semicolon_6_0= ';'
                    {
                    lv_semicolon_6_0=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_6_0, grammarAccess.getSclAssignmentAccess().getSemicolonSemicolonKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSclAssignmentRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSclAssignment"


    // $ANTLR start "entryRuleSclPostfixAssignment"
    // InternalSCL.g:714:1: entryRuleSclPostfixAssignment returns [EObject current=null] : iv_ruleSclPostfixAssignment= ruleSclPostfixAssignment EOF ;
    public final EObject entryRuleSclPostfixAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSclPostfixAssignment = null;


        try {
            // InternalSCL.g:714:61: (iv_ruleSclPostfixAssignment= ruleSclPostfixAssignment EOF )
            // InternalSCL.g:715:2: iv_ruleSclPostfixAssignment= ruleSclPostfixAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSclPostfixAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSclPostfixAssignment=ruleSclPostfixAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSclPostfixAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSclPostfixAssignment"


    // $ANTLR start "ruleSclPostfixAssignment"
    // InternalSCL.g:721:1: ruleSclPostfixAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_5_0= ';' ) )? ) ;
    public final EObject ruleSclPostfixAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token lv_semicolon_5_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_schedule_4_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:727:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_5_0= ';' ) )? ) )
            // InternalSCL.g:728:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_5_0= ';' ) )? )
            {
            // InternalSCL.g:728:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_5_0= ';' ) )? )
            // InternalSCL.g:729:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ( (lv_semicolon_5_0= ';' ) )?
            {
            // InternalSCL.g:729:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop17:
            do {
                int alt17=2;
                int LA17_0 = input.LA(1);

                if ( (LA17_0==RULE_COMMENT_ANNOTATION||LA17_0==76) ) {
                    alt17=1;
                }


                switch (alt17) {
            	case 1 :
            	    // InternalSCL.g:730:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:730:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCL.g:731:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSclPostfixAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_12);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSclPostfixAssignmentRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);

            // InternalSCL.g:748:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCL.g:749:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCL.g:749:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCL.g:750:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSclPostfixAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_19);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSclPostfixAssignmentRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:767:3: ( (lv_operator_2_0= rulePostfixOperator ) )
            // InternalSCL.g:768:4: (lv_operator_2_0= rulePostfixOperator )
            {
            // InternalSCL.g:768:4: (lv_operator_2_0= rulePostfixOperator )
            // InternalSCL.g:769:5: lv_operator_2_0= rulePostfixOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSclPostfixAssignmentAccess().getOperatorPostfixOperatorEnumRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_17);
            lv_operator_2_0=rulePostfixOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSclPostfixAssignmentRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_2_0,
              						"de.cau.cs.kieler.kexpressions.keffects.KEffects.PostfixOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:786:3: (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==22) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // InternalSCL.g:787:4: otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_3=(Token)match(input,22,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getSclPostfixAssignmentAccess().getScheduleKeyword_3_0());
                      			
                    }
                    // InternalSCL.g:791:4: ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+
                    int cnt18=0;
                    loop18:
                    do {
                        int alt18=2;
                        alt18 = dfa18.predict(input);
                        switch (alt18) {
                    	case 1 :
                    	    // InternalSCL.g:792:5: (lv_schedule_4_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCL.g:792:5: (lv_schedule_4_0= ruleScheduleObjectReference )
                    	    // InternalSCL.g:793:6: lv_schedule_4_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getSclPostfixAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_18);
                    	    lv_schedule_4_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getSclPostfixAssignmentRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_4_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt18 >= 1 ) break loop18;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(18, input);
                                throw eee;
                        }
                        cnt18++;
                    } while (true);


                    }
                    break;

            }

            // InternalSCL.g:811:3: ( (lv_semicolon_5_0= ';' ) )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==20) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // InternalSCL.g:812:4: (lv_semicolon_5_0= ';' )
                    {
                    // InternalSCL.g:812:4: (lv_semicolon_5_0= ';' )
                    // InternalSCL.g:813:5: lv_semicolon_5_0= ';'
                    {
                    lv_semicolon_5_0=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_5_0, grammarAccess.getSclPostfixAssignmentAccess().getSemicolonSemicolonKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSclPostfixAssignmentRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSclPostfixAssignment"


    // $ANTLR start "entryRuleReturn"
    // InternalSCL.g:829:1: entryRuleReturn returns [EObject current=null] : iv_ruleReturn= ruleReturn EOF ;
    public final EObject entryRuleReturn() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReturn = null;


        try {
            // InternalSCL.g:829:47: (iv_ruleReturn= ruleReturn EOF )
            // InternalSCL.g:830:2: iv_ruleReturn= ruleReturn EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReturnRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReturn=ruleReturn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReturn; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReturn"


    // $ANTLR start "ruleReturn"
    // InternalSCL.g:836:1: ruleReturn returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'return' ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleReturn() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:842:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'return' ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalSCL.g:843:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'return' ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalSCL.g:843:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'return' ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalSCL.g:844:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'return' ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalSCL.g:844:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop21:
            do {
                int alt21=2;
                int LA21_0 = input.LA(1);

                if ( (LA21_0==RULE_COMMENT_ANNOTATION||LA21_0==76) ) {
                    alt21=1;
                }


                switch (alt21) {
            	case 1 :
            	    // InternalSCL.g:845:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:845:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCL.g:846:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReturnAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_20);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReturnRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop21;
                }
            } while (true);

            otherlv_1=(Token)match(input,23,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getReturnAccess().getReturnKeyword_1());
              		
            }
            // InternalSCL.g:867:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSCL.g:868:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalSCL.g:868:4: (lv_expression_2_0= ruleExpression )
            // InternalSCL.g:869:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReturnAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReturnRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReturn"


    // $ANTLR start "entryRuleConditional"
    // InternalSCL.g:890:1: entryRuleConditional returns [EObject current=null] : iv_ruleConditional= ruleConditional EOF ;
    public final EObject entryRuleConditional() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConditional = null;


        try {
            // InternalSCL.g:890:52: (iv_ruleConditional= ruleConditional EOF )
            // InternalSCL.g:891:2: iv_ruleConditional= ruleConditional EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConditionalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleConditional=ruleConditional();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConditional; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConditional"


    // $ANTLR start "ruleConditional"
    // InternalSCL.g:897:1: ruleConditional returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleAtomicExpression ) ) otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )? ) ;
    public final EObject ruleConditional() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token lv_semicolon_8_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;

        EObject lv_declarations_4_0 = null;

        EObject lv_statements_5_0 = null;

        EObject lv_else_7_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:903:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleAtomicExpression ) ) otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )? ) )
            // InternalSCL.g:904:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleAtomicExpression ) ) otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )? )
            {
            // InternalSCL.g:904:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleAtomicExpression ) ) otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )? )
            // InternalSCL.g:905:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleAtomicExpression ) ) otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )?
            {
            // InternalSCL.g:905:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop22:
            do {
                int alt22=2;
                int LA22_0 = input.LA(1);

                if ( (LA22_0==RULE_COMMENT_ANNOTATION||LA22_0==76) ) {
                    alt22=1;
                }


                switch (alt22) {
            	case 1 :
            	    // InternalSCL.g:906:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:906:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCL.g:907:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConditionalAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_21);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConditionalRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop22;
                }
            } while (true);

            otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getConditionalAccess().getIfKeyword_1());
              		
            }
            // InternalSCL.g:928:3: ( (lv_expression_2_0= ruleAtomicExpression ) )
            // InternalSCL.g:929:4: (lv_expression_2_0= ruleAtomicExpression )
            {
            // InternalSCL.g:929:4: (lv_expression_2_0= ruleAtomicExpression )
            // InternalSCL.g:930:5: lv_expression_2_0= ruleAtomicExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConditionalAccess().getExpressionAtomicExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_23);
            lv_expression_2_0=ruleAtomicExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConditionalRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.AtomicExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,25,FollowSets000.FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getConditionalAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalSCL.g:951:3: ( (lv_declarations_4_0= ruleDeclaration ) )*
            loop23:
            do {
                int alt23=2;
                alt23 = dfa23.predict(input);
                switch (alt23) {
            	case 1 :
            	    // InternalSCL.g:952:4: (lv_declarations_4_0= ruleDeclaration )
            	    {
            	    // InternalSCL.g:952:4: (lv_declarations_4_0= ruleDeclaration )
            	    // InternalSCL.g:953:5: lv_declarations_4_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConditionalAccess().getDeclarationsDeclarationParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_24);
            	    lv_declarations_4_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConditionalRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_4_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop23;
                }
            } while (true);

            // InternalSCL.g:970:3: ( (lv_statements_5_0= ruleStatement ) )*
            loop24:
            do {
                int alt24=2;
                int LA24_0 = input.LA(1);

                if ( (LA24_0==RULE_ID||LA24_0==RULE_COMMENT_ANNOTATION||LA24_0==19||LA24_0==21||(LA24_0>=23 && LA24_0<=25)||LA24_0==30||LA24_0==33||LA24_0==76) ) {
                    alt24=1;
                }


                switch (alt24) {
            	case 1 :
            	    // InternalSCL.g:971:4: (lv_statements_5_0= ruleStatement )
            	    {
            	    // InternalSCL.g:971:4: (lv_statements_5_0= ruleStatement )
            	    // InternalSCL.g:972:5: lv_statements_5_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConditionalAccess().getStatementsStatementParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_25);
            	    lv_statements_5_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConditionalRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_5_0,
            	      						"de.cau.cs.kieler.scl.SCL.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop24;
                }
            } while (true);

            otherlv_6=(Token)match(input,26,FollowSets000.FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getConditionalAccess().getRightCurlyBracketKeyword_6());
              		
            }
            // InternalSCL.g:993:3: ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )?
            int alt25=3;
            alt25 = dfa25.predict(input);
            switch (alt25) {
                case 1 :
                    // InternalSCL.g:994:4: ( (lv_else_7_0= ruleElseScope ) )
                    {
                    // InternalSCL.g:994:4: ( (lv_else_7_0= ruleElseScope ) )
                    // InternalSCL.g:995:5: (lv_else_7_0= ruleElseScope )
                    {
                    // InternalSCL.g:995:5: (lv_else_7_0= ruleElseScope )
                    // InternalSCL.g:996:6: lv_else_7_0= ruleElseScope
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConditionalAccess().getElseElseScopeParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_else_7_0=ruleElseScope();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConditionalRule());
                      						}
                      						set(
                      							current,
                      							"else",
                      							lv_else_7_0,
                      							"de.cau.cs.kieler.scl.SCL.ElseScope");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:1014:4: ( (lv_semicolon_8_0= ';' ) )
                    {
                    // InternalSCL.g:1014:4: ( (lv_semicolon_8_0= ';' ) )
                    // InternalSCL.g:1015:5: (lv_semicolon_8_0= ';' )
                    {
                    // InternalSCL.g:1015:5: (lv_semicolon_8_0= ';' )
                    // InternalSCL.g:1016:6: lv_semicolon_8_0= ';'
                    {
                    lv_semicolon_8_0=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_semicolon_8_0, grammarAccess.getConditionalAccess().getSemicolonSemicolonKeyword_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConditionalRule());
                      						}
                      						setWithLastConsumed(current, "semicolon", true, ";");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditional"


    // $ANTLR start "entryRuleElseScope"
    // InternalSCL.g:1033:1: entryRuleElseScope returns [EObject current=null] : iv_ruleElseScope= ruleElseScope EOF ;
    public final EObject entryRuleElseScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleElseScope = null;


        try {
            // InternalSCL.g:1033:50: (iv_ruleElseScope= ruleElseScope EOF )
            // InternalSCL.g:1034:2: iv_ruleElseScope= ruleElseScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElseScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleElseScope=ruleElseScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElseScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleElseScope"


    // $ANTLR start "ruleElseScope"
    // InternalSCL.g:1040:1: ruleElseScope returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( (lv_semicolon_7_0= ';' ) )? ) ;
    public final EObject ruleElseScope() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token lv_semicolon_7_0=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_declarations_4_0 = null;

        EObject lv_statements_5_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:1046:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( (lv_semicolon_7_0= ';' ) )? ) )
            // InternalSCL.g:1047:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( (lv_semicolon_7_0= ';' ) )? )
            {
            // InternalSCL.g:1047:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( (lv_semicolon_7_0= ';' ) )? )
            // InternalSCL.g:1048:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' otherlv_3= '{' ( (lv_declarations_4_0= ruleDeclaration ) )* ( (lv_statements_5_0= ruleStatement ) )* otherlv_6= '}' ( (lv_semicolon_7_0= ';' ) )?
            {
            // InternalSCL.g:1048:3: ()
            // InternalSCL.g:1049:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getElseScopeAccess().getElseScopeAction_0(),
              					current);
              			
            }

            }

            // InternalSCL.g:1058:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( (LA26_0==RULE_COMMENT_ANNOTATION||LA26_0==76) ) {
                    alt26=1;
                }


                switch (alt26) {
            	case 1 :
            	    // InternalSCL.g:1059:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:1059:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCL.g:1060:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getElseScopeAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_27);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getElseScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop26;
                }
            } while (true);

            otherlv_2=(Token)match(input,27,FollowSets000.FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getElseScopeAccess().getElseKeyword_2());
              		
            }
            otherlv_3=(Token)match(input,25,FollowSets000.FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getElseScopeAccess().getLeftCurlyBracketKeyword_3());
              		
            }
            // InternalSCL.g:1085:3: ( (lv_declarations_4_0= ruleDeclaration ) )*
            loop27:
            do {
                int alt27=2;
                alt27 = dfa27.predict(input);
                switch (alt27) {
            	case 1 :
            	    // InternalSCL.g:1086:4: (lv_declarations_4_0= ruleDeclaration )
            	    {
            	    // InternalSCL.g:1086:4: (lv_declarations_4_0= ruleDeclaration )
            	    // InternalSCL.g:1087:5: lv_declarations_4_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getElseScopeAccess().getDeclarationsDeclarationParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_24);
            	    lv_declarations_4_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getElseScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_4_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);

            // InternalSCL.g:1104:3: ( (lv_statements_5_0= ruleStatement ) )*
            loop28:
            do {
                int alt28=2;
                int LA28_0 = input.LA(1);

                if ( (LA28_0==RULE_ID||LA28_0==RULE_COMMENT_ANNOTATION||LA28_0==19||LA28_0==21||(LA28_0>=23 && LA28_0<=25)||LA28_0==30||LA28_0==33||LA28_0==76) ) {
                    alt28=1;
                }


                switch (alt28) {
            	case 1 :
            	    // InternalSCL.g:1105:4: (lv_statements_5_0= ruleStatement )
            	    {
            	    // InternalSCL.g:1105:4: (lv_statements_5_0= ruleStatement )
            	    // InternalSCL.g:1106:5: lv_statements_5_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getElseScopeAccess().getStatementsStatementParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_25);
            	    lv_statements_5_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getElseScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_5_0,
            	      						"de.cau.cs.kieler.scl.SCL.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop28;
                }
            } while (true);

            otherlv_6=(Token)match(input,26,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getElseScopeAccess().getRightCurlyBracketKeyword_6());
              		
            }
            // InternalSCL.g:1127:3: ( (lv_semicolon_7_0= ';' ) )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==20) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // InternalSCL.g:1128:4: (lv_semicolon_7_0= ';' )
                    {
                    // InternalSCL.g:1128:4: (lv_semicolon_7_0= ';' )
                    // InternalSCL.g:1129:5: lv_semicolon_7_0= ';'
                    {
                    lv_semicolon_7_0=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_7_0, grammarAccess.getElseScopeAccess().getSemicolonSemicolonKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getElseScopeRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleElseScope"


    // $ANTLR start "entryRuleLegacyConditional"
    // InternalSCL.g:1145:1: entryRuleLegacyConditional returns [EObject current=null] : iv_ruleLegacyConditional= ruleLegacyConditional EOF ;
    public final EObject entryRuleLegacyConditional() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLegacyConditional = null;


        try {
            // InternalSCL.g:1145:58: (iv_ruleLegacyConditional= ruleLegacyConditional EOF )
            // InternalSCL.g:1146:2: iv_ruleLegacyConditional= ruleLegacyConditional EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLegacyConditionalRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLegacyConditional=ruleLegacyConditional();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLegacyConditional; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLegacyConditional"


    // $ANTLR start "ruleLegacyConditional"
    // InternalSCL.g:1152:1: ruleLegacyConditional returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleBoolExpression ) ) otherlv_3= 'then' ( (lv_statements_4_0= ruleStatement ) )* ( (lv_else_5_0= ruleLegacyElseScope ) )? otherlv_6= 'end' ( (lv_semicolon_7_0= ';' ) )? ) ;
    public final EObject ruleLegacyConditional() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token lv_semicolon_7_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;

        EObject lv_statements_4_0 = null;

        EObject lv_else_5_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:1158:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleBoolExpression ) ) otherlv_3= 'then' ( (lv_statements_4_0= ruleStatement ) )* ( (lv_else_5_0= ruleLegacyElseScope ) )? otherlv_6= 'end' ( (lv_semicolon_7_0= ';' ) )? ) )
            // InternalSCL.g:1159:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleBoolExpression ) ) otherlv_3= 'then' ( (lv_statements_4_0= ruleStatement ) )* ( (lv_else_5_0= ruleLegacyElseScope ) )? otherlv_6= 'end' ( (lv_semicolon_7_0= ';' ) )? )
            {
            // InternalSCL.g:1159:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleBoolExpression ) ) otherlv_3= 'then' ( (lv_statements_4_0= ruleStatement ) )* ( (lv_else_5_0= ruleLegacyElseScope ) )? otherlv_6= 'end' ( (lv_semicolon_7_0= ';' ) )? )
            // InternalSCL.g:1160:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'if' ( (lv_expression_2_0= ruleBoolExpression ) ) otherlv_3= 'then' ( (lv_statements_4_0= ruleStatement ) )* ( (lv_else_5_0= ruleLegacyElseScope ) )? otherlv_6= 'end' ( (lv_semicolon_7_0= ';' ) )?
            {
            // InternalSCL.g:1160:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( (LA30_0==RULE_COMMENT_ANNOTATION||LA30_0==76) ) {
                    alt30=1;
                }


                switch (alt30) {
            	case 1 :
            	    // InternalSCL.g:1161:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:1161:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCL.g:1162:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLegacyConditionalAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_21);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLegacyConditionalRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop30;
                }
            } while (true);

            otherlv_1=(Token)match(input,24,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLegacyConditionalAccess().getIfKeyword_1());
              		
            }
            // InternalSCL.g:1183:3: ( (lv_expression_2_0= ruleBoolExpression ) )
            // InternalSCL.g:1184:4: (lv_expression_2_0= ruleBoolExpression )
            {
            // InternalSCL.g:1184:4: (lv_expression_2_0= ruleBoolExpression )
            // InternalSCL.g:1185:5: lv_expression_2_0= ruleBoolExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getLegacyConditionalAccess().getExpressionBoolExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_28);
            lv_expression_2_0=ruleBoolExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getLegacyConditionalRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.BoolExpression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,28,FollowSets000.FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getLegacyConditionalAccess().getThenKeyword_3());
              		
            }
            // InternalSCL.g:1206:3: ( (lv_statements_4_0= ruleStatement ) )*
            loop31:
            do {
                int alt31=2;
                alt31 = dfa31.predict(input);
                switch (alt31) {
            	case 1 :
            	    // InternalSCL.g:1207:4: (lv_statements_4_0= ruleStatement )
            	    {
            	    // InternalSCL.g:1207:4: (lv_statements_4_0= ruleStatement )
            	    // InternalSCL.g:1208:5: lv_statements_4_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLegacyConditionalAccess().getStatementsStatementParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_29);
            	    lv_statements_4_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLegacyConditionalRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_4_0,
            	      						"de.cau.cs.kieler.scl.SCL.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);

            // InternalSCL.g:1225:3: ( (lv_else_5_0= ruleLegacyElseScope ) )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==RULE_COMMENT_ANNOTATION||LA32_0==27||LA32_0==76) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // InternalSCL.g:1226:4: (lv_else_5_0= ruleLegacyElseScope )
                    {
                    // InternalSCL.g:1226:4: (lv_else_5_0= ruleLegacyElseScope )
                    // InternalSCL.g:1227:5: lv_else_5_0= ruleLegacyElseScope
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLegacyConditionalAccess().getElseLegacyElseScopeParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_30);
                    lv_else_5_0=ruleLegacyElseScope();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLegacyConditionalRule());
                      					}
                      					set(
                      						current,
                      						"else",
                      						lv_else_5_0,
                      						"de.cau.cs.kieler.scl.SCL.LegacyElseScope");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,29,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getLegacyConditionalAccess().getEndKeyword_6());
              		
            }
            // InternalSCL.g:1248:3: ( (lv_semicolon_7_0= ';' ) )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==20) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // InternalSCL.g:1249:4: (lv_semicolon_7_0= ';' )
                    {
                    // InternalSCL.g:1249:4: (lv_semicolon_7_0= ';' )
                    // InternalSCL.g:1250:5: lv_semicolon_7_0= ';'
                    {
                    lv_semicolon_7_0=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_7_0, grammarAccess.getLegacyConditionalAccess().getSemicolonSemicolonKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLegacyConditionalRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLegacyConditional"


    // $ANTLR start "entryRuleLegacyElseScope"
    // InternalSCL.g:1266:1: entryRuleLegacyElseScope returns [EObject current=null] : iv_ruleLegacyElseScope= ruleLegacyElseScope EOF ;
    public final EObject entryRuleLegacyElseScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLegacyElseScope = null;


        try {
            // InternalSCL.g:1266:56: (iv_ruleLegacyElseScope= ruleLegacyElseScope EOF )
            // InternalSCL.g:1267:2: iv_ruleLegacyElseScope= ruleLegacyElseScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLegacyElseScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLegacyElseScope=ruleLegacyElseScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLegacyElseScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLegacyElseScope"


    // $ANTLR start "ruleLegacyElseScope"
    // InternalSCL.g:1273:1: ruleLegacyElseScope returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' ( (lv_statements_3_0= ruleStatement ) )* ) ;
    public final EObject ruleLegacyElseScope() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_statements_3_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:1279:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' ( (lv_statements_3_0= ruleStatement ) )* ) )
            // InternalSCL.g:1280:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' ( (lv_statements_3_0= ruleStatement ) )* )
            {
            // InternalSCL.g:1280:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' ( (lv_statements_3_0= ruleStatement ) )* )
            // InternalSCL.g:1281:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'else' ( (lv_statements_3_0= ruleStatement ) )*
            {
            // InternalSCL.g:1281:3: ()
            // InternalSCL.g:1282:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLegacyElseScopeAccess().getElseScopeAction_0(),
              					current);
              			
            }

            }

            // InternalSCL.g:1291:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==RULE_COMMENT_ANNOTATION||LA34_0==76) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // InternalSCL.g:1292:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:1292:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCL.g:1293:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLegacyElseScopeAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_27);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLegacyElseScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);

            otherlv_2=(Token)match(input,27,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getLegacyElseScopeAccess().getElseKeyword_2());
              		
            }
            // InternalSCL.g:1314:3: ( (lv_statements_3_0= ruleStatement ) )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==RULE_ID||LA35_0==RULE_COMMENT_ANNOTATION||LA35_0==19||LA35_0==21||(LA35_0>=23 && LA35_0<=25)||LA35_0==30||LA35_0==33||LA35_0==76) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // InternalSCL.g:1315:4: (lv_statements_3_0= ruleStatement )
            	    {
            	    // InternalSCL.g:1315:4: (lv_statements_3_0= ruleStatement )
            	    // InternalSCL.g:1316:5: lv_statements_3_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getLegacyElseScopeAccess().getStatementsStatementParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_9);
            	    lv_statements_3_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getLegacyElseScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_3_0,
            	      						"de.cau.cs.kieler.scl.SCL.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLegacyElseScope"


    // $ANTLR start "entryRuleThread"
    // InternalSCL.g:1337:1: entryRuleThread returns [EObject current=null] : iv_ruleThread= ruleThread EOF ;
    public final EObject entryRuleThread() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleThread = null;


        try {
            // InternalSCL.g:1337:47: (iv_ruleThread= ruleThread EOF )
            // InternalSCL.g:1338:2: iv_ruleThread= ruleThread EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getThreadRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleThread=ruleThread();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleThread; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleThread"


    // $ANTLR start "ruleThread"
    // InternalSCL.g:1344:1: ruleThread returns [EObject current=null] : ( () ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* ) ) ;
    public final EObject ruleThread() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_declarations_3_0 = null;

        EObject lv_statements_4_0 = null;

        EObject lv_statements_6_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:1350:2: ( ( () ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* ) ) )
            // InternalSCL.g:1351:2: ( () ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* ) )
            {
            // InternalSCL.g:1351:2: ( () ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* ) )
            // InternalSCL.g:1352:3: () ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* )
            {
            // InternalSCL.g:1352:3: ()
            // InternalSCL.g:1353:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getThreadAccess().getThreadAction_0(),
              					current);
              			
            }

            }

            // InternalSCL.g:1362:3: ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* )
            int alt40=2;
            alt40 = dfa40.predict(input);
            switch (alt40) {
                case 1 :
                    // InternalSCL.g:1363:4: ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
                    {
                    // InternalSCL.g:1363:4: ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
                    // InternalSCL.g:1364:5: ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}'
                    {
                    // InternalSCL.g:1364:5: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop36:
                    do {
                        int alt36=2;
                        int LA36_0 = input.LA(1);

                        if ( (LA36_0==RULE_COMMENT_ANNOTATION||LA36_0==76) ) {
                            alt36=1;
                        }


                        switch (alt36) {
                    	case 1 :
                    	    // InternalSCL.g:1365:6: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalSCL.g:1365:6: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalSCL.g:1366:7: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getThreadAccess().getAnnotationsAnnotationParserRuleCall_1_0_0_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_31);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getThreadRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"annotations",
                    	      								lv_annotations_1_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop36;
                        }
                    } while (true);

                    otherlv_2=(Token)match(input,25,FollowSets000.FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getThreadAccess().getLeftCurlyBracketKeyword_1_0_1());
                      				
                    }
                    // InternalSCL.g:1387:5: ( (lv_declarations_3_0= ruleDeclaration ) )*
                    loop37:
                    do {
                        int alt37=2;
                        alt37 = dfa37.predict(input);
                        switch (alt37) {
                    	case 1 :
                    	    // InternalSCL.g:1388:6: (lv_declarations_3_0= ruleDeclaration )
                    	    {
                    	    // InternalSCL.g:1388:6: (lv_declarations_3_0= ruleDeclaration )
                    	    // InternalSCL.g:1389:7: lv_declarations_3_0= ruleDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getThreadAccess().getDeclarationsDeclarationParserRuleCall_1_0_2_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_24);
                    	    lv_declarations_3_0=ruleDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getThreadRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_3_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop37;
                        }
                    } while (true);

                    // InternalSCL.g:1406:5: ( (lv_statements_4_0= ruleStatement ) )*
                    loop38:
                    do {
                        int alt38=2;
                        int LA38_0 = input.LA(1);

                        if ( (LA38_0==RULE_ID||LA38_0==RULE_COMMENT_ANNOTATION||LA38_0==19||LA38_0==21||(LA38_0>=23 && LA38_0<=25)||LA38_0==30||LA38_0==33||LA38_0==76) ) {
                            alt38=1;
                        }


                        switch (alt38) {
                    	case 1 :
                    	    // InternalSCL.g:1407:6: (lv_statements_4_0= ruleStatement )
                    	    {
                    	    // InternalSCL.g:1407:6: (lv_statements_4_0= ruleStatement )
                    	    // InternalSCL.g:1408:7: lv_statements_4_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getThreadAccess().getStatementsStatementParserRuleCall_1_0_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_25);
                    	    lv_statements_4_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getThreadRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"statements",
                    	      								lv_statements_4_0,
                    	      								"de.cau.cs.kieler.scl.SCL.Statement");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop38;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getThreadAccess().getRightCurlyBracketKeyword_1_0_4());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:1431:4: ( (lv_statements_6_0= ruleStatement ) )*
                    {
                    // InternalSCL.g:1431:4: ( (lv_statements_6_0= ruleStatement ) )*
                    loop39:
                    do {
                        int alt39=2;
                        int LA39_0 = input.LA(1);

                        if ( (LA39_0==RULE_ID||LA39_0==RULE_COMMENT_ANNOTATION||LA39_0==19||LA39_0==21||(LA39_0>=23 && LA39_0<=25)||LA39_0==30||LA39_0==33||LA39_0==76) ) {
                            alt39=1;
                        }


                        switch (alt39) {
                    	case 1 :
                    	    // InternalSCL.g:1432:5: (lv_statements_6_0= ruleStatement )
                    	    {
                    	    // InternalSCL.g:1432:5: (lv_statements_6_0= ruleStatement )
                    	    // InternalSCL.g:1433:6: lv_statements_6_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getThreadAccess().getStatementsStatementParserRuleCall_1_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_9);
                    	    lv_statements_6_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getThreadRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"statements",
                    	      							lv_statements_6_0,
                    	      							"de.cau.cs.kieler.scl.SCL.Statement");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop39;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleThread"


    // $ANTLR start "entryRuleParallel"
    // InternalSCL.g:1455:1: entryRuleParallel returns [EObject current=null] : iv_ruleParallel= ruleParallel EOF ;
    public final EObject entryRuleParallel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParallel = null;


        try {
            // InternalSCL.g:1455:49: (iv_ruleParallel= ruleParallel EOF )
            // InternalSCL.g:1456:2: iv_ruleParallel= ruleParallel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParallelRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleParallel=ruleParallel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParallel; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParallel"


    // $ANTLR start "ruleParallel"
    // InternalSCL.g:1462:1: ruleParallel returns [EObject current=null] : (otherlv_0= 'fork' ( ( (lv_threads_1_0= ruleThread ) ) (otherlv_2= 'par' ( (lv_threads_3_0= ruleThread ) ) )* ) otherlv_4= 'join' ( (lv_semicolon_5_0= ';' ) )? ) ;
    public final EObject ruleParallel() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_semicolon_5_0=null;
        EObject lv_threads_1_0 = null;

        EObject lv_threads_3_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:1468:2: ( (otherlv_0= 'fork' ( ( (lv_threads_1_0= ruleThread ) ) (otherlv_2= 'par' ( (lv_threads_3_0= ruleThread ) ) )* ) otherlv_4= 'join' ( (lv_semicolon_5_0= ';' ) )? ) )
            // InternalSCL.g:1469:2: (otherlv_0= 'fork' ( ( (lv_threads_1_0= ruleThread ) ) (otherlv_2= 'par' ( (lv_threads_3_0= ruleThread ) ) )* ) otherlv_4= 'join' ( (lv_semicolon_5_0= ';' ) )? )
            {
            // InternalSCL.g:1469:2: (otherlv_0= 'fork' ( ( (lv_threads_1_0= ruleThread ) ) (otherlv_2= 'par' ( (lv_threads_3_0= ruleThread ) ) )* ) otherlv_4= 'join' ( (lv_semicolon_5_0= ';' ) )? )
            // InternalSCL.g:1470:3: otherlv_0= 'fork' ( ( (lv_threads_1_0= ruleThread ) ) (otherlv_2= 'par' ( (lv_threads_3_0= ruleThread ) ) )* ) otherlv_4= 'join' ( (lv_semicolon_5_0= ';' ) )?
            {
            otherlv_0=(Token)match(input,30,FollowSets000.FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getParallelAccess().getForkKeyword_0());
              		
            }
            // InternalSCL.g:1474:3: ( ( (lv_threads_1_0= ruleThread ) ) (otherlv_2= 'par' ( (lv_threads_3_0= ruleThread ) ) )* )
            // InternalSCL.g:1475:4: ( (lv_threads_1_0= ruleThread ) ) (otherlv_2= 'par' ( (lv_threads_3_0= ruleThread ) ) )*
            {
            // InternalSCL.g:1475:4: ( (lv_threads_1_0= ruleThread ) )
            // InternalSCL.g:1476:5: (lv_threads_1_0= ruleThread )
            {
            // InternalSCL.g:1476:5: (lv_threads_1_0= ruleThread )
            // InternalSCL.g:1477:6: lv_threads_1_0= ruleThread
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getParallelAccess().getThreadsThreadParserRuleCall_1_0_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_33);
            lv_threads_1_0=ruleThread();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getParallelRule());
              						}
              						add(
              							current,
              							"threads",
              							lv_threads_1_0,
              							"de.cau.cs.kieler.scl.SCL.Thread");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }

            // InternalSCL.g:1494:4: (otherlv_2= 'par' ( (lv_threads_3_0= ruleThread ) ) )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==31) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // InternalSCL.g:1495:5: otherlv_2= 'par' ( (lv_threads_3_0= ruleThread ) )
            	    {
            	    otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_32); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_2, grammarAccess.getParallelAccess().getParKeyword_1_1_0());
            	      				
            	    }
            	    // InternalSCL.g:1499:5: ( (lv_threads_3_0= ruleThread ) )
            	    // InternalSCL.g:1500:6: (lv_threads_3_0= ruleThread )
            	    {
            	    // InternalSCL.g:1500:6: (lv_threads_3_0= ruleThread )
            	    // InternalSCL.g:1501:7: lv_threads_3_0= ruleThread
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getParallelAccess().getThreadsThreadParserRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_33);
            	    lv_threads_3_0=ruleThread();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getParallelRule());
            	      							}
            	      							add(
            	      								current,
            	      								"threads",
            	      								lv_threads_3_0,
            	      								"de.cau.cs.kieler.scl.SCL.Thread");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);


            }

            otherlv_4=(Token)match(input,32,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getParallelAccess().getJoinKeyword_2());
              		
            }
            // InternalSCL.g:1524:3: ( (lv_semicolon_5_0= ';' ) )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==20) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // InternalSCL.g:1525:4: (lv_semicolon_5_0= ';' )
                    {
                    // InternalSCL.g:1525:4: (lv_semicolon_5_0= ';' )
                    // InternalSCL.g:1526:5: lv_semicolon_5_0= ';'
                    {
                    lv_semicolon_5_0=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_5_0, grammarAccess.getParallelAccess().getSemicolonSemicolonKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getParallelRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParallel"


    // $ANTLR start "entryRuleScopeStatement"
    // InternalSCL.g:1542:1: entryRuleScopeStatement returns [EObject current=null] : iv_ruleScopeStatement= ruleScopeStatement EOF ;
    public final EObject entryRuleScopeStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScopeStatement = null;


        try {
            // InternalSCL.g:1542:55: (iv_ruleScopeStatement= ruleScopeStatement EOF )
            // InternalSCL.g:1543:2: iv_ruleScopeStatement= ruleScopeStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeStatementRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScopeStatement=ruleScopeStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScopeStatement; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScopeStatement"


    // $ANTLR start "ruleScopeStatement"
    // InternalSCL.g:1549:1: ruleScopeStatement returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) ;
    public final EObject ruleScopeStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_declarations_3_0 = null;

        EObject lv_statements_4_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:1555:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) )
            // InternalSCL.g:1556:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
            {
            // InternalSCL.g:1556:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
            // InternalSCL.g:1557:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}'
            {
            // InternalSCL.g:1557:3: ()
            // InternalSCL.g:1558:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getScopeStatementAccess().getScopeStatementAction_0(),
              					current);
              			
            }

            }

            // InternalSCL.g:1567:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==RULE_COMMENT_ANNOTATION||LA43_0==76) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // InternalSCL.g:1568:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:1568:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCL.g:1569:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeStatementAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_31);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

            otherlv_2=(Token)match(input,25,FollowSets000.FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScopeStatementAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalSCL.g:1590:3: ( (lv_declarations_3_0= ruleDeclaration ) )*
            loop44:
            do {
                int alt44=2;
                alt44 = dfa44.predict(input);
                switch (alt44) {
            	case 1 :
            	    // InternalSCL.g:1591:4: (lv_declarations_3_0= ruleDeclaration )
            	    {
            	    // InternalSCL.g:1591:4: (lv_declarations_3_0= ruleDeclaration )
            	    // InternalSCL.g:1592:5: lv_declarations_3_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeStatementAccess().getDeclarationsDeclarationParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_24);
            	    lv_declarations_3_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_3_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);

            // InternalSCL.g:1609:3: ( (lv_statements_4_0= ruleStatement ) )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==RULE_ID||LA45_0==RULE_COMMENT_ANNOTATION||LA45_0==19||LA45_0==21||(LA45_0>=23 && LA45_0<=25)||LA45_0==30||LA45_0==33||LA45_0==76) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalSCL.g:1610:4: (lv_statements_4_0= ruleStatement )
            	    {
            	    // InternalSCL.g:1610:4: (lv_statements_4_0= ruleStatement )
            	    // InternalSCL.g:1611:5: lv_statements_4_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeStatementAccess().getStatementsStatementParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_25);
            	    lv_statements_4_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_4_0,
            	      						"de.cau.cs.kieler.scl.SCL.Statement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

            otherlv_5=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getScopeStatementAccess().getRightCurlyBracketKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScopeStatement"


    // $ANTLR start "entryRuleModuleCall"
    // InternalSCL.g:1636:1: entryRuleModuleCall returns [EObject current=null] : iv_ruleModuleCall= ruleModuleCall EOF ;
    public final EObject entryRuleModuleCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModuleCall = null;


        try {
            // InternalSCL.g:1636:51: (iv_ruleModuleCall= ruleModuleCall EOF )
            // InternalSCL.g:1637:2: iv_ruleModuleCall= ruleModuleCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModuleCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleModuleCall=ruleModuleCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModuleCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModuleCall"


    // $ANTLR start "ruleModuleCall"
    // InternalSCL.g:1643:1: ruleModuleCall returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'run' ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleModuleCallParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleModuleCallParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )? ( (lv_semicolon_9_0= ';' ) )? ) ;
    public final EObject ruleModuleCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_semicolon_9_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:1649:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'run' ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleModuleCallParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleModuleCallParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )? ( (lv_semicolon_9_0= ';' ) )? ) )
            // InternalSCL.g:1650:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'run' ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleModuleCallParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleModuleCallParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )? ( (lv_semicolon_9_0= ';' ) )? )
            {
            // InternalSCL.g:1650:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'run' ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleModuleCallParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleModuleCallParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )? ( (lv_semicolon_9_0= ';' ) )? )
            // InternalSCL.g:1651:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'run' ( (otherlv_2= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleModuleCallParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleModuleCallParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )? ( (lv_semicolon_9_0= ';' ) )?
            {
            // InternalSCL.g:1651:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0==RULE_COMMENT_ANNOTATION||LA46_0==76) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // InternalSCL.g:1652:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:1652:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCL.g:1653:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModuleCallAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_34);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModuleCallRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);

            otherlv_1=(Token)match(input,33,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getModuleCallAccess().getRunKeyword_1());
              		
            }
            // InternalSCL.g:1674:3: ( (otherlv_2= RULE_ID ) )
            // InternalSCL.g:1675:4: (otherlv_2= RULE_ID )
            {
            // InternalSCL.g:1675:4: (otherlv_2= RULE_ID )
            // InternalSCL.g:1676:5: otherlv_2= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getModuleCallRule());
              					}
              				
            }
            otherlv_2=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_2, grammarAccess.getModuleCallAccess().getModuleModuleCrossReference_2_0());
              				
            }

            }


            }

            // InternalSCL.g:1690:3: ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleModuleCallParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleModuleCallParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )?
            int alt48=3;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==34) ) {
                alt48=1;
            }
            else if ( (LA48_0==37) ) {
                alt48=2;
            }
            switch (alt48) {
                case 1 :
                    // InternalSCL.g:1691:4: (otherlv_3= '(' ( (lv_parameters_4_0= ruleModuleCallParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleModuleCallParameter ) ) )* otherlv_7= ')' )
                    {
                    // InternalSCL.g:1691:4: (otherlv_3= '(' ( (lv_parameters_4_0= ruleModuleCallParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleModuleCallParameter ) ) )* otherlv_7= ')' )
                    // InternalSCL.g:1692:5: otherlv_3= '(' ( (lv_parameters_4_0= ruleModuleCallParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleModuleCallParameter ) ) )* otherlv_7= ')'
                    {
                    otherlv_3=(Token)match(input,34,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getModuleCallAccess().getLeftParenthesisKeyword_3_0_0());
                      				
                    }
                    // InternalSCL.g:1696:5: ( (lv_parameters_4_0= ruleModuleCallParameter ) )
                    // InternalSCL.g:1697:6: (lv_parameters_4_0= ruleModuleCallParameter )
                    {
                    // InternalSCL.g:1697:6: (lv_parameters_4_0= ruleModuleCallParameter )
                    // InternalSCL.g:1698:7: lv_parameters_4_0= ruleModuleCallParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getModuleCallAccess().getParametersModuleCallParameterParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_37);
                    lv_parameters_4_0=ruleModuleCallParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getModuleCallRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_4_0,
                      								"de.cau.cs.kieler.scl.SCL.ModuleCallParameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCL.g:1715:5: (otherlv_5= ',' ( (lv_parameters_6_0= ruleModuleCallParameter ) ) )*
                    loop47:
                    do {
                        int alt47=2;
                        int LA47_0 = input.LA(1);

                        if ( (LA47_0==35) ) {
                            alt47=1;
                        }


                        switch (alt47) {
                    	case 1 :
                    	    // InternalSCL.g:1716:6: otherlv_5= ',' ( (lv_parameters_6_0= ruleModuleCallParameter ) )
                    	    {
                    	    otherlv_5=(Token)match(input,35,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_5, grammarAccess.getModuleCallAccess().getCommaKeyword_3_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:1720:6: ( (lv_parameters_6_0= ruleModuleCallParameter ) )
                    	    // InternalSCL.g:1721:7: (lv_parameters_6_0= ruleModuleCallParameter )
                    	    {
                    	    // InternalSCL.g:1721:7: (lv_parameters_6_0= ruleModuleCallParameter )
                    	    // InternalSCL.g:1722:8: lv_parameters_6_0= ruleModuleCallParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getModuleCallAccess().getParametersModuleCallParameterParserRuleCall_3_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_37);
                    	    lv_parameters_6_0=ruleModuleCallParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getModuleCallRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_6_0,
                    	      									"de.cau.cs.kieler.scl.SCL.ModuleCallParameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop47;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,36,FollowSets000.FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getModuleCallAccess().getRightParenthesisKeyword_3_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:1746:4: otherlv_8= '()'
                    {
                    otherlv_8=(Token)match(input,37,FollowSets000.FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getModuleCallAccess().getLeftParenthesisRightParenthesisKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSCL.g:1751:3: ( (lv_semicolon_9_0= ';' ) )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==20) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalSCL.g:1752:4: (lv_semicolon_9_0= ';' )
                    {
                    // InternalSCL.g:1752:4: (lv_semicolon_9_0= ';' )
                    // InternalSCL.g:1753:5: lv_semicolon_9_0= ';'
                    {
                    lv_semicolon_9_0=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_semicolon_9_0, grammarAccess.getModuleCallAccess().getSemicolonSemicolonKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getModuleCallRule());
                      					}
                      					setWithLastConsumed(current, "semicolon", true, ";");
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModuleCall"


    // $ANTLR start "entryRuleModuleCallParameter"
    // InternalSCL.g:1769:1: entryRuleModuleCallParameter returns [EObject current=null] : iv_ruleModuleCallParameter= ruleModuleCallParameter EOF ;
    public final EObject entryRuleModuleCallParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModuleCallParameter = null;


        try {
            // InternalSCL.g:1769:60: (iv_ruleModuleCallParameter= ruleModuleCallParameter EOF )
            // InternalSCL.g:1770:2: iv_ruleModuleCallParameter= ruleModuleCallParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModuleCallParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleModuleCallParameter=ruleModuleCallParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModuleCallParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModuleCallParameter"


    // $ANTLR start "ruleModuleCallParameter"
    // InternalSCL.g:1776:1: ruleModuleCallParameter returns [EObject current=null] : ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? ) ;
    public final EObject ruleModuleCallParameter() throws RecognitionException {
        EObject current = null;

        Token lv_pureOutput_0_0=null;
        Token lv_callByReference_1_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_expression_2_0 = null;

        EObject lv_explicitBindingIndices_6_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:1782:2: ( ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? ) )
            // InternalSCL.g:1783:2: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? )
            {
            // InternalSCL.g:1783:2: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )? )
            // InternalSCL.g:1784:3: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )?
            {
            // InternalSCL.g:1784:3: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==38) ) {
                int LA51_1 = input.LA(2);

                if ( (LA51_1==39) ) {
                    alt51=1;
                }
            }
            else if ( (LA51_0==39) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalSCL.g:1785:4: ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) )
                    {
                    // InternalSCL.g:1785:4: ( (lv_pureOutput_0_0= '!' ) )?
                    int alt50=2;
                    int LA50_0 = input.LA(1);

                    if ( (LA50_0==38) ) {
                        alt50=1;
                    }
                    switch (alt50) {
                        case 1 :
                            // InternalSCL.g:1786:5: (lv_pureOutput_0_0= '!' )
                            {
                            // InternalSCL.g:1786:5: (lv_pureOutput_0_0= '!' )
                            // InternalSCL.g:1787:6: lv_pureOutput_0_0= '!'
                            {
                            lv_pureOutput_0_0=(Token)match(input,38,FollowSets000.FOLLOW_38); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_pureOutput_0_0, grammarAccess.getModuleCallParameterAccess().getPureOutputExclamationMarkKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getModuleCallParameterRule());
                              						}
                              						setWithLastConsumed(current, "pureOutput", true, "!");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCL.g:1799:4: ( (lv_callByReference_1_0= '&' ) )
                    // InternalSCL.g:1800:5: (lv_callByReference_1_0= '&' )
                    {
                    // InternalSCL.g:1800:5: (lv_callByReference_1_0= '&' )
                    // InternalSCL.g:1801:6: lv_callByReference_1_0= '&'
                    {
                    lv_callByReference_1_0=(Token)match(input,39,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_callByReference_1_0, grammarAccess.getModuleCallParameterAccess().getCallByReferenceAmpersandKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getModuleCallParameterRule());
                      						}
                      						setWithLastConsumed(current, "callByReference", true, "&");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCL.g:1814:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSCL.g:1815:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalSCL.g:1815:4: (lv_expression_2_0= ruleExpression )
            // InternalSCL.g:1816:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getModuleCallParameterAccess().getExpressionExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_39);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getModuleCallParameterRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:1833:3: (otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )* )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==40) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalSCL.g:1834:4: otherlv_3= 'to' ( (otherlv_4= RULE_ID ) ) (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )*
                    {
                    otherlv_3=(Token)match(input,40,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getModuleCallParameterAccess().getToKeyword_2_0());
                      			
                    }
                    // InternalSCL.g:1838:4: ( (otherlv_4= RULE_ID ) )
                    // InternalSCL.g:1839:5: (otherlv_4= RULE_ID )
                    {
                    // InternalSCL.g:1839:5: (otherlv_4= RULE_ID )
                    // InternalSCL.g:1840:6: otherlv_4= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getModuleCallParameterRule());
                      						}
                      					
                    }
                    otherlv_4=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_4, grammarAccess.getModuleCallParameterAccess().getExplicitBindingValuedObjectCrossReference_2_1_0());
                      					
                    }

                    }


                    }

                    // InternalSCL.g:1854:4: (otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']' )*
                    loop52:
                    do {
                        int alt52=2;
                        int LA52_0 = input.LA(1);

                        if ( (LA52_0==41) ) {
                            alt52=1;
                        }


                        switch (alt52) {
                    	case 1 :
                    	    // InternalSCL.g:1855:5: otherlv_5= '[' ( (lv_explicitBindingIndices_6_0= ruleExpression ) ) otherlv_7= ']'
                    	    {
                    	    otherlv_5=(Token)match(input,41,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getModuleCallParameterAccess().getLeftSquareBracketKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalSCL.g:1859:5: ( (lv_explicitBindingIndices_6_0= ruleExpression ) )
                    	    // InternalSCL.g:1860:6: (lv_explicitBindingIndices_6_0= ruleExpression )
                    	    {
                    	    // InternalSCL.g:1860:6: (lv_explicitBindingIndices_6_0= ruleExpression )
                    	    // InternalSCL.g:1861:7: lv_explicitBindingIndices_6_0= ruleExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getModuleCallParameterAccess().getExplicitBindingIndicesExpressionParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_41);
                    	    lv_explicitBindingIndices_6_0=ruleExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getModuleCallParameterRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"explicitBindingIndices",
                    	      								lv_explicitBindingIndices_6_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }

                    	    otherlv_7=(Token)match(input,42,FollowSets000.FOLLOW_40); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_7, grammarAccess.getModuleCallParameterAccess().getRightSquareBracketKeyword_2_2_2());
                    	      				
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop52;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModuleCallParameter"


    // $ANTLR start "entryRuleMethodDeclaration"
    // InternalSCL.g:1888:1: entryRuleMethodDeclaration returns [EObject current=null] : iv_ruleMethodDeclaration= ruleMethodDeclaration EOF ;
    public final EObject entryRuleMethodDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodDeclaration = null;


        try {
            // InternalSCL.g:1888:58: (iv_ruleMethodDeclaration= ruleMethodDeclaration EOF )
            // InternalSCL.g:1889:2: iv_ruleMethodDeclaration= ruleMethodDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMethodDeclaration=ruleMethodDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodDeclaration"


    // $ANTLR start "ruleMethodDeclaration"
    // InternalSCL.g:1895:1: ruleMethodDeclaration returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= ';' | (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' ) ) ( (lv_annotations_19_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleMethodDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_18=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_returnType_3_0 = null;

        EObject lv_valuedObjects_4_0 = null;

        EObject lv_parameterDeclarations_6_0 = null;

        EObject lv_parameterDeclarations_8_0 = null;

        EObject lv_schedule_12_0 = null;

        EObject lv_annotations_15_0 = null;

        EObject lv_declarations_16_0 = null;

        EObject lv_statements_17_0 = null;

        EObject lv_annotations_19_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:1901:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= ';' | (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' ) ) ( (lv_annotations_19_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCL.g:1902:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= ';' | (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' ) ) ( (lv_annotations_19_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCL.g:1902:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= ';' | (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' ) ) ( (lv_annotations_19_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCL.g:1903:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= ';' | (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' ) ) ( (lv_annotations_19_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCL.g:1903:3: ()
            // InternalSCL.g:1904:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMethodDeclarationAccess().getMethodImplementationDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalSCL.g:1913:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==RULE_COMMENT_ANNOTATION) ) {
                    int LA54_2 = input.LA(2);

                    if ( (synpred65_InternalSCL()) ) {
                        alt54=1;
                    }


                }
                else if ( (LA54_0==76) ) {
                    int LA54_3 = input.LA(2);

                    if ( (LA54_3==RULE_ID) ) {
                        int LA54_5 = input.LA(3);

                        if ( (synpred65_InternalSCL()) ) {
                            alt54=1;
                        }


                    }


                }


                switch (alt54) {
            	case 1 :
            	    // InternalSCL.g:1914:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:1914:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCL.g:1915:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_42);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

            // InternalSCL.g:1932:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( ((LA55_0>=115 && LA55_0<=117)) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // InternalSCL.g:1933:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalSCL.g:1933:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalSCL.g:1934:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_42);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:1951:3: ( (lv_returnType_3_0= ruleMethodReturnType ) )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( ((LA56_0>=106 && LA56_0<=109)||LA56_0==118) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // InternalSCL.g:1952:4: (lv_returnType_3_0= ruleMethodReturnType )
                    {
                    // InternalSCL.g:1952:4: (lv_returnType_3_0= ruleMethodReturnType )
                    // InternalSCL.g:1953:5: lv_returnType_3_0= ruleMethodReturnType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getReturnTypeMethodReturnTypeEnumRuleCall_3_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_42);
                    lv_returnType_3_0=ruleMethodReturnType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"returnType",
                      						lv_returnType_3_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.MethodReturnType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:1970:3: ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) )
            // InternalSCL.g:1971:4: (lv_valuedObjects_4_0= ruleSimpleValuedObject )
            {
            // InternalSCL.g:1971:4: (lv_valuedObjects_4_0= ruleSimpleValuedObject )
            // InternalSCL.g:1972:5: lv_valuedObjects_4_0= ruleSimpleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getValuedObjectsSimpleValuedObjectParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_43);
            lv_valuedObjects_4_0=ruleSimpleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_4_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.SimpleValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:1989:3: ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' )
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==34) ) {
                alt58=1;
            }
            else if ( (LA58_0==37) ) {
                alt58=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 58, 0, input);

                throw nvae;
            }
            switch (alt58) {
                case 1 :
                    // InternalSCL.g:1990:4: (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' )
                    {
                    // InternalSCL.g:1990:4: (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' )
                    // InternalSCL.g:1991:5: otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')'
                    {
                    otherlv_5=(Token)match(input,34,FollowSets000.FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getMethodDeclarationAccess().getLeftParenthesisKeyword_5_0_0());
                      				
                    }
                    // InternalSCL.g:1995:5: ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) )
                    // InternalSCL.g:1996:6: (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon )
                    {
                    // InternalSCL.g:1996:6: (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon )
                    // InternalSCL.g:1997:7: lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getMethodDeclarationAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_37);
                    lv_parameterDeclarations_6_0=ruleVariableDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                      							}
                      							add(
                      								current,
                      								"parameterDeclarations",
                      								lv_parameterDeclarations_6_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCL.g:2014:5: (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )*
                    loop57:
                    do {
                        int alt57=2;
                        int LA57_0 = input.LA(1);

                        if ( (LA57_0==35) ) {
                            alt57=1;
                        }


                        switch (alt57) {
                    	case 1 :
                    	    // InternalSCL.g:2015:6: otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) )
                    	    {
                    	    otherlv_7=(Token)match(input,35,FollowSets000.FOLLOW_44); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_7, grammarAccess.getMethodDeclarationAccess().getCommaKeyword_5_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:2019:6: ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) )
                    	    // InternalSCL.g:2020:7: (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon )
                    	    {
                    	    // InternalSCL.g:2020:7: (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon )
                    	    // InternalSCL.g:2021:8: lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getMethodDeclarationAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_37);
                    	    lv_parameterDeclarations_8_0=ruleVariableDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameterDeclarations",
                    	      									lv_parameterDeclarations_8_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop57;
                        }
                    } while (true);

                    otherlv_9=(Token)match(input,36,FollowSets000.FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getMethodDeclarationAccess().getRightParenthesisKeyword_5_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:2045:4: otherlv_10= '()'
                    {
                    otherlv_10=(Token)match(input,37,FollowSets000.FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getMethodDeclarationAccess().getLeftParenthesisRightParenthesisKeyword_5_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSCL.g:2050:3: (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==22) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // InternalSCL.g:2051:4: otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_11=(Token)match(input,22,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getMethodDeclarationAccess().getScheduleKeyword_6_0());
                      			
                    }
                    // InternalSCL.g:2055:4: ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+
                    int cnt59=0;
                    loop59:
                    do {
                        int alt59=2;
                        int LA59_0 = input.LA(1);

                        if ( (LA59_0==RULE_ID) ) {
                            alt59=1;
                        }


                        switch (alt59) {
                    	case 1 :
                    	    // InternalSCL.g:2056:5: (lv_schedule_12_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCL.g:2056:5: (lv_schedule_12_0= ruleScheduleObjectReference )
                    	    // InternalSCL.g:2057:6: lv_schedule_12_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getMethodDeclarationAccess().getScheduleScheduleObjectReferenceParserRuleCall_6_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_46);
                    	    lv_schedule_12_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_12_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt59 >= 1 ) break loop59;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(59, input);
                                throw eee;
                        }
                        cnt59++;
                    } while (true);


                    }
                    break;

            }

            // InternalSCL.g:2075:3: (otherlv_13= ';' | (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' ) )
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==20) ) {
                alt64=1;
            }
            else if ( (LA64_0==25) ) {
                alt64=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;
            }
            switch (alt64) {
                case 1 :
                    // InternalSCL.g:2076:4: otherlv_13= ';'
                    {
                    otherlv_13=(Token)match(input,20,FollowSets000.FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getMethodDeclarationAccess().getSemicolonKeyword_7_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalSCL.g:2081:4: (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' )
                    {
                    // InternalSCL.g:2081:4: (otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}' )
                    // InternalSCL.g:2082:5: otherlv_14= '{' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_16_0= ruleDeclaration ) )* ( (lv_statements_17_0= ruleStatement ) )* otherlv_18= '}'
                    {
                    otherlv_14=(Token)match(input,25,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_14, grammarAccess.getMethodDeclarationAccess().getLeftCurlyBracketKeyword_7_1_0());
                      				
                    }
                    // InternalSCL.g:2086:5: ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
                    int alt61=2;
                    int LA61_0 = input.LA(1);

                    if ( (LA61_0==RULE_SL_COMMENT_ANNOTATION) ) {
                        alt61=1;
                    }
                    switch (alt61) {
                        case 1 :
                            // InternalSCL.g:2087:6: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                            {
                            // InternalSCL.g:2087:6: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                            // InternalSCL.g:2088:7: lv_annotations_15_0= ruleCommentAnnotatonSL
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_7_1_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_24);
                            lv_annotations_15_0=ruleCommentAnnotatonSL();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                              							}
                              							add(
                              								current,
                              								"annotations",
                              								lv_annotations_15_0,
                              								"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCL.g:2105:5: ( (lv_declarations_16_0= ruleDeclaration ) )*
                    loop62:
                    do {
                        int alt62=2;
                        alt62 = dfa62.predict(input);
                        switch (alt62) {
                    	case 1 :
                    	    // InternalSCL.g:2106:6: (lv_declarations_16_0= ruleDeclaration )
                    	    {
                    	    // InternalSCL.g:2106:6: (lv_declarations_16_0= ruleDeclaration )
                    	    // InternalSCL.g:2107:7: lv_declarations_16_0= ruleDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMethodDeclarationAccess().getDeclarationsDeclarationParserRuleCall_7_1_2_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_24);
                    	    lv_declarations_16_0=ruleDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_16_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop62;
                        }
                    } while (true);

                    // InternalSCL.g:2124:5: ( (lv_statements_17_0= ruleStatement ) )*
                    loop63:
                    do {
                        int alt63=2;
                        int LA63_0 = input.LA(1);

                        if ( (LA63_0==RULE_ID||LA63_0==RULE_COMMENT_ANNOTATION||LA63_0==19||LA63_0==21||(LA63_0>=23 && LA63_0<=25)||LA63_0==30||LA63_0==33||LA63_0==76) ) {
                            alt63=1;
                        }


                        switch (alt63) {
                    	case 1 :
                    	    // InternalSCL.g:2125:6: (lv_statements_17_0= ruleStatement )
                    	    {
                    	    // InternalSCL.g:2125:6: (lv_statements_17_0= ruleStatement )
                    	    // InternalSCL.g:2126:7: lv_statements_17_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMethodDeclarationAccess().getStatementsStatementParserRuleCall_7_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_25);
                    	    lv_statements_17_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"statements",
                    	      								lv_statements_17_0,
                    	      								"de.cau.cs.kieler.scl.SCL.Statement");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop63;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,26,FollowSets000.FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_18, grammarAccess.getMethodDeclarationAccess().getRightCurlyBracketKeyword_7_1_4());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:2149:3: ( (lv_annotations_19_0= ruleCommentAnnotatonSL ) )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // InternalSCL.g:2150:4: (lv_annotations_19_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCL.g:2150:4: (lv_annotations_19_0= ruleCommentAnnotatonSL )
                    // InternalSCL.g:2151:5: lv_annotations_19_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_19_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_19_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodDeclaration"


    // $ANTLR start "entryRuleMethodDeclarationWOSemicolon"
    // InternalSCL.g:2172:1: entryRuleMethodDeclarationWOSemicolon returns [EObject current=null] : iv_ruleMethodDeclarationWOSemicolon= ruleMethodDeclarationWOSemicolon EOF ;
    public final EObject entryRuleMethodDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodDeclarationWOSemicolon = null;


        try {
            // InternalSCL.g:2172:69: (iv_ruleMethodDeclarationWOSemicolon= ruleMethodDeclarationWOSemicolon EOF )
            // InternalSCL.g:2173:2: iv_ruleMethodDeclarationWOSemicolon= ruleMethodDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMethodDeclarationWOSemicolon=ruleMethodDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodDeclarationWOSemicolon"


    // $ANTLR start "ruleMethodDeclarationWOSemicolon"
    // InternalSCL.g:2179:1: ruleMethodDeclarationWOSemicolon returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclarationWOSemicolon ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}' )? ) ;
    public final EObject ruleMethodDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_17=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_returnType_3_0 = null;

        EObject lv_valuedObjects_4_0 = null;

        EObject lv_parameterDeclarations_6_0 = null;

        EObject lv_parameterDeclarations_8_0 = null;

        EObject lv_schedule_12_0 = null;

        EObject lv_annotations_14_0 = null;

        EObject lv_declarations_15_0 = null;

        EObject lv_statements_16_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:2185:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclarationWOSemicolon ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}' )? ) )
            // InternalSCL.g:2186:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclarationWOSemicolon ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}' )? )
            {
            // InternalSCL.g:2186:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclarationWOSemicolon ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}' )? )
            // InternalSCL.g:2187:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? (otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclarationWOSemicolon ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}' )?
            {
            // InternalSCL.g:2187:3: ()
            // InternalSCL.g:2188:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMethodDeclarationWOSemicolonAccess().getMethodImplementationDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalSCL.g:2197:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==RULE_COMMENT_ANNOTATION) ) {
                    int LA66_2 = input.LA(2);

                    if ( (synpred77_InternalSCL()) ) {
                        alt66=1;
                    }


                }
                else if ( (LA66_0==76) ) {
                    int LA66_3 = input.LA(2);

                    if ( (LA66_3==RULE_ID) ) {
                        int LA66_5 = input.LA(3);

                        if ( (synpred77_InternalSCL()) ) {
                            alt66=1;
                        }


                    }


                }


                switch (alt66) {
            	case 1 :
            	    // InternalSCL.g:2198:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:2198:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCL.g:2199:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_42);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            // InternalSCL.g:2216:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( ((LA67_0>=115 && LA67_0<=117)) ) {
                alt67=1;
            }
            switch (alt67) {
                case 1 :
                    // InternalSCL.g:2217:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalSCL.g:2217:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalSCL.g:2218:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_42);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:2235:3: ( (lv_returnType_3_0= ruleMethodReturnType ) )?
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( ((LA68_0>=106 && LA68_0<=109)||LA68_0==118) ) {
                alt68=1;
            }
            switch (alt68) {
                case 1 :
                    // InternalSCL.g:2236:4: (lv_returnType_3_0= ruleMethodReturnType )
                    {
                    // InternalSCL.g:2236:4: (lv_returnType_3_0= ruleMethodReturnType )
                    // InternalSCL.g:2237:5: lv_returnType_3_0= ruleMethodReturnType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getReturnTypeMethodReturnTypeEnumRuleCall_3_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_42);
                    lv_returnType_3_0=ruleMethodReturnType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"returnType",
                      						lv_returnType_3_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.MethodReturnType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:2254:3: ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) )
            // InternalSCL.g:2255:4: (lv_valuedObjects_4_0= ruleSimpleValuedObject )
            {
            // InternalSCL.g:2255:4: (lv_valuedObjects_4_0= ruleSimpleValuedObject )
            // InternalSCL.g:2256:5: lv_valuedObjects_4_0= ruleSimpleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getValuedObjectsSimpleValuedObjectParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_43);
            lv_valuedObjects_4_0=ruleSimpleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_4_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.SimpleValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:2273:3: ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' )
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==34) ) {
                alt70=1;
            }
            else if ( (LA70_0==37) ) {
                alt70=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }
            switch (alt70) {
                case 1 :
                    // InternalSCL.g:2274:4: (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' )
                    {
                    // InternalSCL.g:2274:4: (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' )
                    // InternalSCL.g:2275:5: otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')'
                    {
                    otherlv_5=(Token)match(input,34,FollowSets000.FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getMethodDeclarationWOSemicolonAccess().getLeftParenthesisKeyword_5_0_0());
                      				
                    }
                    // InternalSCL.g:2279:5: ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) )
                    // InternalSCL.g:2280:6: (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon )
                    {
                    // InternalSCL.g:2280:6: (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon )
                    // InternalSCL.g:2281:7: lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_37);
                    lv_parameterDeclarations_6_0=ruleVariableDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                      							}
                      							add(
                      								current,
                      								"parameterDeclarations",
                      								lv_parameterDeclarations_6_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCL.g:2298:5: (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )*
                    loop69:
                    do {
                        int alt69=2;
                        int LA69_0 = input.LA(1);

                        if ( (LA69_0==35) ) {
                            alt69=1;
                        }


                        switch (alt69) {
                    	case 1 :
                    	    // InternalSCL.g:2299:6: otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) )
                    	    {
                    	    otherlv_7=(Token)match(input,35,FollowSets000.FOLLOW_44); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_7, grammarAccess.getMethodDeclarationWOSemicolonAccess().getCommaKeyword_5_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:2303:6: ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) )
                    	    // InternalSCL.g:2304:7: (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon )
                    	    {
                    	    // InternalSCL.g:2304:7: (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon )
                    	    // InternalSCL.g:2305:8: lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_37);
                    	    lv_parameterDeclarations_8_0=ruleVariableDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameterDeclarations",
                    	      									lv_parameterDeclarations_8_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop69;
                        }
                    } while (true);

                    otherlv_9=(Token)match(input,36,FollowSets000.FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getMethodDeclarationWOSemicolonAccess().getRightParenthesisKeyword_5_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:2329:4: otherlv_10= '()'
                    {
                    otherlv_10=(Token)match(input,37,FollowSets000.FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getMethodDeclarationWOSemicolonAccess().getLeftParenthesisRightParenthesisKeyword_5_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSCL.g:2334:3: (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )?
            int alt72=2;
            alt72 = dfa72.predict(input);
            switch (alt72) {
                case 1 :
                    // InternalSCL.g:2335:4: otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_11=(Token)match(input,22,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getMethodDeclarationWOSemicolonAccess().getScheduleKeyword_6_0());
                      			
                    }
                    // InternalSCL.g:2339:4: ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+
                    int cnt71=0;
                    loop71:
                    do {
                        int alt71=2;
                        alt71 = dfa71.predict(input);
                        switch (alt71) {
                    	case 1 :
                    	    // InternalSCL.g:2340:5: (lv_schedule_12_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCL.g:2340:5: (lv_schedule_12_0= ruleScheduleObjectReference )
                    	    // InternalSCL.g:2341:6: lv_schedule_12_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getScheduleScheduleObjectReferenceParserRuleCall_6_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_50);
                    	    lv_schedule_12_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_12_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt71 >= 1 ) break loop71;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(71, input);
                                throw eee;
                        }
                        cnt71++;
                    } while (true);


                    }
                    break;

            }

            // InternalSCL.g:2359:3: (otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclarationWOSemicolon ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}' )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==25) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalSCL.g:2360:4: otherlv_13= '{' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ( (lv_declarations_15_0= ruleDeclarationWOSemicolon ) )* ( (lv_statements_16_0= ruleStatement ) )* otherlv_17= '}'
                    {
                    otherlv_13=(Token)match(input,25,FollowSets000.FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getMethodDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_7_0());
                      			
                    }
                    // InternalSCL.g:2364:4: ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )?
                    int alt73=2;
                    int LA73_0 = input.LA(1);

                    if ( (LA73_0==RULE_SL_COMMENT_ANNOTATION) ) {
                        alt73=1;
                    }
                    switch (alt73) {
                        case 1 :
                            // InternalSCL.g:2365:5: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                            {
                            // InternalSCL.g:2365:5: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                            // InternalSCL.g:2366:6: lv_annotations_14_0= ruleCommentAnnotatonSL
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_7_1_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_24);
                            lv_annotations_14_0=ruleCommentAnnotatonSL();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                              						}
                              						add(
                              							current,
                              							"annotations",
                              							lv_annotations_14_0,
                              							"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCL.g:2383:4: ( (lv_declarations_15_0= ruleDeclarationWOSemicolon ) )*
                    loop74:
                    do {
                        int alt74=2;
                        alt74 = dfa74.predict(input);
                        switch (alt74) {
                    	case 1 :
                    	    // InternalSCL.g:2384:5: (lv_declarations_15_0= ruleDeclarationWOSemicolon )
                    	    {
                    	    // InternalSCL.g:2384:5: (lv_declarations_15_0= ruleDeclarationWOSemicolon )
                    	    // InternalSCL.g:2385:6: lv_declarations_15_0= ruleDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_7_2_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_24);
                    	    lv_declarations_15_0=ruleDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"declarations",
                    	      							lv_declarations_15_0,
                    	      							"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop74;
                        }
                    } while (true);

                    // InternalSCL.g:2402:4: ( (lv_statements_16_0= ruleStatement ) )*
                    loop75:
                    do {
                        int alt75=2;
                        int LA75_0 = input.LA(1);

                        if ( (LA75_0==RULE_ID||LA75_0==RULE_COMMENT_ANNOTATION||LA75_0==19||LA75_0==21||(LA75_0>=23 && LA75_0<=25)||LA75_0==30||LA75_0==33||LA75_0==76) ) {
                            alt75=1;
                        }


                        switch (alt75) {
                    	case 1 :
                    	    // InternalSCL.g:2403:5: (lv_statements_16_0= ruleStatement )
                    	    {
                    	    // InternalSCL.g:2403:5: (lv_statements_16_0= ruleStatement )
                    	    // InternalSCL.g:2404:6: lv_statements_16_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getStatementsStatementParserRuleCall_7_3_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_25);
                    	    lv_statements_16_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"statements",
                    	      							lv_statements_16_0,
                    	      							"de.cau.cs.kieler.scl.SCL.Statement");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop75;
                        }
                    } while (true);

                    otherlv_17=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getMethodDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_7_4());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodDeclarationWOSemicolon"


    // $ANTLR start "entryRuleRootScope"
    // InternalSCL.g:2430:1: entryRuleRootScope returns [EObject current=null] : iv_ruleRootScope= ruleRootScope EOF ;
    public final EObject entryRuleRootScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRootScope = null;


        try {
            // InternalSCL.g:2430:50: (iv_ruleRootScope= ruleRootScope EOF )
            // InternalSCL.g:2431:2: iv_ruleRootScope= ruleRootScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRootScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRootScope=ruleRootScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRootScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRootScope"


    // $ANTLR start "ruleRootScope"
    // InternalSCL.g:2437:1: ruleRootScope returns [EObject current=null] : ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* ) ;
    public final EObject ruleRootScope() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject lv_declarations_1_0 = null;

        EObject lv_entities_2_0 = null;

        EObject lv_scopes_4_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:2443:2: ( ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* ) )
            // InternalSCL.g:2444:2: ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* )
            {
            // InternalSCL.g:2444:2: ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* )
            // InternalSCL.g:2445:3: () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )*
            {
            // InternalSCL.g:2445:3: ()
            // InternalSCL.g:2446:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRootScopeAccess().getKExtScopeAction_0(),
              					current);
              			
            }

            }

            // InternalSCL.g:2455:3: ( (lv_declarations_1_0= ruleDeclaration ) )*
            loop77:
            do {
                int alt77=2;
                alt77 = dfa77.predict(input);
                switch (alt77) {
            	case 1 :
            	    // InternalSCL.g:2456:4: (lv_declarations_1_0= ruleDeclaration )
            	    {
            	    // InternalSCL.g:2456:4: (lv_declarations_1_0= ruleDeclaration )
            	    // InternalSCL.g:2457:5: lv_declarations_1_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRootScopeAccess().getDeclarationsDeclarationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_51);
            	    lv_declarations_1_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);

            // InternalSCL.g:2474:3: ( (lv_entities_2_0= ruleTestEntity ) )*
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( (LA78_0==RULE_ID||LA78_0==RULE_HOSTCODE||LA78_0==RULE_COMMENT_ANNOTATION||LA78_0==44||LA78_0==53||(LA78_0>=57 && LA78_0<=58)||LA78_0==76) ) {
                    alt78=1;
                }


                switch (alt78) {
            	case 1 :
            	    // InternalSCL.g:2475:4: (lv_entities_2_0= ruleTestEntity )
            	    {
            	    // InternalSCL.g:2475:4: (lv_entities_2_0= ruleTestEntity )
            	    // InternalSCL.g:2476:5: lv_entities_2_0= ruleTestEntity
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRootScopeAccess().getEntitiesTestEntityParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_52);
            	    lv_entities_2_0=ruleTestEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"entities",
            	      						lv_entities_2_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.TestEntity");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);

            // InternalSCL.g:2493:3: (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )*
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==43) ) {
                    alt79=1;
                }


                switch (alt79) {
            	case 1 :
            	    // InternalSCL.g:2494:4: otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) )
            	    {
            	    otherlv_3=(Token)match(input,43,FollowSets000.FOLLOW_53); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getRootScopeAccess().getScopeKeyword_3_0());
            	      			
            	    }
            	    // InternalSCL.g:2498:4: ( (lv_scopes_4_0= ruleScope ) )
            	    // InternalSCL.g:2499:5: (lv_scopes_4_0= ruleScope )
            	    {
            	    // InternalSCL.g:2499:5: (lv_scopes_4_0= ruleScope )
            	    // InternalSCL.g:2500:6: lv_scopes_4_0= ruleScope
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRootScopeAccess().getScopesScopeParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_54);
            	    lv_scopes_4_0=ruleScope();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"scopes",
            	      							lv_scopes_4_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.Scope");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRootScope"


    // $ANTLR start "entryRuleScope"
    // InternalSCL.g:2522:1: entryRuleScope returns [EObject current=null] : iv_ruleScope= ruleScope EOF ;
    public final EObject entryRuleScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScope = null;


        try {
            // InternalSCL.g:2522:46: (iv_ruleScope= ruleScope EOF )
            // InternalSCL.g:2523:2: iv_ruleScope= ruleScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScope=ruleScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScope"


    // $ANTLR start "ruleScope"
    // InternalSCL.g:2529:1: ruleScope returns [EObject current=null] : ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' ) ;
    public final EObject ruleScope() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_declarations_3_0 = null;

        EObject lv_entities_4_0 = null;

        EObject lv_scopes_6_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:2535:2: ( ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' ) )
            // InternalSCL.g:2536:2: ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' )
            {
            // InternalSCL.g:2536:2: ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' )
            // InternalSCL.g:2537:3: () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}'
            {
            // InternalSCL.g:2537:3: ()
            // InternalSCL.g:2538:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getScopeAccess().getKExtScopeAction_0(),
              					current);
              			
            }

            }

            // InternalSCL.g:2547:3: ( (lv_name_1_0= RULE_ID ) )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==RULE_ID) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalSCL.g:2548:4: (lv_name_1_0= RULE_ID )
                    {
                    // InternalSCL.g:2548:4: (lv_name_1_0= RULE_ID )
                    // InternalSCL.g:2549:5: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_1_0, grammarAccess.getScopeAccess().getNameIDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScopeRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"de.cau.cs.kieler.annotations.Annotations.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,25,FollowSets000.FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScopeAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalSCL.g:2569:3: ( (lv_declarations_3_0= ruleDeclaration ) )*
            loop81:
            do {
                int alt81=2;
                alt81 = dfa81.predict(input);
                switch (alt81) {
            	case 1 :
            	    // InternalSCL.g:2570:4: (lv_declarations_3_0= ruleDeclaration )
            	    {
            	    // InternalSCL.g:2570:4: (lv_declarations_3_0= ruleDeclaration )
            	    // InternalSCL.g:2571:5: lv_declarations_3_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeAccess().getDeclarationsDeclarationParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_55);
            	    lv_declarations_3_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_3_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop81;
                }
            } while (true);

            // InternalSCL.g:2588:3: ( (lv_entities_4_0= ruleTestEntity ) )*
            loop82:
            do {
                int alt82=2;
                int LA82_0 = input.LA(1);

                if ( (LA82_0==RULE_ID||LA82_0==RULE_HOSTCODE||LA82_0==RULE_COMMENT_ANNOTATION||LA82_0==44||LA82_0==53||(LA82_0>=57 && LA82_0<=58)||LA82_0==76) ) {
                    alt82=1;
                }


                switch (alt82) {
            	case 1 :
            	    // InternalSCL.g:2589:4: (lv_entities_4_0= ruleTestEntity )
            	    {
            	    // InternalSCL.g:2589:4: (lv_entities_4_0= ruleTestEntity )
            	    // InternalSCL.g:2590:5: lv_entities_4_0= ruleTestEntity
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeAccess().getEntitiesTestEntityParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_56);
            	    lv_entities_4_0=ruleTestEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"entities",
            	      						lv_entities_4_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.TestEntity");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);

            // InternalSCL.g:2607:3: (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )*
            loop83:
            do {
                int alt83=2;
                int LA83_0 = input.LA(1);

                if ( (LA83_0==43) ) {
                    alt83=1;
                }


                switch (alt83) {
            	case 1 :
            	    // InternalSCL.g:2608:4: otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) )
            	    {
            	    otherlv_5=(Token)match(input,43,FollowSets000.FOLLOW_53); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getScopeAccess().getScopeKeyword_5_0());
            	      			
            	    }
            	    // InternalSCL.g:2612:4: ( (lv_scopes_6_0= ruleScope ) )
            	    // InternalSCL.g:2613:5: (lv_scopes_6_0= ruleScope )
            	    {
            	    // InternalSCL.g:2613:5: (lv_scopes_6_0= ruleScope )
            	    // InternalSCL.g:2614:6: lv_scopes_6_0= ruleScope
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScopeAccess().getScopesScopeParserRuleCall_5_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_57);
            	    lv_scopes_6_0=ruleScope();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getScopeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"scopes",
            	      							lv_scopes_6_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.Scope");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop83;
                }
            } while (true);

            otherlv_7=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getScopeAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScope"


    // $ANTLR start "entryRuleTestEntity"
    // InternalSCL.g:2640:1: entryRuleTestEntity returns [EObject current=null] : iv_ruleTestEntity= ruleTestEntity EOF ;
    public final EObject entryRuleTestEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTestEntity = null;


        try {
            // InternalSCL.g:2640:51: (iv_ruleTestEntity= ruleTestEntity EOF )
            // InternalSCL.g:2641:2: iv_ruleTestEntity= ruleTestEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTestEntityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTestEntity=ruleTestEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTestEntity; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTestEntity"


    // $ANTLR start "ruleTestEntity"
    // InternalSCL.g:2647:1: ruleTestEntity returns [EObject current=null] : ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) ) ;
    public final EObject ruleTestEntity() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_0 = null;

        EObject lv_effect_1_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:2653:2: ( ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) ) )
            // InternalSCL.g:2654:2: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) )
            {
            // InternalSCL.g:2654:2: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) | ( (lv_effect_1_0= ruleEffect ) ) )
            int alt84=2;
            switch ( input.LA(1) ) {
            case RULE_COMMENT_ANNOTATION:
                {
                int LA84_1 = input.LA(2);

                if ( (synpred95_InternalSCL()) ) {
                    alt84=1;
                }
                else if ( (true) ) {
                    alt84=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 84, 1, input);

                    throw nvae;
                }
                }
                break;
            case 76:
                {
                int LA84_2 = input.LA(2);

                if ( (synpred95_InternalSCL()) ) {
                    alt84=1;
                }
                else if ( (true) ) {
                    alt84=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 84, 2, input);

                    throw nvae;
                }
                }
                break;
            case 44:
                {
                alt84=1;
                }
                break;
            case RULE_ID:
            case RULE_HOSTCODE:
            case 53:
            case 57:
            case 58:
                {
                alt84=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 84, 0, input);

                throw nvae;
            }

            switch (alt84) {
                case 1 :
                    // InternalSCL.g:2655:3: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
                    {
                    // InternalSCL.g:2655:3: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
                    // InternalSCL.g:2656:4: (lv_expression_0_0= ruleAnnotatedExpression )
                    {
                    // InternalSCL.g:2656:4: (lv_expression_0_0= ruleAnnotatedExpression )
                    // InternalSCL.g:2657:5: lv_expression_0_0= ruleAnnotatedExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedExpressionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_0_0=ruleAnnotatedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTestEntityRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_0_0,
                      						"de.cau.cs.kieler.kexpressions.kext.KExt.AnnotatedExpression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:2675:3: ( (lv_effect_1_0= ruleEffect ) )
                    {
                    // InternalSCL.g:2675:3: ( (lv_effect_1_0= ruleEffect ) )
                    // InternalSCL.g:2676:4: (lv_effect_1_0= ruleEffect )
                    {
                    // InternalSCL.g:2676:4: (lv_effect_1_0= ruleEffect )
                    // InternalSCL.g:2677:5: lv_effect_1_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTestEntityAccess().getEffectEffectParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_effect_1_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTestEntityRule());
                      					}
                      					set(
                      						current,
                      						"effect",
                      						lv_effect_1_0,
                      						"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTestEntity"


    // $ANTLR start "entryRuleAnnotatedExpression"
    // InternalSCL.g:2698:1: entryRuleAnnotatedExpression returns [EObject current=null] : iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF ;
    public final EObject entryRuleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedExpression = null;


        try {
            // InternalSCL.g:2698:60: (iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF )
            // InternalSCL.g:2699:2: iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotatedExpression=ruleAnnotatedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotatedExpression"


    // $ANTLR start "ruleAnnotatedExpression"
    // InternalSCL.g:2705:1: ruleAnnotatedExpression returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:2711:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalSCL.g:2712:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalSCL.g:2712:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalSCL.g:2713:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalSCL.g:2713:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop85:
            do {
                int alt85=2;
                int LA85_0 = input.LA(1);

                if ( (LA85_0==RULE_COMMENT_ANNOTATION||LA85_0==76) ) {
                    alt85=1;
                }


                switch (alt85) {
            	case 1 :
            	    // InternalSCL.g:2714:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:2714:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCL.g:2715:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_58);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop85;
                }
            } while (true);

            otherlv_1=(Token)match(input,44,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAnnotatedExpressionAccess().getExpressionKeyword_1());
              		
            }
            // InternalSCL.g:2736:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSCL.g:2737:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalSCL.g:2737:4: (lv_expression_2_0= ruleExpression )
            // InternalSCL.g:2738:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotatedExpression"


    // $ANTLR start "entryRuleDeclaration"
    // InternalSCL.g:2759:1: entryRuleDeclaration returns [EObject current=null] : iv_ruleDeclaration= ruleDeclaration EOF ;
    public final EObject entryRuleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclaration = null;


        try {
            // InternalSCL.g:2759:52: (iv_ruleDeclaration= ruleDeclaration EOF )
            // InternalSCL.g:2760:2: iv_ruleDeclaration= ruleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclaration=ruleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclaration"


    // $ANTLR start "ruleDeclaration"
    // InternalSCL.g:2766:1: ruleDeclaration returns [EObject current=null] : (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_StructDeclaration_3= ruleStructDeclaration | this_ClassDeclaration_4= ruleClassDeclaration ) ;
    public final EObject ruleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclaration_0 = null;

        EObject this_ReferenceDeclaration_1 = null;

        EObject this_ScheduleDeclaration_2 = null;

        EObject this_StructDeclaration_3 = null;

        EObject this_ClassDeclaration_4 = null;



        	enterRule();

        try {
            // InternalSCL.g:2772:2: ( (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_StructDeclaration_3= ruleStructDeclaration | this_ClassDeclaration_4= ruleClassDeclaration ) )
            // InternalSCL.g:2773:2: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_StructDeclaration_3= ruleStructDeclaration | this_ClassDeclaration_4= ruleClassDeclaration )
            {
            // InternalSCL.g:2773:2: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_StructDeclaration_3= ruleStructDeclaration | this_ClassDeclaration_4= ruleClassDeclaration )
            int alt86=5;
            alt86 = dfa86.predict(input);
            switch (alt86) {
                case 1 :
                    // InternalSCL.g:2774:3: this_VariableDeclaration_0= ruleVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getVariableDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VariableDeclaration_0=ruleVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VariableDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCL.g:2786:3: this_ReferenceDeclaration_1= ruleReferenceDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getReferenceDeclarationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceDeclaration_1=ruleReferenceDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceDeclaration_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCL.g:2798:3: this_ScheduleDeclaration_2= ruleScheduleDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getScheduleDeclarationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ScheduleDeclaration_2=ruleScheduleDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ScheduleDeclaration_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCL.g:2810:3: this_StructDeclaration_3= ruleStructDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getStructDeclarationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StructDeclaration_3=ruleStructDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StructDeclaration_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCL.g:2822:3: this_ClassDeclaration_4= ruleClassDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getClassDeclarationParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ClassDeclaration_4=ruleClassDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ClassDeclaration_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclaration"


    // $ANTLR start "entryRuleDeclarationWOSemicolon"
    // InternalSCL.g:2837:1: entryRuleDeclarationWOSemicolon returns [EObject current=null] : iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF ;
    public final EObject entryRuleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclarationWOSemicolon = null;


        try {
            // InternalSCL.g:2837:63: (iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF )
            // InternalSCL.g:2838:2: iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclarationWOSemicolon=ruleDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclarationWOSemicolon"


    // $ANTLR start "ruleDeclarationWOSemicolon"
    // InternalSCL.g:2844:1: ruleDeclarationWOSemicolon returns [EObject current=null] : (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_StructDeclarationWOSemicolon_3= ruleStructDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_4= ruleClassDeclarationWOSemicolon ) ;
    public final EObject ruleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationWOSemicolon_0 = null;

        EObject this_ReferenceDeclarationWOSemicolon_1 = null;

        EObject this_ScheduleDeclarationWOSemicolon_2 = null;

        EObject this_StructDeclarationWOSemicolon_3 = null;

        EObject this_ClassDeclarationWOSemicolon_4 = null;



        	enterRule();

        try {
            // InternalSCL.g:2850:2: ( (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_StructDeclarationWOSemicolon_3= ruleStructDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_4= ruleClassDeclarationWOSemicolon ) )
            // InternalSCL.g:2851:2: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_StructDeclarationWOSemicolon_3= ruleStructDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_4= ruleClassDeclarationWOSemicolon )
            {
            // InternalSCL.g:2851:2: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_StructDeclarationWOSemicolon_3= ruleStructDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_4= ruleClassDeclarationWOSemicolon )
            int alt87=5;
            alt87 = dfa87.predict(input);
            switch (alt87) {
                case 1 :
                    // InternalSCL.g:2852:3: this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getVariableDeclarationWOSemicolonParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VariableDeclarationWOSemicolon_0=ruleVariableDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VariableDeclarationWOSemicolon_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCL.g:2864:3: this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getReferenceDeclarationWOSemicolonParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceDeclarationWOSemicolon_1=ruleReferenceDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceDeclarationWOSemicolon_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCL.g:2876:3: this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getScheduleDeclarationWOSemicolonParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ScheduleDeclarationWOSemicolon_2=ruleScheduleDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ScheduleDeclarationWOSemicolon_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCL.g:2888:3: this_StructDeclarationWOSemicolon_3= ruleStructDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getStructDeclarationWOSemicolonParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StructDeclarationWOSemicolon_3=ruleStructDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StructDeclarationWOSemicolon_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCL.g:2900:3: this_ClassDeclarationWOSemicolon_4= ruleClassDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getClassDeclarationWOSemicolonParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ClassDeclarationWOSemicolon_4=ruleClassDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ClassDeclarationWOSemicolon_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclarationWOSemicolon"


    // $ANTLR start "entryRuleVariableDeclaration"
    // InternalSCL.g:2915:1: entryRuleVariableDeclaration returns [EObject current=null] : iv_ruleVariableDeclaration= ruleVariableDeclaration EOF ;
    public final EObject entryRuleVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclaration = null;


        try {
            // InternalSCL.g:2915:60: (iv_ruleVariableDeclaration= ruleVariableDeclaration EOF )
            // InternalSCL.g:2916:2: iv_ruleVariableDeclaration= ruleVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableDeclaration=ruleVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableDeclaration"


    // $ANTLR start "ruleVariableDeclaration"
    // InternalSCL.g:2922:1: ruleVariableDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_const_2_0=null;
        Token lv_input_3_0=null;
        Token lv_output_4_0=null;
        Token lv_global_5_0=null;
        Token lv_static_6_0=null;
        Token lv_signal_7_0=null;
        Token lv_signal_9_0=null;
        Token lv_hostType_11_0=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        Enumerator lv_type_8_0 = null;

        Enumerator lv_type_10_0 = null;

        EObject lv_valuedObjects_12_0 = null;

        EObject lv_valuedObjects_14_0 = null;

        EObject lv_annotations_16_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:2928:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCL.g:2929:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCL.g:2929:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCL.g:2930:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCL.g:2930:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==RULE_COMMENT_ANNOTATION||LA88_0==76) ) {
                    alt88=1;
                }


                switch (alt88) {
            	case 1 :
            	    // InternalSCL.g:2931:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:2931:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCL.g:2932:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_44);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);

            // InternalSCL.g:2949:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( ((LA89_0>=115 && LA89_0<=117)) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalSCL.g:2950:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalSCL.g:2950:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalSCL.g:2951:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_44);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:2968:3: ( (lv_const_2_0= 'const' ) )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==45) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalSCL.g:2969:4: (lv_const_2_0= 'const' )
                    {
                    // InternalSCL.g:2969:4: (lv_const_2_0= 'const' )
                    // InternalSCL.g:2970:5: lv_const_2_0= 'const'
                    {
                    lv_const_2_0=(Token)match(input,45,FollowSets000.FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_2_0, grammarAccess.getVariableDeclarationAccess().getConstConstKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:2982:3: ( (lv_input_3_0= 'input' ) )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==46) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // InternalSCL.g:2983:4: (lv_input_3_0= 'input' )
                    {
                    // InternalSCL.g:2983:4: (lv_input_3_0= 'input' )
                    // InternalSCL.g:2984:5: lv_input_3_0= 'input'
                    {
                    lv_input_3_0=(Token)match(input,46,FollowSets000.FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_3_0, grammarAccess.getVariableDeclarationAccess().getInputInputKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:2996:3: ( (lv_output_4_0= 'output' ) )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==47) ) {
                alt92=1;
            }
            switch (alt92) {
                case 1 :
                    // InternalSCL.g:2997:4: (lv_output_4_0= 'output' )
                    {
                    // InternalSCL.g:2997:4: (lv_output_4_0= 'output' )
                    // InternalSCL.g:2998:5: lv_output_4_0= 'output'
                    {
                    lv_output_4_0=(Token)match(input,47,FollowSets000.FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_4_0, grammarAccess.getVariableDeclarationAccess().getOutputOutputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:3010:3: ( (lv_global_5_0= 'global' ) )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==48) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // InternalSCL.g:3011:4: (lv_global_5_0= 'global' )
                    {
                    // InternalSCL.g:3011:4: (lv_global_5_0= 'global' )
                    // InternalSCL.g:3012:5: lv_global_5_0= 'global'
                    {
                    lv_global_5_0=(Token)match(input,48,FollowSets000.FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_5_0, grammarAccess.getVariableDeclarationAccess().getGlobalGlobalKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:3024:3: ( (lv_static_6_0= 'static' ) )?
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==49) ) {
                alt94=1;
            }
            switch (alt94) {
                case 1 :
                    // InternalSCL.g:3025:4: (lv_static_6_0= 'static' )
                    {
                    // InternalSCL.g:3025:4: (lv_static_6_0= 'static' )
                    // InternalSCL.g:3026:5: lv_static_6_0= 'static'
                    {
                    lv_static_6_0=(Token)match(input,49,FollowSets000.FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_6_0, grammarAccess.getVariableDeclarationAccess().getStaticStaticKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:3038:3: ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) )
            int alt96=3;
            switch ( input.LA(1) ) {
            case 50:
                {
                int LA96_1 = input.LA(2);

                if ( (LA96_1==RULE_ID||LA96_1==RULE_COMMENT_ANNOTATION||LA96_1==76) ) {
                    alt96=2;
                }
                else if ( ((LA96_1>=105 && LA96_1<=109)) ) {
                    alt96=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 96, 1, input);

                    throw nvae;
                }
                }
                break;
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
                {
                alt96=1;
                }
                break;
            case 51:
                {
                alt96=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 96, 0, input);

                throw nvae;
            }

            switch (alt96) {
                case 1 :
                    // InternalSCL.g:3039:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    {
                    // InternalSCL.g:3039:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    // InternalSCL.g:3040:5: ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) )
                    {
                    // InternalSCL.g:3040:5: ( (lv_signal_7_0= 'signal' ) )?
                    int alt95=2;
                    int LA95_0 = input.LA(1);

                    if ( (LA95_0==50) ) {
                        alt95=1;
                    }
                    switch (alt95) {
                        case 1 :
                            // InternalSCL.g:3041:6: (lv_signal_7_0= 'signal' )
                            {
                            // InternalSCL.g:3041:6: (lv_signal_7_0= 'signal' )
                            // InternalSCL.g:3042:7: lv_signal_7_0= 'signal'
                            {
                            lv_signal_7_0=(Token)match(input,50,FollowSets000.FOLLOW_59); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_signal_7_0, grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_7_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getVariableDeclarationRule());
                              							}
                              							setWithLastConsumed(current, "signal", true, "signal");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCL.g:3054:5: ( (lv_type_8_0= ruleValueType ) )
                    // InternalSCL.g:3055:6: (lv_type_8_0= ruleValueType )
                    {
                    // InternalSCL.g:3055:6: (lv_type_8_0= ruleValueType )
                    // InternalSCL.g:3056:7: lv_type_8_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationAccess().getTypeValueTypeEnumRuleCall_7_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_12);
                    lv_type_8_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_8_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ValueType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:3075:4: ( (lv_signal_9_0= 'signal' ) )
                    {
                    // InternalSCL.g:3075:4: ( (lv_signal_9_0= 'signal' ) )
                    // InternalSCL.g:3076:5: (lv_signal_9_0= 'signal' )
                    {
                    // InternalSCL.g:3076:5: (lv_signal_9_0= 'signal' )
                    // InternalSCL.g:3077:6: lv_signal_9_0= 'signal'
                    {
                    lv_signal_9_0=(Token)match(input,50,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_signal_9_0, grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      						}
                      						setWithLastConsumed(current, "signal", true, "signal");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSCL.g:3090:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    {
                    // InternalSCL.g:3090:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    // InternalSCL.g:3091:5: ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) )
                    {
                    // InternalSCL.g:3091:5: ( (lv_type_10_0= ruleHostType ) )
                    // InternalSCL.g:3092:6: (lv_type_10_0= ruleHostType )
                    {
                    // InternalSCL.g:3092:6: (lv_type_10_0= ruleHostType )
                    // InternalSCL.g:3093:7: lv_type_10_0= ruleHostType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationAccess().getTypeHostTypeEnumRuleCall_7_2_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_60);
                    lv_type_10_0=ruleHostType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_10_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.HostType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCL.g:3110:5: ( (lv_hostType_11_0= RULE_STRING ) )
                    // InternalSCL.g:3111:6: (lv_hostType_11_0= RULE_STRING )
                    {
                    // InternalSCL.g:3111:6: (lv_hostType_11_0= RULE_STRING )
                    // InternalSCL.g:3112:7: lv_hostType_11_0= RULE_STRING
                    {
                    lv_hostType_11_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_hostType_11_0, grammarAccess.getVariableDeclarationAccess().getHostTypeSTRINGTerminalRuleCall_7_2_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"hostType",
                      								lv_hostType_11_0,
                      								"de.cau.cs.kieler.annotations.Annotations.STRING");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSCL.g:3130:3: ( (lv_valuedObjects_12_0= ruleValuedObject ) )
            // InternalSCL.g:3131:4: (lv_valuedObjects_12_0= ruleValuedObject )
            {
            // InternalSCL.g:3131:4: (lv_valuedObjects_12_0= ruleValuedObject )
            // InternalSCL.g:3132:5: lv_valuedObjects_12_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_8_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_61);
            lv_valuedObjects_12_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_12_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:3149:3: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )*
            loop97:
            do {
                int alt97=2;
                int LA97_0 = input.LA(1);

                if ( (LA97_0==35) ) {
                    alt97=1;
                }


                switch (alt97) {
            	case 1 :
            	    // InternalSCL.g:3150:4: otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    {
            	    otherlv_13=(Token)match(input,35,FollowSets000.FOLLOW_12); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_13, grammarAccess.getVariableDeclarationAccess().getCommaKeyword_9_0());
            	      			
            	    }
            	    // InternalSCL.g:3154:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    // InternalSCL.g:3155:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    {
            	    // InternalSCL.g:3155:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    // InternalSCL.g:3156:6: lv_valuedObjects_14_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_9_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_61);
            	    lv_valuedObjects_14_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_14_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop97;
                }
            } while (true);

            otherlv_15=(Token)match(input,20,FollowSets000.FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_10());
              		
            }
            // InternalSCL.g:3178:3: ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // InternalSCL.g:3179:4: (lv_annotations_16_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCL.g:3179:4: (lv_annotations_16_0= ruleCommentAnnotatonSL )
                    // InternalSCL.g:3180:5: lv_annotations_16_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_11_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_16_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_16_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableDeclaration"


    // $ANTLR start "entryRuleVariableDeclarationWOSemicolon"
    // InternalSCL.g:3201:1: entryRuleVariableDeclarationWOSemicolon returns [EObject current=null] : iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF ;
    public final EObject entryRuleVariableDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclarationWOSemicolon = null;


        try {
            // InternalSCL.g:3201:71: (iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF )
            // InternalSCL.g:3202:2: iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableDeclarationWOSemicolon=ruleVariableDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableDeclarationWOSemicolon"


    // $ANTLR start "ruleVariableDeclarationWOSemicolon"
    // InternalSCL.g:3208:1: ruleVariableDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleVariableDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token lv_const_2_0=null;
        Token lv_input_3_0=null;
        Token lv_output_4_0=null;
        Token lv_global_5_0=null;
        Token lv_static_6_0=null;
        Token lv_signal_7_0=null;
        Token lv_signal_9_0=null;
        Token lv_hostType_11_0=null;
        Token otherlv_13=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        Enumerator lv_type_8_0 = null;

        Enumerator lv_type_10_0 = null;

        EObject lv_valuedObjects_12_0 = null;

        EObject lv_valuedObjects_14_0 = null;

        EObject lv_annotations_15_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:3214:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCL.g:3215:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCL.g:3215:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCL.g:3216:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCL.g:3216:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop99:
            do {
                int alt99=2;
                int LA99_0 = input.LA(1);

                if ( (LA99_0==RULE_COMMENT_ANNOTATION||LA99_0==76) ) {
                    alt99=1;
                }


                switch (alt99) {
            	case 1 :
            	    // InternalSCL.g:3217:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:3217:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCL.g:3218:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_44);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop99;
                }
            } while (true);

            // InternalSCL.g:3235:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( ((LA100_0>=115 && LA100_0<=117)) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // InternalSCL.g:3236:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalSCL.g:3236:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalSCL.g:3237:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_44);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:3254:3: ( (lv_const_2_0= 'const' ) )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==45) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // InternalSCL.g:3255:4: (lv_const_2_0= 'const' )
                    {
                    // InternalSCL.g:3255:4: (lv_const_2_0= 'const' )
                    // InternalSCL.g:3256:5: lv_const_2_0= 'const'
                    {
                    lv_const_2_0=(Token)match(input,45,FollowSets000.FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_2_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getConstConstKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:3268:3: ( (lv_input_3_0= 'input' ) )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==46) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalSCL.g:3269:4: (lv_input_3_0= 'input' )
                    {
                    // InternalSCL.g:3269:4: (lv_input_3_0= 'input' )
                    // InternalSCL.g:3270:5: lv_input_3_0= 'input'
                    {
                    lv_input_3_0=(Token)match(input,46,FollowSets000.FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_3_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getInputInputKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:3282:3: ( (lv_output_4_0= 'output' ) )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==47) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalSCL.g:3283:4: (lv_output_4_0= 'output' )
                    {
                    // InternalSCL.g:3283:4: (lv_output_4_0= 'output' )
                    // InternalSCL.g:3284:5: lv_output_4_0= 'output'
                    {
                    lv_output_4_0=(Token)match(input,47,FollowSets000.FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_4_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getOutputOutputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:3296:3: ( (lv_global_5_0= 'global' ) )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==48) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalSCL.g:3297:4: (lv_global_5_0= 'global' )
                    {
                    // InternalSCL.g:3297:4: (lv_global_5_0= 'global' )
                    // InternalSCL.g:3298:5: lv_global_5_0= 'global'
                    {
                    lv_global_5_0=(Token)match(input,48,FollowSets000.FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_5_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getGlobalGlobalKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:3310:3: ( (lv_static_6_0= 'static' ) )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==49) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalSCL.g:3311:4: (lv_static_6_0= 'static' )
                    {
                    // InternalSCL.g:3311:4: (lv_static_6_0= 'static' )
                    // InternalSCL.g:3312:5: lv_static_6_0= 'static'
                    {
                    lv_static_6_0=(Token)match(input,49,FollowSets000.FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_6_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getStaticStaticKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:3324:3: ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) )
            int alt107=3;
            switch ( input.LA(1) ) {
            case 50:
                {
                int LA107_1 = input.LA(2);

                if ( ((LA107_1>=105 && LA107_1<=109)) ) {
                    alt107=1;
                }
                else if ( (LA107_1==RULE_ID||LA107_1==RULE_COMMENT_ANNOTATION||LA107_1==76) ) {
                    alt107=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 107, 1, input);

                    throw nvae;
                }
                }
                break;
            case 105:
            case 106:
            case 107:
            case 108:
            case 109:
                {
                alt107=1;
                }
                break;
            case 51:
                {
                alt107=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 107, 0, input);

                throw nvae;
            }

            switch (alt107) {
                case 1 :
                    // InternalSCL.g:3325:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    {
                    // InternalSCL.g:3325:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    // InternalSCL.g:3326:5: ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) )
                    {
                    // InternalSCL.g:3326:5: ( (lv_signal_7_0= 'signal' ) )?
                    int alt106=2;
                    int LA106_0 = input.LA(1);

                    if ( (LA106_0==50) ) {
                        alt106=1;
                    }
                    switch (alt106) {
                        case 1 :
                            // InternalSCL.g:3327:6: (lv_signal_7_0= 'signal' )
                            {
                            // InternalSCL.g:3327:6: (lv_signal_7_0= 'signal' )
                            // InternalSCL.g:3328:7: lv_signal_7_0= 'signal'
                            {
                            lv_signal_7_0=(Token)match(input,50,FollowSets000.FOLLOW_59); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_signal_7_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_7_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                              							}
                              							setWithLastConsumed(current, "signal", true, "signal");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCL.g:3340:5: ( (lv_type_8_0= ruleValueType ) )
                    // InternalSCL.g:3341:6: (lv_type_8_0= ruleValueType )
                    {
                    // InternalSCL.g:3341:6: (lv_type_8_0= ruleValueType )
                    // InternalSCL.g:3342:7: lv_type_8_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getTypeValueTypeEnumRuleCall_7_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_12);
                    lv_type_8_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_8_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ValueType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:3361:4: ( (lv_signal_9_0= 'signal' ) )
                    {
                    // InternalSCL.g:3361:4: ( (lv_signal_9_0= 'signal' ) )
                    // InternalSCL.g:3362:5: (lv_signal_9_0= 'signal' )
                    {
                    // InternalSCL.g:3362:5: (lv_signal_9_0= 'signal' )
                    // InternalSCL.g:3363:6: lv_signal_9_0= 'signal'
                    {
                    lv_signal_9_0=(Token)match(input,50,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_signal_9_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      						}
                      						setWithLastConsumed(current, "signal", true, "signal");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalSCL.g:3376:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    {
                    // InternalSCL.g:3376:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    // InternalSCL.g:3377:5: ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) )
                    {
                    // InternalSCL.g:3377:5: ( (lv_type_10_0= ruleHostType ) )
                    // InternalSCL.g:3378:6: (lv_type_10_0= ruleHostType )
                    {
                    // InternalSCL.g:3378:6: (lv_type_10_0= ruleHostType )
                    // InternalSCL.g:3379:7: lv_type_10_0= ruleHostType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getTypeHostTypeEnumRuleCall_7_2_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_60);
                    lv_type_10_0=ruleHostType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_10_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.HostType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCL.g:3396:5: ( (lv_hostType_11_0= RULE_STRING ) )
                    // InternalSCL.g:3397:6: (lv_hostType_11_0= RULE_STRING )
                    {
                    // InternalSCL.g:3397:6: (lv_hostType_11_0= RULE_STRING )
                    // InternalSCL.g:3398:7: lv_hostType_11_0= RULE_STRING
                    {
                    lv_hostType_11_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_hostType_11_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getHostTypeSTRINGTerminalRuleCall_7_2_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"hostType",
                      								lv_hostType_11_0,
                      								"de.cau.cs.kieler.annotations.Annotations.STRING");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalSCL.g:3416:3: ( (lv_valuedObjects_12_0= ruleValuedObject ) )
            // InternalSCL.g:3417:4: (lv_valuedObjects_12_0= ruleValuedObject )
            {
            // InternalSCL.g:3417:4: (lv_valuedObjects_12_0= ruleValuedObject )
            // InternalSCL.g:3418:5: lv_valuedObjects_12_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_8_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_62);
            lv_valuedObjects_12_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_12_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:3435:3: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )*
            loop108:
            do {
                int alt108=2;
                alt108 = dfa108.predict(input);
                switch (alt108) {
            	case 1 :
            	    // InternalSCL.g:3436:4: otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    {
            	    otherlv_13=(Token)match(input,35,FollowSets000.FOLLOW_12); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_13, grammarAccess.getVariableDeclarationWOSemicolonAccess().getCommaKeyword_9_0());
            	      			
            	    }
            	    // InternalSCL.g:3440:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    // InternalSCL.g:3441:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    {
            	    // InternalSCL.g:3441:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    // InternalSCL.g:3442:6: lv_valuedObjects_14_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_9_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_62);
            	    lv_valuedObjects_14_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_14_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop108;
                }
            } while (true);

            // InternalSCL.g:3460:3: ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // InternalSCL.g:3461:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCL.g:3461:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    // InternalSCL.g:3462:5: lv_annotations_15_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_10_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_15_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_15_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableDeclarationWOSemicolon"


    // $ANTLR start "entryRuleStructDeclaration"
    // InternalSCL.g:3483:1: entryRuleStructDeclaration returns [EObject current=null] : iv_ruleStructDeclaration= ruleStructDeclaration EOF ;
    public final EObject entryRuleStructDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructDeclaration = null;


        try {
            // InternalSCL.g:3483:58: (iv_ruleStructDeclaration= ruleStructDeclaration EOF )
            // InternalSCL.g:3484:2: iv_ruleStructDeclaration= ruleStructDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStructDeclaration=ruleStructDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructDeclaration"


    // $ANTLR start "ruleStructDeclaration"
    // InternalSCL.g:3490:1: ruleStructDeclaration returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclaration ) )* otherlv_13= '}' ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? otherlv_17= ';' ( (lv_annotations_18_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleStructDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_const_3_0=null;
        Token lv_input_4_0=null;
        Token lv_output_5_0=null;
        Token lv_global_6_0=null;
        Token lv_static_7_0=null;
        Token lv_host_8_0=null;
        Token lv_name_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_type_9_0 = null;

        EObject lv_declarations_12_0 = null;

        EObject lv_valuedObjects_14_0 = null;

        EObject lv_valuedObjects_16_0 = null;

        EObject lv_annotations_18_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:3496:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclaration ) )* otherlv_13= '}' ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? otherlv_17= ';' ( (lv_annotations_18_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCL.g:3497:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclaration ) )* otherlv_13= '}' ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? otherlv_17= ';' ( (lv_annotations_18_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCL.g:3497:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclaration ) )* otherlv_13= '}' ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? otherlv_17= ';' ( (lv_annotations_18_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCL.g:3498:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclaration ) )* otherlv_13= '}' ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? otherlv_17= ';' ( (lv_annotations_18_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCL.g:3498:3: ()
            // InternalSCL.g:3499:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStructDeclarationAccess().getClassDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalSCL.g:3508:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop110:
            do {
                int alt110=2;
                int LA110_0 = input.LA(1);

                if ( (LA110_0==RULE_COMMENT_ANNOTATION||LA110_0==76) ) {
                    alt110=1;
                }


                switch (alt110) {
            	case 1 :
            	    // InternalSCL.g:3509:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:3509:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCL.g:3510:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getStructDeclarationAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_63);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop110;
                }
            } while (true);

            // InternalSCL.g:3527:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( ((LA111_0>=115 && LA111_0<=117)) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // InternalSCL.g:3528:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalSCL.g:3528:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalSCL.g:3529:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStructDeclarationAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_63);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:3546:3: ( (lv_const_3_0= 'const' ) )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==45) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalSCL.g:3547:4: (lv_const_3_0= 'const' )
                    {
                    // InternalSCL.g:3547:4: (lv_const_3_0= 'const' )
                    // InternalSCL.g:3548:5: lv_const_3_0= 'const'
                    {
                    lv_const_3_0=(Token)match(input,45,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_3_0, grammarAccess.getStructDeclarationAccess().getConstConstKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:3560:3: ( (lv_input_4_0= 'input' ) )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==46) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalSCL.g:3561:4: (lv_input_4_0= 'input' )
                    {
                    // InternalSCL.g:3561:4: (lv_input_4_0= 'input' )
                    // InternalSCL.g:3562:5: lv_input_4_0= 'input'
                    {
                    lv_input_4_0=(Token)match(input,46,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_4_0, grammarAccess.getStructDeclarationAccess().getInputInputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:3574:3: ( (lv_output_5_0= 'output' ) )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==47) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalSCL.g:3575:4: (lv_output_5_0= 'output' )
                    {
                    // InternalSCL.g:3575:4: (lv_output_5_0= 'output' )
                    // InternalSCL.g:3576:5: lv_output_5_0= 'output'
                    {
                    lv_output_5_0=(Token)match(input,47,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_5_0, grammarAccess.getStructDeclarationAccess().getOutputOutputKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:3588:3: ( (lv_global_6_0= 'global' ) )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==48) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalSCL.g:3589:4: (lv_global_6_0= 'global' )
                    {
                    // InternalSCL.g:3589:4: (lv_global_6_0= 'global' )
                    // InternalSCL.g:3590:5: lv_global_6_0= 'global'
                    {
                    lv_global_6_0=(Token)match(input,48,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_6_0, grammarAccess.getStructDeclarationAccess().getGlobalGlobalKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:3602:3: ( (lv_static_7_0= 'static' ) )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==49) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalSCL.g:3603:4: (lv_static_7_0= 'static' )
                    {
                    // InternalSCL.g:3603:4: (lv_static_7_0= 'static' )
                    // InternalSCL.g:3604:5: lv_static_7_0= 'static'
                    {
                    lv_static_7_0=(Token)match(input,49,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_7_0, grammarAccess.getStructDeclarationAccess().getStaticStaticKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:3616:3: ( (lv_host_8_0= 'host' ) )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==51) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalSCL.g:3617:4: (lv_host_8_0= 'host' )
                    {
                    // InternalSCL.g:3617:4: (lv_host_8_0= 'host' )
                    // InternalSCL.g:3618:5: lv_host_8_0= 'host'
                    {
                    lv_host_8_0=(Token)match(input,51,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_host_8_0, grammarAccess.getStructDeclarationAccess().getHostHostKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "host", true, "host");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:3630:3: ( (lv_type_9_0= ruleStructType ) )
            // InternalSCL.g:3631:4: (lv_type_9_0= ruleStructType )
            {
            // InternalSCL.g:3631:4: (lv_type_9_0= ruleStructType )
            // InternalSCL.g:3632:5: lv_type_9_0= ruleStructType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStructDeclarationAccess().getTypeStructTypeEnumRuleCall_9_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_53);
            lv_type_9_0=ruleStructType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_9_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.StructType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:3649:3: ( (lv_name_10_0= RULE_ID ) )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( (LA118_0==RULE_ID) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalSCL.g:3650:4: (lv_name_10_0= RULE_ID )
                    {
                    // InternalSCL.g:3650:4: (lv_name_10_0= RULE_ID )
                    // InternalSCL.g:3651:5: lv_name_10_0= RULE_ID
                    {
                    lv_name_10_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_10_0, grammarAccess.getStructDeclarationAccess().getNameIDTerminalRuleCall_10_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_10_0,
                      						"de.cau.cs.kieler.annotations.Annotations.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_11=(Token)match(input,25,FollowSets000.FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getStructDeclarationAccess().getLeftCurlyBracketKeyword_11());
              		
            }
            // InternalSCL.g:3671:3: ( (lv_declarations_12_0= ruleDeclaration ) )*
            loop119:
            do {
                int alt119=2;
                int LA119_0 = input.LA(1);

                if ( (LA119_0==RULE_COMMENT_ANNOTATION||LA119_0==22||(LA119_0>=45 && LA119_0<=53)||LA119_0==76||(LA119_0>=105 && LA119_0<=111)||(LA119_0>=115 && LA119_0<=117)) ) {
                    alt119=1;
                }


                switch (alt119) {
            	case 1 :
            	    // InternalSCL.g:3672:4: (lv_declarations_12_0= ruleDeclaration )
            	    {
            	    // InternalSCL.g:3672:4: (lv_declarations_12_0= ruleDeclaration )
            	    // InternalSCL.g:3673:5: lv_declarations_12_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getStructDeclarationAccess().getDeclarationsDeclarationParserRuleCall_12_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_64);
            	    lv_declarations_12_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_12_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop119;
                }
            } while (true);

            otherlv_13=(Token)match(input,26,FollowSets000.FOLLOW_65); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_13, grammarAccess.getStructDeclarationAccess().getRightCurlyBracketKeyword_13());
              		
            }
            // InternalSCL.g:3694:3: ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==RULE_ID||LA121_0==RULE_COMMENT_ANNOTATION||LA121_0==76) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalSCL.g:3695:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )*
                    {
                    // InternalSCL.g:3695:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
                    // InternalSCL.g:3696:5: (lv_valuedObjects_14_0= ruleValuedObject )
                    {
                    // InternalSCL.g:3696:5: (lv_valuedObjects_14_0= ruleValuedObject )
                    // InternalSCL.g:3697:6: lv_valuedObjects_14_0= ruleValuedObject
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStructDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_14_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_61);
                    lv_valuedObjects_14_0=ruleValuedObject();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"valuedObjects",
                      							lv_valuedObjects_14_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCL.g:3714:4: (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )*
                    loop120:
                    do {
                        int alt120=2;
                        int LA120_0 = input.LA(1);

                        if ( (LA120_0==35) ) {
                            alt120=1;
                        }


                        switch (alt120) {
                    	case 1 :
                    	    // InternalSCL.g:3715:5: otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) )
                    	    {
                    	    otherlv_15=(Token)match(input,35,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_15, grammarAccess.getStructDeclarationAccess().getCommaKeyword_14_1_0());
                    	      				
                    	    }
                    	    // InternalSCL.g:3719:5: ( (lv_valuedObjects_16_0= ruleValuedObject ) )
                    	    // InternalSCL.g:3720:6: (lv_valuedObjects_16_0= ruleValuedObject )
                    	    {
                    	    // InternalSCL.g:3720:6: (lv_valuedObjects_16_0= ruleValuedObject )
                    	    // InternalSCL.g:3721:7: lv_valuedObjects_16_0= ruleValuedObject
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getStructDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_14_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_61);
                    	    lv_valuedObjects_16_0=ruleValuedObject();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"valuedObjects",
                    	      								lv_valuedObjects_16_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop120;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_17=(Token)match(input,20,FollowSets000.FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_17, grammarAccess.getStructDeclarationAccess().getSemicolonKeyword_15());
              		
            }
            // InternalSCL.g:3744:3: ( (lv_annotations_18_0= ruleCommentAnnotatonSL ) )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalSCL.g:3745:4: (lv_annotations_18_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCL.g:3745:4: (lv_annotations_18_0= ruleCommentAnnotatonSL )
                    // InternalSCL.g:3746:5: lv_annotations_18_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStructDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_16_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_18_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStructDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_18_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructDeclaration"


    // $ANTLR start "entryRuleStructDeclarationWOSemicolon"
    // InternalSCL.g:3767:1: entryRuleStructDeclarationWOSemicolon returns [EObject current=null] : iv_ruleStructDeclarationWOSemicolon= ruleStructDeclarationWOSemicolon EOF ;
    public final EObject entryRuleStructDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStructDeclarationWOSemicolon = null;


        try {
            // InternalSCL.g:3767:69: (iv_ruleStructDeclarationWOSemicolon= ruleStructDeclarationWOSemicolon EOF )
            // InternalSCL.g:3768:2: iv_ruleStructDeclarationWOSemicolon= ruleStructDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStructDeclarationWOSemicolon=ruleStructDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStructDeclarationWOSemicolon"


    // $ANTLR start "ruleStructDeclarationWOSemicolon"
    // InternalSCL.g:3774:1: ruleStructDeclarationWOSemicolon returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationWOSemicolon ) )* otherlv_13= '}' ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleStructDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token lv_const_3_0=null;
        Token lv_input_4_0=null;
        Token lv_output_5_0=null;
        Token lv_global_6_0=null;
        Token lv_static_7_0=null;
        Token lv_host_8_0=null;
        Token lv_name_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_type_9_0 = null;

        EObject lv_declarations_12_0 = null;

        EObject lv_valuedObjects_14_0 = null;

        EObject lv_valuedObjects_16_0 = null;

        EObject lv_annotations_17_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:3780:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationWOSemicolon ) )* otherlv_13= '}' ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCL.g:3781:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationWOSemicolon ) )* otherlv_13= '}' ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCL.g:3781:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationWOSemicolon ) )* otherlv_13= '}' ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCL.g:3782:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationWOSemicolon ) )* otherlv_13= '}' ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCL.g:3782:3: ()
            // InternalSCL.g:3783:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStructDeclarationWOSemicolonAccess().getClassDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalSCL.g:3792:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop123:
            do {
                int alt123=2;
                int LA123_0 = input.LA(1);

                if ( (LA123_0==RULE_COMMENT_ANNOTATION||LA123_0==76) ) {
                    alt123=1;
                }


                switch (alt123) {
            	case 1 :
            	    // InternalSCL.g:3793:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:3793:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCL.g:3794:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_63);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getStructDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop123;
                }
            } while (true);

            // InternalSCL.g:3811:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt124=2;
            int LA124_0 = input.LA(1);

            if ( ((LA124_0>=115 && LA124_0<=117)) ) {
                alt124=1;
            }
            switch (alt124) {
                case 1 :
                    // InternalSCL.g:3812:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalSCL.g:3812:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalSCL.g:3813:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_63);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStructDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:3830:3: ( (lv_const_3_0= 'const' ) )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==45) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // InternalSCL.g:3831:4: (lv_const_3_0= 'const' )
                    {
                    // InternalSCL.g:3831:4: (lv_const_3_0= 'const' )
                    // InternalSCL.g:3832:5: lv_const_3_0= 'const'
                    {
                    lv_const_3_0=(Token)match(input,45,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_3_0, grammarAccess.getStructDeclarationWOSemicolonAccess().getConstConstKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:3844:3: ( (lv_input_4_0= 'input' ) )?
            int alt126=2;
            int LA126_0 = input.LA(1);

            if ( (LA126_0==46) ) {
                alt126=1;
            }
            switch (alt126) {
                case 1 :
                    // InternalSCL.g:3845:4: (lv_input_4_0= 'input' )
                    {
                    // InternalSCL.g:3845:4: (lv_input_4_0= 'input' )
                    // InternalSCL.g:3846:5: lv_input_4_0= 'input'
                    {
                    lv_input_4_0=(Token)match(input,46,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_4_0, grammarAccess.getStructDeclarationWOSemicolonAccess().getInputInputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:3858:3: ( (lv_output_5_0= 'output' ) )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==47) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // InternalSCL.g:3859:4: (lv_output_5_0= 'output' )
                    {
                    // InternalSCL.g:3859:4: (lv_output_5_0= 'output' )
                    // InternalSCL.g:3860:5: lv_output_5_0= 'output'
                    {
                    lv_output_5_0=(Token)match(input,47,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_5_0, grammarAccess.getStructDeclarationWOSemicolonAccess().getOutputOutputKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:3872:3: ( (lv_global_6_0= 'global' ) )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==48) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // InternalSCL.g:3873:4: (lv_global_6_0= 'global' )
                    {
                    // InternalSCL.g:3873:4: (lv_global_6_0= 'global' )
                    // InternalSCL.g:3874:5: lv_global_6_0= 'global'
                    {
                    lv_global_6_0=(Token)match(input,48,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_6_0, grammarAccess.getStructDeclarationWOSemicolonAccess().getGlobalGlobalKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:3886:3: ( (lv_static_7_0= 'static' ) )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( (LA129_0==49) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalSCL.g:3887:4: (lv_static_7_0= 'static' )
                    {
                    // InternalSCL.g:3887:4: (lv_static_7_0= 'static' )
                    // InternalSCL.g:3888:5: lv_static_7_0= 'static'
                    {
                    lv_static_7_0=(Token)match(input,49,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_7_0, grammarAccess.getStructDeclarationWOSemicolonAccess().getStaticStaticKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:3900:3: ( (lv_host_8_0= 'host' ) )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==51) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // InternalSCL.g:3901:4: (lv_host_8_0= 'host' )
                    {
                    // InternalSCL.g:3901:4: (lv_host_8_0= 'host' )
                    // InternalSCL.g:3902:5: lv_host_8_0= 'host'
                    {
                    lv_host_8_0=(Token)match(input,51,FollowSets000.FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_host_8_0, grammarAccess.getStructDeclarationWOSemicolonAccess().getHostHostKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "host", true, "host");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:3914:3: ( (lv_type_9_0= ruleStructType ) )
            // InternalSCL.g:3915:4: (lv_type_9_0= ruleStructType )
            {
            // InternalSCL.g:3915:4: (lv_type_9_0= ruleStructType )
            // InternalSCL.g:3916:5: lv_type_9_0= ruleStructType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonAccess().getTypeStructTypeEnumRuleCall_9_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_53);
            lv_type_9_0=ruleStructType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStructDeclarationWOSemicolonRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_9_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.StructType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:3933:3: ( (lv_name_10_0= RULE_ID ) )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==RULE_ID) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalSCL.g:3934:4: (lv_name_10_0= RULE_ID )
                    {
                    // InternalSCL.g:3934:4: (lv_name_10_0= RULE_ID )
                    // InternalSCL.g:3935:5: lv_name_10_0= RULE_ID
                    {
                    lv_name_10_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_10_0, grammarAccess.getStructDeclarationWOSemicolonAccess().getNameIDTerminalRuleCall_10_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getStructDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_10_0,
                      						"de.cau.cs.kieler.annotations.Annotations.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_11=(Token)match(input,25,FollowSets000.FOLLOW_64); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getStructDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_11());
              		
            }
            // InternalSCL.g:3955:3: ( (lv_declarations_12_0= ruleDeclarationWOSemicolon ) )*
            loop132:
            do {
                int alt132=2;
                int LA132_0 = input.LA(1);

                if ( (LA132_0==RULE_COMMENT_ANNOTATION||LA132_0==22||(LA132_0>=45 && LA132_0<=53)||LA132_0==76||(LA132_0>=105 && LA132_0<=111)||(LA132_0>=115 && LA132_0<=117)) ) {
                    alt132=1;
                }


                switch (alt132) {
            	case 1 :
            	    // InternalSCL.g:3956:4: (lv_declarations_12_0= ruleDeclarationWOSemicolon )
            	    {
            	    // InternalSCL.g:3956:4: (lv_declarations_12_0= ruleDeclarationWOSemicolon )
            	    // InternalSCL.g:3957:5: lv_declarations_12_0= ruleDeclarationWOSemicolon
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_12_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_64);
            	    lv_declarations_12_0=ruleDeclarationWOSemicolon();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getStructDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_12_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop132;
                }
            } while (true);

            otherlv_13=(Token)match(input,26,FollowSets000.FOLLOW_66); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_13, grammarAccess.getStructDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_13());
              		
            }
            // InternalSCL.g:3978:3: ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )?
            int alt134=2;
            alt134 = dfa134.predict(input);
            switch (alt134) {
                case 1 :
                    // InternalSCL.g:3979:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )*
                    {
                    // InternalSCL.g:3979:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
                    // InternalSCL.g:3980:5: (lv_valuedObjects_14_0= ruleValuedObject )
                    {
                    // InternalSCL.g:3980:5: (lv_valuedObjects_14_0= ruleValuedObject )
                    // InternalSCL.g:3981:6: lv_valuedObjects_14_0= ruleValuedObject
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_14_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_62);
                    lv_valuedObjects_14_0=ruleValuedObject();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStructDeclarationWOSemicolonRule());
                      						}
                      						add(
                      							current,
                      							"valuedObjects",
                      							lv_valuedObjects_14_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCL.g:3998:4: (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )*
                    loop133:
                    do {
                        int alt133=2;
                        int LA133_0 = input.LA(1);

                        if ( (LA133_0==35) ) {
                            alt133=1;
                        }


                        switch (alt133) {
                    	case 1 :
                    	    // InternalSCL.g:3999:5: otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) )
                    	    {
                    	    otherlv_15=(Token)match(input,35,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_15, grammarAccess.getStructDeclarationWOSemicolonAccess().getCommaKeyword_14_1_0());
                    	      				
                    	    }
                    	    // InternalSCL.g:4003:5: ( (lv_valuedObjects_16_0= ruleValuedObject ) )
                    	    // InternalSCL.g:4004:6: (lv_valuedObjects_16_0= ruleValuedObject )
                    	    {
                    	    // InternalSCL.g:4004:6: (lv_valuedObjects_16_0= ruleValuedObject )
                    	    // InternalSCL.g:4005:7: lv_valuedObjects_16_0= ruleValuedObject
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_14_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_62);
                    	    lv_valuedObjects_16_0=ruleValuedObject();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getStructDeclarationWOSemicolonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"valuedObjects",
                    	      								lv_valuedObjects_16_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop133;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCL.g:4024:3: ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // InternalSCL.g:4025:4: (lv_annotations_17_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCL.g:4025:4: (lv_annotations_17_0= ruleCommentAnnotatonSL )
                    // InternalSCL.g:4026:5: lv_annotations_17_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_15_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_17_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getStructDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_17_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructDeclarationWOSemicolon"


    // $ANTLR start "entryRuleClassDeclaration"
    // InternalSCL.g:4047:1: entryRuleClassDeclaration returns [EObject current=null] : iv_ruleClassDeclaration= ruleClassDeclaration EOF ;
    public final EObject entryRuleClassDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassDeclaration = null;


        try {
            // InternalSCL.g:4047:57: (iv_ruleClassDeclaration= ruleClassDeclaration EOF )
            // InternalSCL.g:4048:2: iv_ruleClassDeclaration= ruleClassDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleClassDeclaration=ruleClassDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassDeclaration"


    // $ANTLR start "ruleClassDeclaration"
    // InternalSCL.g:4054:1: ruleClassDeclaration returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? otherlv_17= ';' ( (lv_annotations_18_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleClassDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_const_3_0=null;
        Token lv_input_4_0=null;
        Token lv_output_5_0=null;
        Token lv_global_6_0=null;
        Token lv_static_7_0=null;
        Token lv_host_8_0=null;
        Token lv_name_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_type_9_0 = null;

        EObject lv_declarations_12_0 = null;

        EObject lv_valuedObjects_14_0 = null;

        EObject lv_valuedObjects_16_0 = null;

        EObject lv_annotations_18_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:4060:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? otherlv_17= ';' ( (lv_annotations_18_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCL.g:4061:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? otherlv_17= ';' ( (lv_annotations_18_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCL.g:4061:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? otherlv_17= ';' ( (lv_annotations_18_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCL.g:4062:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )* otherlv_13= '}' ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? otherlv_17= ';' ( (lv_annotations_18_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCL.g:4062:3: ()
            // InternalSCL.g:4063:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getClassDeclarationAccess().getClassDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalSCL.g:4072:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop136:
            do {
                int alt136=2;
                int LA136_0 = input.LA(1);

                if ( (LA136_0==RULE_COMMENT_ANNOTATION||LA136_0==76) ) {
                    alt136=1;
                }


                switch (alt136) {
            	case 1 :
            	    // InternalSCL.g:4073:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:4073:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCL.g:4074:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getClassDeclarationAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_67);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop136;
                }
            } while (true);

            // InternalSCL.g:4091:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( ((LA137_0>=115 && LA137_0<=117)) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // InternalSCL.g:4092:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalSCL.g:4092:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalSCL.g:4093:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassDeclarationAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_67);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:4110:3: ( (lv_const_3_0= 'const' ) )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==45) ) {
                alt138=1;
            }
            switch (alt138) {
                case 1 :
                    // InternalSCL.g:4111:4: (lv_const_3_0= 'const' )
                    {
                    // InternalSCL.g:4111:4: (lv_const_3_0= 'const' )
                    // InternalSCL.g:4112:5: lv_const_3_0= 'const'
                    {
                    lv_const_3_0=(Token)match(input,45,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_3_0, grammarAccess.getClassDeclarationAccess().getConstConstKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:4124:3: ( (lv_input_4_0= 'input' ) )?
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==46) ) {
                alt139=1;
            }
            switch (alt139) {
                case 1 :
                    // InternalSCL.g:4125:4: (lv_input_4_0= 'input' )
                    {
                    // InternalSCL.g:4125:4: (lv_input_4_0= 'input' )
                    // InternalSCL.g:4126:5: lv_input_4_0= 'input'
                    {
                    lv_input_4_0=(Token)match(input,46,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_4_0, grammarAccess.getClassDeclarationAccess().getInputInputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:4138:3: ( (lv_output_5_0= 'output' ) )?
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==47) ) {
                alt140=1;
            }
            switch (alt140) {
                case 1 :
                    // InternalSCL.g:4139:4: (lv_output_5_0= 'output' )
                    {
                    // InternalSCL.g:4139:4: (lv_output_5_0= 'output' )
                    // InternalSCL.g:4140:5: lv_output_5_0= 'output'
                    {
                    lv_output_5_0=(Token)match(input,47,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_5_0, grammarAccess.getClassDeclarationAccess().getOutputOutputKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:4152:3: ( (lv_global_6_0= 'global' ) )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==48) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // InternalSCL.g:4153:4: (lv_global_6_0= 'global' )
                    {
                    // InternalSCL.g:4153:4: (lv_global_6_0= 'global' )
                    // InternalSCL.g:4154:5: lv_global_6_0= 'global'
                    {
                    lv_global_6_0=(Token)match(input,48,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_6_0, grammarAccess.getClassDeclarationAccess().getGlobalGlobalKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:4166:3: ( (lv_static_7_0= 'static' ) )?
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( (LA142_0==49) ) {
                alt142=1;
            }
            switch (alt142) {
                case 1 :
                    // InternalSCL.g:4167:4: (lv_static_7_0= 'static' )
                    {
                    // InternalSCL.g:4167:4: (lv_static_7_0= 'static' )
                    // InternalSCL.g:4168:5: lv_static_7_0= 'static'
                    {
                    lv_static_7_0=(Token)match(input,49,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_7_0, grammarAccess.getClassDeclarationAccess().getStaticStaticKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:4180:3: ( (lv_host_8_0= 'host' ) )?
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( (LA143_0==51) ) {
                alt143=1;
            }
            switch (alt143) {
                case 1 :
                    // InternalSCL.g:4181:4: (lv_host_8_0= 'host' )
                    {
                    // InternalSCL.g:4181:4: (lv_host_8_0= 'host' )
                    // InternalSCL.g:4182:5: lv_host_8_0= 'host'
                    {
                    lv_host_8_0=(Token)match(input,51,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_host_8_0, grammarAccess.getClassDeclarationAccess().getHostHostKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "host", true, "host");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:4194:3: ( (lv_type_9_0= ruleClassType ) )
            // InternalSCL.g:4195:4: (lv_type_9_0= ruleClassType )
            {
            // InternalSCL.g:4195:4: (lv_type_9_0= ruleClassType )
            // InternalSCL.g:4196:5: lv_type_9_0= ruleClassType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClassDeclarationAccess().getTypeClassTypeEnumRuleCall_9_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_53);
            lv_type_9_0=ruleClassType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_9_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ClassType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:4213:3: ( (lv_name_10_0= RULE_ID ) )?
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==RULE_ID) ) {
                alt144=1;
            }
            switch (alt144) {
                case 1 :
                    // InternalSCL.g:4214:4: (lv_name_10_0= RULE_ID )
                    {
                    // InternalSCL.g:4214:4: (lv_name_10_0= RULE_ID )
                    // InternalSCL.g:4215:5: lv_name_10_0= RULE_ID
                    {
                    lv_name_10_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_10_0, grammarAccess.getClassDeclarationAccess().getNameIDTerminalRuleCall_10_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_10_0,
                      						"de.cau.cs.kieler.annotations.Annotations.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_11=(Token)match(input,25,FollowSets000.FOLLOW_68); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getClassDeclarationAccess().getLeftCurlyBracketKeyword_11());
              		
            }
            // InternalSCL.g:4235:3: ( (lv_declarations_12_0= ruleDeclarationOrMethod ) )*
            loop145:
            do {
                int alt145=2;
                int LA145_0 = input.LA(1);

                if ( (LA145_0==RULE_ID||LA145_0==RULE_COMMENT_ANNOTATION||LA145_0==22||(LA145_0>=45 && LA145_0<=53)||LA145_0==76||(LA145_0>=105 && LA145_0<=111)||(LA145_0>=115 && LA145_0<=118)) ) {
                    alt145=1;
                }


                switch (alt145) {
            	case 1 :
            	    // InternalSCL.g:4236:4: (lv_declarations_12_0= ruleDeclarationOrMethod )
            	    {
            	    // InternalSCL.g:4236:4: (lv_declarations_12_0= ruleDeclarationOrMethod )
            	    // InternalSCL.g:4237:5: lv_declarations_12_0= ruleDeclarationOrMethod
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getClassDeclarationAccess().getDeclarationsDeclarationOrMethodParserRuleCall_12_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_68);
            	    lv_declarations_12_0=ruleDeclarationOrMethod();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_12_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationOrMethod");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop145;
                }
            } while (true);

            otherlv_13=(Token)match(input,26,FollowSets000.FOLLOW_65); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_13, grammarAccess.getClassDeclarationAccess().getRightCurlyBracketKeyword_13());
              		
            }
            // InternalSCL.g:4258:3: ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )?
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( (LA147_0==RULE_ID||LA147_0==RULE_COMMENT_ANNOTATION||LA147_0==76) ) {
                alt147=1;
            }
            switch (alt147) {
                case 1 :
                    // InternalSCL.g:4259:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )*
                    {
                    // InternalSCL.g:4259:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
                    // InternalSCL.g:4260:5: (lv_valuedObjects_14_0= ruleValuedObject )
                    {
                    // InternalSCL.g:4260:5: (lv_valuedObjects_14_0= ruleValuedObject )
                    // InternalSCL.g:4261:6: lv_valuedObjects_14_0= ruleValuedObject
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_14_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_61);
                    lv_valuedObjects_14_0=ruleValuedObject();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"valuedObjects",
                      							lv_valuedObjects_14_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCL.g:4278:4: (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )*
                    loop146:
                    do {
                        int alt146=2;
                        int LA146_0 = input.LA(1);

                        if ( (LA146_0==35) ) {
                            alt146=1;
                        }


                        switch (alt146) {
                    	case 1 :
                    	    // InternalSCL.g:4279:5: otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) )
                    	    {
                    	    otherlv_15=(Token)match(input,35,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_15, grammarAccess.getClassDeclarationAccess().getCommaKeyword_14_1_0());
                    	      				
                    	    }
                    	    // InternalSCL.g:4283:5: ( (lv_valuedObjects_16_0= ruleValuedObject ) )
                    	    // InternalSCL.g:4284:6: (lv_valuedObjects_16_0= ruleValuedObject )
                    	    {
                    	    // InternalSCL.g:4284:6: (lv_valuedObjects_16_0= ruleValuedObject )
                    	    // InternalSCL.g:4285:7: lv_valuedObjects_16_0= ruleValuedObject
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_14_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_61);
                    	    lv_valuedObjects_16_0=ruleValuedObject();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"valuedObjects",
                    	      								lv_valuedObjects_16_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop146;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_17=(Token)match(input,20,FollowSets000.FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_17, grammarAccess.getClassDeclarationAccess().getSemicolonKeyword_15());
              		
            }
            // InternalSCL.g:4308:3: ( (lv_annotations_18_0= ruleCommentAnnotatonSL ) )?
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt148=1;
            }
            switch (alt148) {
                case 1 :
                    // InternalSCL.g:4309:4: (lv_annotations_18_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCL.g:4309:4: (lv_annotations_18_0= ruleCommentAnnotatonSL )
                    // InternalSCL.g:4310:5: lv_annotations_18_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_16_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_18_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_18_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassDeclaration"


    // $ANTLR start "entryRuleDeclarationOrMethod"
    // InternalSCL.g:4331:1: entryRuleDeclarationOrMethod returns [EObject current=null] : iv_ruleDeclarationOrMethod= ruleDeclarationOrMethod EOF ;
    public final EObject entryRuleDeclarationOrMethod() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclarationOrMethod = null;


        try {
            // InternalSCL.g:4331:60: (iv_ruleDeclarationOrMethod= ruleDeclarationOrMethod EOF )
            // InternalSCL.g:4332:2: iv_ruleDeclarationOrMethod= ruleDeclarationOrMethod EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationOrMethodRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclarationOrMethod=ruleDeclarationOrMethod();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclarationOrMethod; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclarationOrMethod"


    // $ANTLR start "ruleDeclarationOrMethod"
    // InternalSCL.g:4338:1: ruleDeclarationOrMethod returns [EObject current=null] : (this_Declaration_0= ruleDeclaration | this_MethodDeclaration_1= ruleMethodDeclaration ) ;
    public final EObject ruleDeclarationOrMethod() throws RecognitionException {
        EObject current = null;

        EObject this_Declaration_0 = null;

        EObject this_MethodDeclaration_1 = null;



        	enterRule();

        try {
            // InternalSCL.g:4344:2: ( (this_Declaration_0= ruleDeclaration | this_MethodDeclaration_1= ruleMethodDeclaration ) )
            // InternalSCL.g:4345:2: (this_Declaration_0= ruleDeclaration | this_MethodDeclaration_1= ruleMethodDeclaration )
            {
            // InternalSCL.g:4345:2: (this_Declaration_0= ruleDeclaration | this_MethodDeclaration_1= ruleMethodDeclaration )
            int alt149=2;
            alt149 = dfa149.predict(input);
            switch (alt149) {
                case 1 :
                    // InternalSCL.g:4346:3: this_Declaration_0= ruleDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodAccess().getDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Declaration_0=ruleDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Declaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCL.g:4358:3: this_MethodDeclaration_1= ruleMethodDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodAccess().getMethodDeclarationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MethodDeclaration_1=ruleMethodDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MethodDeclaration_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclarationOrMethod"


    // $ANTLR start "entryRuleClassDeclarationWOSemicolon"
    // InternalSCL.g:4373:1: entryRuleClassDeclarationWOSemicolon returns [EObject current=null] : iv_ruleClassDeclarationWOSemicolon= ruleClassDeclarationWOSemicolon EOF ;
    public final EObject entryRuleClassDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassDeclarationWOSemicolon = null;


        try {
            // InternalSCL.g:4373:68: (iv_ruleClassDeclarationWOSemicolon= ruleClassDeclarationWOSemicolon EOF )
            // InternalSCL.g:4374:2: iv_ruleClassDeclarationWOSemicolon= ruleClassDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleClassDeclarationWOSemicolon=ruleClassDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassDeclarationWOSemicolon"


    // $ANTLR start "ruleClassDeclarationWOSemicolon"
    // InternalSCL.g:4380:1: ruleClassDeclarationWOSemicolon returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_13= '}' ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleClassDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token lv_const_3_0=null;
        Token lv_input_4_0=null;
        Token lv_output_5_0=null;
        Token lv_global_6_0=null;
        Token lv_static_7_0=null;
        Token lv_host_8_0=null;
        Token lv_name_10_0=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_type_9_0 = null;

        EObject lv_declarations_12_0 = null;

        EObject lv_valuedObjects_14_0 = null;

        EObject lv_valuedObjects_16_0 = null;

        EObject lv_annotations_17_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:4386:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_13= '}' ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCL.g:4387:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_13= '}' ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCL.g:4387:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_13= '}' ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCL.g:4388:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_const_3_0= 'const' ) )? ( (lv_input_4_0= 'input' ) )? ( (lv_output_5_0= 'output' ) )? ( (lv_global_6_0= 'global' ) )? ( (lv_static_7_0= 'static' ) )? ( (lv_host_8_0= 'host' ) )? ( (lv_type_9_0= ruleClassType ) ) ( (lv_name_10_0= RULE_ID ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_13= '}' ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCL.g:4388:3: ()
            // InternalSCL.g:4389:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getClassDeclarationWOSemicolonAccess().getClassDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalSCL.g:4398:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop150:
            do {
                int alt150=2;
                int LA150_0 = input.LA(1);

                if ( (LA150_0==RULE_COMMENT_ANNOTATION||LA150_0==76) ) {
                    alt150=1;
                }


                switch (alt150) {
            	case 1 :
            	    // InternalSCL.g:4399:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:4399:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCL.g:4400:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_67);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop150;
                }
            } while (true);

            // InternalSCL.g:4417:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( ((LA151_0>=115 && LA151_0<=117)) ) {
                alt151=1;
            }
            switch (alt151) {
                case 1 :
                    // InternalSCL.g:4418:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalSCL.g:4418:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalSCL.g:4419:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_67);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:4436:3: ( (lv_const_3_0= 'const' ) )?
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==45) ) {
                alt152=1;
            }
            switch (alt152) {
                case 1 :
                    // InternalSCL.g:4437:4: (lv_const_3_0= 'const' )
                    {
                    // InternalSCL.g:4437:4: (lv_const_3_0= 'const' )
                    // InternalSCL.g:4438:5: lv_const_3_0= 'const'
                    {
                    lv_const_3_0=(Token)match(input,45,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_3_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getConstConstKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "const", true, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:4450:3: ( (lv_input_4_0= 'input' ) )?
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==46) ) {
                alt153=1;
            }
            switch (alt153) {
                case 1 :
                    // InternalSCL.g:4451:4: (lv_input_4_0= 'input' )
                    {
                    // InternalSCL.g:4451:4: (lv_input_4_0= 'input' )
                    // InternalSCL.g:4452:5: lv_input_4_0= 'input'
                    {
                    lv_input_4_0=(Token)match(input,46,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_4_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getInputInputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "input", true, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:4464:3: ( (lv_output_5_0= 'output' ) )?
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==47) ) {
                alt154=1;
            }
            switch (alt154) {
                case 1 :
                    // InternalSCL.g:4465:4: (lv_output_5_0= 'output' )
                    {
                    // InternalSCL.g:4465:4: (lv_output_5_0= 'output' )
                    // InternalSCL.g:4466:5: lv_output_5_0= 'output'
                    {
                    lv_output_5_0=(Token)match(input,47,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_5_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getOutputOutputKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "output", true, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:4478:3: ( (lv_global_6_0= 'global' ) )?
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( (LA155_0==48) ) {
                alt155=1;
            }
            switch (alt155) {
                case 1 :
                    // InternalSCL.g:4479:4: (lv_global_6_0= 'global' )
                    {
                    // InternalSCL.g:4479:4: (lv_global_6_0= 'global' )
                    // InternalSCL.g:4480:5: lv_global_6_0= 'global'
                    {
                    lv_global_6_0=(Token)match(input,48,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_6_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getGlobalGlobalKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "global", true, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:4492:3: ( (lv_static_7_0= 'static' ) )?
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==49) ) {
                alt156=1;
            }
            switch (alt156) {
                case 1 :
                    // InternalSCL.g:4493:4: (lv_static_7_0= 'static' )
                    {
                    // InternalSCL.g:4493:4: (lv_static_7_0= 'static' )
                    // InternalSCL.g:4494:5: lv_static_7_0= 'static'
                    {
                    lv_static_7_0=(Token)match(input,49,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_7_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getStaticStaticKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "static", true, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:4506:3: ( (lv_host_8_0= 'host' ) )?
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==51) ) {
                alt157=1;
            }
            switch (alt157) {
                case 1 :
                    // InternalSCL.g:4507:4: (lv_host_8_0= 'host' )
                    {
                    // InternalSCL.g:4507:4: (lv_host_8_0= 'host' )
                    // InternalSCL.g:4508:5: lv_host_8_0= 'host'
                    {
                    lv_host_8_0=(Token)match(input,51,FollowSets000.FOLLOW_67); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_host_8_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getHostHostKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "host", true, "host");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:4520:3: ( (lv_type_9_0= ruleClassType ) )
            // InternalSCL.g:4521:4: (lv_type_9_0= ruleClassType )
            {
            // InternalSCL.g:4521:4: (lv_type_9_0= ruleClassType )
            // InternalSCL.g:4522:5: lv_type_9_0= ruleClassType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getTypeClassTypeEnumRuleCall_9_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_53);
            lv_type_9_0=ruleClassType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_9_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ClassType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:4539:3: ( (lv_name_10_0= RULE_ID ) )?
            int alt158=2;
            int LA158_0 = input.LA(1);

            if ( (LA158_0==RULE_ID) ) {
                alt158=1;
            }
            switch (alt158) {
                case 1 :
                    // InternalSCL.g:4540:4: (lv_name_10_0= RULE_ID )
                    {
                    // InternalSCL.g:4540:4: (lv_name_10_0= RULE_ID )
                    // InternalSCL.g:4541:5: lv_name_10_0= RULE_ID
                    {
                    lv_name_10_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_10_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getNameIDTerminalRuleCall_10_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_10_0,
                      						"de.cau.cs.kieler.annotations.Annotations.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_11=(Token)match(input,25,FollowSets000.FOLLOW_68); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getClassDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_11());
              		
            }
            // InternalSCL.g:4561:3: ( (lv_declarations_12_0= ruleDeclarationOrMethodWOSemicolon ) )*
            loop159:
            do {
                int alt159=2;
                int LA159_0 = input.LA(1);

                if ( (LA159_0==RULE_ID||LA159_0==RULE_COMMENT_ANNOTATION||LA159_0==22||(LA159_0>=45 && LA159_0<=53)||LA159_0==76||(LA159_0>=105 && LA159_0<=111)||(LA159_0>=115 && LA159_0<=118)) ) {
                    alt159=1;
                }


                switch (alt159) {
            	case 1 :
            	    // InternalSCL.g:4562:4: (lv_declarations_12_0= ruleDeclarationOrMethodWOSemicolon )
            	    {
            	    // InternalSCL.g:4562:4: (lv_declarations_12_0= ruleDeclarationOrMethodWOSemicolon )
            	    // InternalSCL.g:4563:5: lv_declarations_12_0= ruleDeclarationOrMethodWOSemicolon
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getDeclarationsDeclarationOrMethodWOSemicolonParserRuleCall_12_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_68);
            	    lv_declarations_12_0=ruleDeclarationOrMethodWOSemicolon();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_12_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationOrMethodWOSemicolon");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop159;
                }
            } while (true);

            otherlv_13=(Token)match(input,26,FollowSets000.FOLLOW_66); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_13, grammarAccess.getClassDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_13());
              		
            }
            // InternalSCL.g:4584:3: ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )?
            int alt161=2;
            alt161 = dfa161.predict(input);
            switch (alt161) {
                case 1 :
                    // InternalSCL.g:4585:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )*
                    {
                    // InternalSCL.g:4585:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
                    // InternalSCL.g:4586:5: (lv_valuedObjects_14_0= ruleValuedObject )
                    {
                    // InternalSCL.g:4586:5: (lv_valuedObjects_14_0= ruleValuedObject )
                    // InternalSCL.g:4587:6: lv_valuedObjects_14_0= ruleValuedObject
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_14_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_62);
                    lv_valuedObjects_14_0=ruleValuedObject();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      						}
                      						add(
                      							current,
                      							"valuedObjects",
                      							lv_valuedObjects_14_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCL.g:4604:4: (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )*
                    loop160:
                    do {
                        int alt160=2;
                        int LA160_0 = input.LA(1);

                        if ( (LA160_0==35) ) {
                            alt160=1;
                        }


                        switch (alt160) {
                    	case 1 :
                    	    // InternalSCL.g:4605:5: otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) )
                    	    {
                    	    otherlv_15=(Token)match(input,35,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_15, grammarAccess.getClassDeclarationWOSemicolonAccess().getCommaKeyword_14_1_0());
                    	      				
                    	    }
                    	    // InternalSCL.g:4609:5: ( (lv_valuedObjects_16_0= ruleValuedObject ) )
                    	    // InternalSCL.g:4610:6: (lv_valuedObjects_16_0= ruleValuedObject )
                    	    {
                    	    // InternalSCL.g:4610:6: (lv_valuedObjects_16_0= ruleValuedObject )
                    	    // InternalSCL.g:4611:7: lv_valuedObjects_16_0= ruleValuedObject
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_14_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_62);
                    	    lv_valuedObjects_16_0=ruleValuedObject();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"valuedObjects",
                    	      								lv_valuedObjects_16_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop160;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalSCL.g:4630:3: ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )?
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt162=1;
            }
            switch (alt162) {
                case 1 :
                    // InternalSCL.g:4631:4: (lv_annotations_17_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCL.g:4631:4: (lv_annotations_17_0= ruleCommentAnnotatonSL )
                    // InternalSCL.g:4632:5: lv_annotations_17_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_15_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_17_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_17_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassDeclarationWOSemicolon"


    // $ANTLR start "entryRuleDeclarationOrMethodWOSemicolon"
    // InternalSCL.g:4653:1: entryRuleDeclarationOrMethodWOSemicolon returns [EObject current=null] : iv_ruleDeclarationOrMethodWOSemicolon= ruleDeclarationOrMethodWOSemicolon EOF ;
    public final EObject entryRuleDeclarationOrMethodWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclarationOrMethodWOSemicolon = null;


        try {
            // InternalSCL.g:4653:71: (iv_ruleDeclarationOrMethodWOSemicolon= ruleDeclarationOrMethodWOSemicolon EOF )
            // InternalSCL.g:4654:2: iv_ruleDeclarationOrMethodWOSemicolon= ruleDeclarationOrMethodWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationOrMethodWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclarationOrMethodWOSemicolon=ruleDeclarationOrMethodWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclarationOrMethodWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclarationOrMethodWOSemicolon"


    // $ANTLR start "ruleDeclarationOrMethodWOSemicolon"
    // InternalSCL.g:4660:1: ruleDeclarationOrMethodWOSemicolon returns [EObject current=null] : (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon ) ;
    public final EObject ruleDeclarationOrMethodWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject this_DeclarationWOSemicolon_0 = null;

        EObject this_MethodDeclarationWOSemicolon_1 = null;



        	enterRule();

        try {
            // InternalSCL.g:4666:2: ( (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon ) )
            // InternalSCL.g:4667:2: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon )
            {
            // InternalSCL.g:4667:2: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon )
            int alt163=2;
            alt163 = dfa163.predict(input);
            switch (alt163) {
                case 1 :
                    // InternalSCL.g:4668:3: this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodWOSemicolonAccess().getDeclarationWOSemicolonParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DeclarationWOSemicolon_0=ruleDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DeclarationWOSemicolon_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCL.g:4680:3: this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodWOSemicolonAccess().getMethodDeclarationWOSemicolonParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MethodDeclarationWOSemicolon_1=ruleMethodDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MethodDeclarationWOSemicolon_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclarationOrMethodWOSemicolon"


    // $ANTLR start "entryRuleNamespaceID"
    // InternalSCL.g:4695:1: entryRuleNamespaceID returns [String current=null] : iv_ruleNamespaceID= ruleNamespaceID EOF ;
    public final String entryRuleNamespaceID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNamespaceID = null;


        try {
            // InternalSCL.g:4695:51: (iv_ruleNamespaceID= ruleNamespaceID EOF )
            // InternalSCL.g:4696:2: iv_ruleNamespaceID= ruleNamespaceID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNamespaceID=ruleNamespaceID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespaceID"


    // $ANTLR start "ruleNamespaceID"
    // InternalSCL.g:4702:1: ruleNamespaceID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* ) ;
    public final AntlrDatatypeRuleToken ruleNamespaceID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_ExtendedID_0 = null;

        AntlrDatatypeRuleToken this_PrimeID_2 = null;



        	enterRule();

        try {
            // InternalSCL.g:4708:2: ( (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* ) )
            // InternalSCL.g:4709:2: (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* )
            {
            // InternalSCL.g:4709:2: (this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )* )
            // InternalSCL.g:4710:3: this_ExtendedID_0= ruleExtendedID (kw= ':' this_PrimeID_2= rulePrimeID )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getNamespaceIDAccess().getExtendedIDParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_69);
            this_ExtendedID_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ExtendedID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCL.g:4720:3: (kw= ':' this_PrimeID_2= rulePrimeID )*
            loop164:
            do {
                int alt164=2;
                int LA164_0 = input.LA(1);

                if ( (LA164_0==18) ) {
                    alt164=1;
                }


                switch (alt164) {
            	case 1 :
            	    // InternalSCL.g:4721:4: kw= ':' this_PrimeID_2= rulePrimeID
            	    {
            	    kw=(Token)match(input,18,FollowSets000.FOLLOW_12); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getNamespaceIDAccess().getColonKeyword_1_0());
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newCompositeNode(grammarAccess.getNamespaceIDAccess().getPrimeIDParserRuleCall_1_1());
            	      			
            	    }
            	    pushFollow(FollowSets000.FOLLOW_69);
            	    this_PrimeID_2=rulePrimeID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_PrimeID_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				afterParserOrEnumRuleCall();
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop164;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceID"


    // $ANTLR start "entryRuleReferenceDeclaration"
    // InternalSCL.g:4741:1: entryRuleReferenceDeclaration returns [EObject current=null] : iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF ;
    public final EObject entryRuleReferenceDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceDeclaration = null;


        try {
            // InternalSCL.g:4741:61: (iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF )
            // InternalSCL.g:4742:2: iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceDeclaration=ruleReferenceDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceDeclaration"


    // $ANTLR start "ruleReferenceDeclaration"
    // InternalSCL.g:4748:1: ruleReferenceDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleReferenceDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        EObject lv_extern_5_0 = null;

        EObject lv_extern_7_0 = null;

        EObject lv_valuedObjects_8_0 = null;

        EObject lv_valuedObjects_10_0 = null;

        EObject lv_annotations_12_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:4754:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCL.g:4755:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCL.g:4755:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCL.g:4756:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCL.g:4756:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop165:
            do {
                int alt165=2;
                int LA165_0 = input.LA(1);

                if ( (LA165_0==RULE_COMMENT_ANNOTATION||LA165_0==76) ) {
                    alt165=1;
                }


                switch (alt165) {
            	case 1 :
            	    // InternalSCL.g:4757:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:4757:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCL.g:4758:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_70);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop165;
                }
            } while (true);

            // InternalSCL.g:4775:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( ((LA166_0>=115 && LA166_0<=117)) ) {
                alt166=1;
            }
            switch (alt166) {
                case 1 :
                    // InternalSCL.g:4776:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalSCL.g:4776:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalSCL.g:4777:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_71);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:4794:3: ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) )
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( (LA168_0==52) ) {
                alt168=1;
            }
            else if ( (LA168_0==53) ) {
                alt168=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 168, 0, input);

                throw nvae;
            }
            switch (alt168) {
                case 1 :
                    // InternalSCL.g:4795:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    {
                    // InternalSCL.g:4795:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    // InternalSCL.g:4796:5: otherlv_2= 'ref' ( ( ruleNamespaceID ) )
                    {
                    otherlv_2=(Token)match(input,52,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getReferenceDeclarationAccess().getRefKeyword_2_0_0());
                      				
                    }
                    // InternalSCL.g:4800:5: ( ( ruleNamespaceID ) )
                    // InternalSCL.g:4801:6: ( ruleNamespaceID )
                    {
                    // InternalSCL.g:4801:6: ( ruleNamespaceID )
                    // InternalSCL.g:4802:7: ruleNamespaceID
                    {
                    if ( state.backtracking==0 ) {

                      							/* */
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getReferenceDeclarationRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getReferenceNamedObjectCrossReference_2_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_12);
                    ruleNamespaceID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:4821:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    {
                    // InternalSCL.g:4821:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    // InternalSCL.g:4822:5: otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    {
                    otherlv_4=(Token)match(input,53,FollowSets000.FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getReferenceDeclarationAccess().getExternKeyword_2_1_0());
                      				
                    }
                    // InternalSCL.g:4826:5: ( (lv_extern_5_0= ruleExternString ) )
                    // InternalSCL.g:4827:6: (lv_extern_5_0= ruleExternString )
                    {
                    // InternalSCL.g:4827:6: (lv_extern_5_0= ruleExternString )
                    // InternalSCL.g:4828:7: lv_extern_5_0= ruleExternString
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getExternExternStringParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_73);
                    lv_extern_5_0=ruleExternString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                      							}
                      							add(
                      								current,
                      								"extern",
                      								lv_extern_5_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCL.g:4845:5: (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    loop167:
                    do {
                        int alt167=2;
                        int LA167_0 = input.LA(1);

                        if ( (LA167_0==35) ) {
                            alt167=1;
                        }


                        switch (alt167) {
                    	case 1 :
                    	    // InternalSCL.g:4846:6: otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,35,FollowSets000.FOLLOW_72); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_6, grammarAccess.getReferenceDeclarationAccess().getCommaKeyword_2_1_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:4850:6: ( (lv_extern_7_0= ruleExternString ) )
                    	    // InternalSCL.g:4851:7: (lv_extern_7_0= ruleExternString )
                    	    {
                    	    // InternalSCL.g:4851:7: (lv_extern_7_0= ruleExternString )
                    	    // InternalSCL.g:4852:8: lv_extern_7_0= ruleExternString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getExternExternStringParserRuleCall_2_1_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_73);
                    	    lv_extern_7_0=ruleExternString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"extern",
                    	      									lv_extern_7_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop167;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            // InternalSCL.g:4872:3: ( (lv_valuedObjects_8_0= ruleValuedObject ) )
            // InternalSCL.g:4873:4: (lv_valuedObjects_8_0= ruleValuedObject )
            {
            // InternalSCL.g:4873:4: (lv_valuedObjects_8_0= ruleValuedObject )
            // InternalSCL.g:4874:5: lv_valuedObjects_8_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_61);
            lv_valuedObjects_8_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_8_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:4891:3: (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )*
            loop169:
            do {
                int alt169=2;
                int LA169_0 = input.LA(1);

                if ( (LA169_0==35) ) {
                    alt169=1;
                }


                switch (alt169) {
            	case 1 :
            	    // InternalSCL.g:4892:4: otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    {
            	    otherlv_9=(Token)match(input,35,FollowSets000.FOLLOW_12); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_9, grammarAccess.getReferenceDeclarationAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalSCL.g:4896:4: ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    // InternalSCL.g:4897:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    {
            	    // InternalSCL.g:4897:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    // InternalSCL.g:4898:6: lv_valuedObjects_10_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_61);
            	    lv_valuedObjects_10_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_10_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop169;
                }
            } while (true);

            otherlv_11=(Token)match(input,20,FollowSets000.FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getReferenceDeclarationAccess().getSemicolonKeyword_5());
              		
            }
            // InternalSCL.g:4920:3: ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )?
            int alt170=2;
            int LA170_0 = input.LA(1);

            if ( (LA170_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt170=1;
            }
            switch (alt170) {
                case 1 :
                    // InternalSCL.g:4921:4: (lv_annotations_12_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCL.g:4921:4: (lv_annotations_12_0= ruleCommentAnnotatonSL )
                    // InternalSCL.g:4922:5: lv_annotations_12_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_12_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_12_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceDeclaration"


    // $ANTLR start "entryRuleReferenceDeclarationWOSemicolon"
    // InternalSCL.g:4943:1: entryRuleReferenceDeclarationWOSemicolon returns [EObject current=null] : iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF ;
    public final EObject entryRuleReferenceDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceDeclarationWOSemicolon = null;


        try {
            // InternalSCL.g:4943:72: (iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF )
            // InternalSCL.g:4944:2: iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceDeclarationWOSemicolon=ruleReferenceDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceDeclarationWOSemicolon"


    // $ANTLR start "ruleReferenceDeclarationWOSemicolon"
    // InternalSCL.g:4950:1: ruleReferenceDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleReferenceDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        EObject lv_extern_5_0 = null;

        EObject lv_extern_7_0 = null;

        EObject lv_valuedObjects_8_0 = null;

        EObject lv_valuedObjects_10_0 = null;

        EObject lv_annotations_11_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:4956:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCL.g:4957:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCL.g:4957:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCL.g:4958:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) ) ( (lv_valuedObjects_8_0= ruleValuedObject ) ) (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )* ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCL.g:4958:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop171:
            do {
                int alt171=2;
                int LA171_0 = input.LA(1);

                if ( (LA171_0==RULE_COMMENT_ANNOTATION||LA171_0==76) ) {
                    alt171=1;
                }


                switch (alt171) {
            	case 1 :
            	    // InternalSCL.g:4959:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:4959:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCL.g:4960:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_70);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop171;
                }
            } while (true);

            // InternalSCL.g:4977:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt172=2;
            int LA172_0 = input.LA(1);

            if ( ((LA172_0>=115 && LA172_0<=117)) ) {
                alt172=1;
            }
            switch (alt172) {
                case 1 :
                    // InternalSCL.g:4978:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalSCL.g:4978:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalSCL.g:4979:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_71);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:4996:3: ( (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) ) | (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* ) )
            int alt174=2;
            int LA174_0 = input.LA(1);

            if ( (LA174_0==52) ) {
                alt174=1;
            }
            else if ( (LA174_0==53) ) {
                alt174=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 174, 0, input);

                throw nvae;
            }
            switch (alt174) {
                case 1 :
                    // InternalSCL.g:4997:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    {
                    // InternalSCL.g:4997:4: (otherlv_2= 'ref' ( ( ruleNamespaceID ) ) )
                    // InternalSCL.g:4998:5: otherlv_2= 'ref' ( ( ruleNamespaceID ) )
                    {
                    otherlv_2=(Token)match(input,52,FollowSets000.FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getRefKeyword_2_0_0());
                      				
                    }
                    // InternalSCL.g:5002:5: ( ( ruleNamespaceID ) )
                    // InternalSCL.g:5003:6: ( ruleNamespaceID )
                    {
                    // InternalSCL.g:5003:6: ( ruleNamespaceID )
                    // InternalSCL.g:5004:7: ruleNamespaceID
                    {
                    if ( state.backtracking==0 ) {

                      							/* */
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getReferenceNamedObjectCrossReference_2_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_12);
                    ruleNamespaceID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:5023:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    {
                    // InternalSCL.g:5023:4: (otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )* )
                    // InternalSCL.g:5024:5: otherlv_4= 'extern' ( (lv_extern_5_0= ruleExternString ) ) (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    {
                    otherlv_4=(Token)match(input,53,FollowSets000.FOLLOW_72); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternKeyword_2_1_0());
                      				
                    }
                    // InternalSCL.g:5028:5: ( (lv_extern_5_0= ruleExternString ) )
                    // InternalSCL.g:5029:6: (lv_extern_5_0= ruleExternString )
                    {
                    // InternalSCL.g:5029:6: (lv_extern_5_0= ruleExternString )
                    // InternalSCL.g:5030:7: lv_extern_5_0= ruleExternString
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternExternStringParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_73);
                    lv_extern_5_0=ruleExternString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      							}
                      							add(
                      								current,
                      								"extern",
                      								lv_extern_5_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCL.g:5047:5: (otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) ) )*
                    loop173:
                    do {
                        int alt173=2;
                        int LA173_0 = input.LA(1);

                        if ( (LA173_0==35) ) {
                            alt173=1;
                        }


                        switch (alt173) {
                    	case 1 :
                    	    // InternalSCL.g:5048:6: otherlv_6= ',' ( (lv_extern_7_0= ruleExternString ) )
                    	    {
                    	    otherlv_6=(Token)match(input,35,FollowSets000.FOLLOW_72); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_6, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getCommaKeyword_2_1_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:5052:6: ( (lv_extern_7_0= ruleExternString ) )
                    	    // InternalSCL.g:5053:7: (lv_extern_7_0= ruleExternString )
                    	    {
                    	    // InternalSCL.g:5053:7: (lv_extern_7_0= ruleExternString )
                    	    // InternalSCL.g:5054:8: lv_extern_7_0= ruleExternString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternExternStringParserRuleCall_2_1_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_73);
                    	    lv_extern_7_0=ruleExternString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"extern",
                    	      									lv_extern_7_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop173;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            // InternalSCL.g:5074:3: ( (lv_valuedObjects_8_0= ruleValuedObject ) )
            // InternalSCL.g:5075:4: (lv_valuedObjects_8_0= ruleValuedObject )
            {
            // InternalSCL.g:5075:4: (lv_valuedObjects_8_0= ruleValuedObject )
            // InternalSCL.g:5076:5: lv_valuedObjects_8_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_62);
            lv_valuedObjects_8_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_8_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:5093:3: (otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) ) )*
            loop175:
            do {
                int alt175=2;
                int LA175_0 = input.LA(1);

                if ( (LA175_0==35) ) {
                    alt175=1;
                }


                switch (alt175) {
            	case 1 :
            	    // InternalSCL.g:5094:4: otherlv_9= ',' ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    {
            	    otherlv_9=(Token)match(input,35,FollowSets000.FOLLOW_12); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_9, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalSCL.g:5098:4: ( (lv_valuedObjects_10_0= ruleValuedObject ) )
            	    // InternalSCL.g:5099:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    {
            	    // InternalSCL.g:5099:5: (lv_valuedObjects_10_0= ruleValuedObject )
            	    // InternalSCL.g:5100:6: lv_valuedObjects_10_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_62);
            	    lv_valuedObjects_10_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_10_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop175;
                }
            } while (true);

            // InternalSCL.g:5118:3: ( (lv_annotations_11_0= ruleCommentAnnotatonSL ) )?
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( (LA176_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt176=1;
            }
            switch (alt176) {
                case 1 :
                    // InternalSCL.g:5119:4: (lv_annotations_11_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCL.g:5119:4: (lv_annotations_11_0= ruleCommentAnnotatonSL )
                    // InternalSCL.g:5120:5: lv_annotations_11_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_11_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_11_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceDeclarationWOSemicolon"


    // $ANTLR start "entryRuleExternString"
    // InternalSCL.g:5141:1: entryRuleExternString returns [EObject current=null] : iv_ruleExternString= ruleExternString EOF ;
    public final EObject entryRuleExternString() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExternString = null;


        try {
            // InternalSCL.g:5141:53: (iv_ruleExternString= ruleExternString EOF )
            // InternalSCL.g:5142:2: iv_ruleExternString= ruleExternString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExternStringRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExternString=ruleExternString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExternString; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExternString"


    // $ANTLR start "ruleExternString"
    // InternalSCL.g:5148:1: ruleExternString returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleExternString() throws RecognitionException {
        EObject current = null;

        Token lv_code_1_0=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:5154:2: ( ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) ) )
            // InternalSCL.g:5155:2: ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) )
            {
            // InternalSCL.g:5155:2: ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) )
            // InternalSCL.g:5156:3: ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) )
            {
            // InternalSCL.g:5156:3: ( (lv_annotations_0_0= ruleTagAnnotation ) )*
            loop177:
            do {
                int alt177=2;
                int LA177_0 = input.LA(1);

                if ( (LA177_0==76) ) {
                    alt177=1;
                }


                switch (alt177) {
            	case 1 :
            	    // InternalSCL.g:5157:4: (lv_annotations_0_0= ruleTagAnnotation )
            	    {
            	    // InternalSCL.g:5157:4: (lv_annotations_0_0= ruleTagAnnotation )
            	    // InternalSCL.g:5158:5: lv_annotations_0_0= ruleTagAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getExternStringAccess().getAnnotationsTagAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_72);
            	    lv_annotations_0_0=ruleTagAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getExternStringRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.TagAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop177;
                }
            } while (true);

            // InternalSCL.g:5175:3: ( (lv_code_1_0= RULE_STRING ) )
            // InternalSCL.g:5176:4: (lv_code_1_0= RULE_STRING )
            {
            // InternalSCL.g:5176:4: (lv_code_1_0= RULE_STRING )
            // InternalSCL.g:5177:5: lv_code_1_0= RULE_STRING
            {
            lv_code_1_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_code_1_0, grammarAccess.getExternStringAccess().getCodeSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getExternStringRule());
              					}
              					setWithLastConsumed(
              						current,
              						"code",
              						lv_code_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExternString"


    // $ANTLR start "entryRuleScheduleDeclaration"
    // InternalSCL.g:5197:1: entryRuleScheduleDeclaration returns [EObject current=null] : iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF ;
    public final EObject entryRuleScheduleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleDeclaration = null;


        try {
            // InternalSCL.g:5197:60: (iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF )
            // InternalSCL.g:5198:2: iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleDeclaration=ruleScheduleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleDeclaration"


    // $ANTLR start "ruleScheduleDeclaration"
    // InternalSCL.g:5204:1: ruleScheduleDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleScheduleDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        Enumerator lv_global_5_0 = null;

        Enumerator lv_priorities_7_0 = null;

        Enumerator lv_priorities_9_0 = null;

        EObject lv_valuedObjects_11_0 = null;

        EObject lv_valuedObjects_13_0 = null;

        EObject lv_annotations_15_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:5210:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCL.g:5211:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCL.g:5211:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCL.g:5212:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCL.g:5212:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop178:
            do {
                int alt178=2;
                int LA178_0 = input.LA(1);

                if ( (LA178_0==RULE_COMMENT_ANNOTATION||LA178_0==76) ) {
                    alt178=1;
                }


                switch (alt178) {
            	case 1 :
            	    // InternalSCL.g:5213:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:5213:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCL.g:5214:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_74);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop178;
                }
            } while (true);

            // InternalSCL.g:5231:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt179=2;
            int LA179_0 = input.LA(1);

            if ( ((LA179_0>=115 && LA179_0<=117)) ) {
                alt179=1;
            }
            switch (alt179) {
                case 1 :
                    // InternalSCL.g:5232:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalSCL.g:5232:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalSCL.g:5233:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_75);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,22,FollowSets000.FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScheduleDeclarationAccess().getScheduleKeyword_2());
              		
            }
            // InternalSCL.g:5254:3: ( (lv_name_3_0= RULE_STRING ) )?
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( (LA180_0==RULE_STRING) ) {
                alt180=1;
            }
            switch (alt180) {
                case 1 :
                    // InternalSCL.g:5255:4: (lv_name_3_0= RULE_STRING )
                    {
                    // InternalSCL.g:5255:4: (lv_name_3_0= RULE_STRING )
                    // InternalSCL.g:5256:5: lv_name_3_0= RULE_STRING
                    {
                    lv_name_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_77); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_3_0, grammarAccess.getScheduleDeclarationAccess().getNameSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScheduleDeclarationRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_3_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:5272:3: (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )?
            int alt181=2;
            int LA181_0 = input.LA(1);

            if ( (LA181_0==48) ) {
                alt181=1;
            }
            switch (alt181) {
                case 1 :
                    // InternalSCL.g:5273:4: otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) )
                    {
                    otherlv_4=(Token)match(input,48,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getScheduleDeclarationAccess().getGlobalKeyword_4_0());
                      			
                    }
                    // InternalSCL.g:5277:4: ( (lv_global_5_0= rulePriorityProtocol ) )
                    // InternalSCL.g:5278:5: (lv_global_5_0= rulePriorityProtocol )
                    {
                    // InternalSCL.g:5278:5: (lv_global_5_0= rulePriorityProtocol )
                    // InternalSCL.g:5279:6: lv_global_5_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getGlobalPriorityProtocolEnumRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_79);
                    lv_global_5_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"global",
                      							lv_global_5_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCL.g:5297:3: (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )?
            int alt183=2;
            int LA183_0 = input.LA(1);

            if ( (LA183_0==25) ) {
                alt183=1;
            }
            switch (alt183) {
                case 1 :
                    // InternalSCL.g:5298:4: otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}'
                    {
                    otherlv_6=(Token)match(input,25,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getScheduleDeclarationAccess().getLeftCurlyBracketKeyword_5_0());
                      			
                    }
                    // InternalSCL.g:5302:4: ( (lv_priorities_7_0= rulePriorityProtocol ) )
                    // InternalSCL.g:5303:5: (lv_priorities_7_0= rulePriorityProtocol )
                    {
                    // InternalSCL.g:5303:5: (lv_priorities_7_0= rulePriorityProtocol )
                    // InternalSCL.g:5304:6: lv_priorities_7_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_80);
                    lv_priorities_7_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"priorities",
                      							lv_priorities_7_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCL.g:5321:4: (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )*
                    loop182:
                    do {
                        int alt182=2;
                        int LA182_0 = input.LA(1);

                        if ( (LA182_0==35) ) {
                            alt182=1;
                        }


                        switch (alt182) {
                    	case 1 :
                    	    // InternalSCL.g:5322:5: otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    {
                    	    otherlv_8=(Token)match(input,35,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getScheduleDeclarationAccess().getCommaKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalSCL.g:5326:5: ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    // InternalSCL.g:5327:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    {
                    	    // InternalSCL.g:5327:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    // InternalSCL.g:5328:7: lv_priorities_9_0= rulePriorityProtocol
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_80);
                    	    lv_priorities_9_0=rulePriorityProtocol();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"priorities",
                    	      								lv_priorities_9_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop182;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,26,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getScheduleDeclarationAccess().getRightCurlyBracketKeyword_5_3());
                      			
                    }

                    }
                    break;

            }

            // InternalSCL.g:5351:3: ( (lv_valuedObjects_11_0= ruleValuedObject ) )
            // InternalSCL.g:5352:4: (lv_valuedObjects_11_0= ruleValuedObject )
            {
            // InternalSCL.g:5352:4: (lv_valuedObjects_11_0= ruleValuedObject )
            // InternalSCL.g:5353:5: lv_valuedObjects_11_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_6_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_61);
            lv_valuedObjects_11_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_11_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:5370:3: (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )*
            loop184:
            do {
                int alt184=2;
                int LA184_0 = input.LA(1);

                if ( (LA184_0==35) ) {
                    alt184=1;
                }


                switch (alt184) {
            	case 1 :
            	    // InternalSCL.g:5371:4: otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    {
            	    otherlv_12=(Token)match(input,35,FollowSets000.FOLLOW_12); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_12, grammarAccess.getScheduleDeclarationAccess().getCommaKeyword_7_0());
            	      			
            	    }
            	    // InternalSCL.g:5375:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    // InternalSCL.g:5376:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    {
            	    // InternalSCL.g:5376:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    // InternalSCL.g:5377:6: lv_valuedObjects_13_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_61);
            	    lv_valuedObjects_13_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_13_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop184;
                }
            } while (true);

            otherlv_14=(Token)match(input,20,FollowSets000.FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_14, grammarAccess.getScheduleDeclarationAccess().getSemicolonKeyword_8());
              		
            }
            // InternalSCL.g:5399:3: ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            int alt185=2;
            int LA185_0 = input.LA(1);

            if ( (LA185_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt185=1;
            }
            switch (alt185) {
                case 1 :
                    // InternalSCL.g:5400:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCL.g:5400:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    // InternalSCL.g:5401:5: lv_annotations_15_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_9_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_15_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_15_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleDeclaration"


    // $ANTLR start "entryRuleScheduleDeclarationWOSemicolon"
    // InternalSCL.g:5422:1: entryRuleScheduleDeclarationWOSemicolon returns [EObject current=null] : iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF ;
    public final EObject entryRuleScheduleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleDeclarationWOSemicolon = null;


        try {
            // InternalSCL.g:5422:71: (iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF )
            // InternalSCL.g:5423:2: iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleDeclarationWOSemicolon=ruleScheduleDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleDeclarationWOSemicolon"


    // $ANTLR start "ruleScheduleDeclarationWOSemicolon"
    // InternalSCL.g:5429:1: ruleScheduleDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleScheduleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        Enumerator lv_global_5_0 = null;

        Enumerator lv_priorities_7_0 = null;

        Enumerator lv_priorities_9_0 = null;

        EObject lv_valuedObjects_11_0 = null;

        EObject lv_valuedObjects_13_0 = null;

        EObject lv_annotations_14_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:5435:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalSCL.g:5436:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalSCL.g:5436:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? )
            // InternalSCL.g:5437:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalSCL.g:5437:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop186:
            do {
                int alt186=2;
                int LA186_0 = input.LA(1);

                if ( (LA186_0==RULE_COMMENT_ANNOTATION||LA186_0==76) ) {
                    alt186=1;
                }


                switch (alt186) {
            	case 1 :
            	    // InternalSCL.g:5438:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:5438:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCL.g:5439:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_74);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop186;
                }
            } while (true);

            // InternalSCL.g:5456:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt187=2;
            int LA187_0 = input.LA(1);

            if ( ((LA187_0>=115 && LA187_0<=117)) ) {
                alt187=1;
            }
            switch (alt187) {
                case 1 :
                    // InternalSCL.g:5457:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalSCL.g:5457:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalSCL.g:5458:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_75);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,22,FollowSets000.FOLLOW_76); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getScheduleKeyword_2());
              		
            }
            // InternalSCL.g:5479:3: ( (lv_name_3_0= RULE_STRING ) )?
            int alt188=2;
            int LA188_0 = input.LA(1);

            if ( (LA188_0==RULE_STRING) ) {
                alt188=1;
            }
            switch (alt188) {
                case 1 :
                    // InternalSCL.g:5480:4: (lv_name_3_0= RULE_STRING )
                    {
                    // InternalSCL.g:5480:4: (lv_name_3_0= RULE_STRING )
                    // InternalSCL.g:5481:5: lv_name_3_0= RULE_STRING
                    {
                    lv_name_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_77); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_3_0, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getNameSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_3_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalSCL.g:5497:3: (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )?
            int alt189=2;
            int LA189_0 = input.LA(1);

            if ( (LA189_0==48) ) {
                alt189=1;
            }
            switch (alt189) {
                case 1 :
                    // InternalSCL.g:5498:4: otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) )
                    {
                    otherlv_4=(Token)match(input,48,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGlobalKeyword_4_0());
                      			
                    }
                    // InternalSCL.g:5502:4: ( (lv_global_5_0= rulePriorityProtocol ) )
                    // InternalSCL.g:5503:5: (lv_global_5_0= rulePriorityProtocol )
                    {
                    // InternalSCL.g:5503:5: (lv_global_5_0= rulePriorityProtocol )
                    // InternalSCL.g:5504:6: lv_global_5_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGlobalPriorityProtocolEnumRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_79);
                    lv_global_5_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      						}
                      						set(
                      							current,
                      							"global",
                      							lv_global_5_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCL.g:5522:3: (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )?
            int alt191=2;
            int LA191_0 = input.LA(1);

            if ( (LA191_0==25) ) {
                alt191=1;
            }
            switch (alt191) {
                case 1 :
                    // InternalSCL.g:5523:4: otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}'
                    {
                    otherlv_6=(Token)match(input,25,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_5_0());
                      			
                    }
                    // InternalSCL.g:5527:4: ( (lv_priorities_7_0= rulePriorityProtocol ) )
                    // InternalSCL.g:5528:5: (lv_priorities_7_0= rulePriorityProtocol )
                    {
                    // InternalSCL.g:5528:5: (lv_priorities_7_0= rulePriorityProtocol )
                    // InternalSCL.g:5529:6: lv_priorities_7_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_80);
                    lv_priorities_7_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      						}
                      						add(
                      							current,
                      							"priorities",
                      							lv_priorities_7_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCL.g:5546:4: (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )*
                    loop190:
                    do {
                        int alt190=2;
                        int LA190_0 = input.LA(1);

                        if ( (LA190_0==35) ) {
                            alt190=1;
                        }


                        switch (alt190) {
                    	case 1 :
                    	    // InternalSCL.g:5547:5: otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    {
                    	    otherlv_8=(Token)match(input,35,FollowSets000.FOLLOW_78); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getCommaKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalSCL.g:5551:5: ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    // InternalSCL.g:5552:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    {
                    	    // InternalSCL.g:5552:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    // InternalSCL.g:5553:7: lv_priorities_9_0= rulePriorityProtocol
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_80);
                    	    lv_priorities_9_0=rulePriorityProtocol();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"priorities",
                    	      								lv_priorities_9_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop190;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,26,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_5_3());
                      			
                    }

                    }
                    break;

            }

            // InternalSCL.g:5576:3: ( (lv_valuedObjects_11_0= ruleValuedObject ) )
            // InternalSCL.g:5577:4: (lv_valuedObjects_11_0= ruleValuedObject )
            {
            // InternalSCL.g:5577:4: (lv_valuedObjects_11_0= ruleValuedObject )
            // InternalSCL.g:5578:5: lv_valuedObjects_11_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_6_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_62);
            lv_valuedObjects_11_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_11_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:5595:3: (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )*
            loop192:
            do {
                int alt192=2;
                int LA192_0 = input.LA(1);

                if ( (LA192_0==35) ) {
                    alt192=1;
                }


                switch (alt192) {
            	case 1 :
            	    // InternalSCL.g:5596:4: otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    {
            	    otherlv_12=(Token)match(input,35,FollowSets000.FOLLOW_12); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_12, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getCommaKeyword_7_0());
            	      			
            	    }
            	    // InternalSCL.g:5600:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    // InternalSCL.g:5601:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    {
            	    // InternalSCL.g:5601:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    // InternalSCL.g:5602:6: lv_valuedObjects_13_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_62);
            	    lv_valuedObjects_13_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_13_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop192;
                }
            } while (true);

            // InternalSCL.g:5620:3: ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )?
            int alt193=2;
            int LA193_0 = input.LA(1);

            if ( (LA193_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt193=1;
            }
            switch (alt193) {
                case 1 :
                    // InternalSCL.g:5621:4: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                    {
                    // InternalSCL.g:5621:4: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                    // InternalSCL.g:5622:5: lv_annotations_14_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_14_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_14_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleDeclarationWOSemicolon"


    // $ANTLR start "entryRuleValuedObject"
    // InternalSCL.g:5643:1: entryRuleValuedObject returns [EObject current=null] : iv_ruleValuedObject= ruleValuedObject EOF ;
    public final EObject entryRuleValuedObject() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObject = null;


        try {
            // InternalSCL.g:5643:53: (iv_ruleValuedObject= ruleValuedObject EOF )
            // InternalSCL.g:5644:2: iv_ruleValuedObject= ruleValuedObject EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObject=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObject; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObject"


    // $ANTLR start "ruleValuedObject"
    // InternalSCL.g:5650:1: ruleValuedObject returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? ) ;
    public final EObject ruleValuedObject() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_cardinalities_3_0 = null;

        EObject lv_initialValue_6_0 = null;

        Enumerator lv_combineOperator_8_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:5656:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? ) )
            // InternalSCL.g:5657:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? )
            {
            // InternalSCL.g:5657:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? )
            // InternalSCL.g:5658:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )?
            {
            // InternalSCL.g:5658:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop194:
            do {
                int alt194=2;
                int LA194_0 = input.LA(1);

                if ( (LA194_0==RULE_COMMENT_ANNOTATION||LA194_0==76) ) {
                    alt194=1;
                }


                switch (alt194) {
            	case 1 :
            	    // InternalSCL.g:5659:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalSCL.g:5659:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalSCL.g:5660:5: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getValuedObjectAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_12);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getValuedObjectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop194;
                }
            } while (true);

            // InternalSCL.g:5677:3: ( (lv_name_1_0= rulePrimeID ) )
            // InternalSCL.g:5678:4: (lv_name_1_0= rulePrimeID )
            {
            // InternalSCL.g:5678:4: (lv_name_1_0= rulePrimeID )
            // InternalSCL.g:5679:5: lv_name_1_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedObjectAccess().getNamePrimeIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_81);
            lv_name_1_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValuedObjectRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:5696:3: (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )*
            loop195:
            do {
                int alt195=2;
                int LA195_0 = input.LA(1);

                if ( (LA195_0==41) ) {
                    alt195=1;
                }


                switch (alt195) {
            	case 1 :
            	    // InternalSCL.g:5697:4: otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']'
            	    {
            	    otherlv_2=(Token)match(input,41,FollowSets000.FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getValuedObjectAccess().getLeftSquareBracketKeyword_2_0());
            	      			
            	    }
            	    // InternalSCL.g:5701:4: ( (lv_cardinalities_3_0= ruleExpression ) )
            	    // InternalSCL.g:5702:5: (lv_cardinalities_3_0= ruleExpression )
            	    {
            	    // InternalSCL.g:5702:5: (lv_cardinalities_3_0= ruleExpression )
            	    // InternalSCL.g:5703:6: lv_cardinalities_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getValuedObjectAccess().getCardinalitiesExpressionParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_41);
            	    lv_cardinalities_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getValuedObjectRule());
            	      						}
            	      						add(
            	      							current,
            	      							"cardinalities",
            	      							lv_cardinalities_3_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,42,FollowSets000.FOLLOW_81); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getValuedObjectAccess().getRightSquareBracketKeyword_2_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop195;
                }
            } while (true);

            // InternalSCL.g:5725:3: (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )?
            int alt196=2;
            int LA196_0 = input.LA(1);

            if ( (LA196_0==54) ) {
                alt196=1;
            }
            switch (alt196) {
                case 1 :
                    // InternalSCL.g:5726:4: otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) )
                    {
                    otherlv_5=(Token)match(input,54,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getValuedObjectAccess().getEqualsSignKeyword_3_0());
                      			
                    }
                    // InternalSCL.g:5730:4: ( (lv_initialValue_6_0= ruleExpression ) )
                    // InternalSCL.g:5731:5: (lv_initialValue_6_0= ruleExpression )
                    {
                    // InternalSCL.g:5731:5: (lv_initialValue_6_0= ruleExpression )
                    // InternalSCL.g:5732:6: lv_initialValue_6_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectAccess().getInitialValueExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_82);
                    lv_initialValue_6_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectRule());
                      						}
                      						set(
                      							current,
                      							"initialValue",
                      							lv_initialValue_6_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCL.g:5750:3: (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )?
            int alt197=2;
            int LA197_0 = input.LA(1);

            if ( (LA197_0==55) ) {
                alt197=1;
            }
            switch (alt197) {
                case 1 :
                    // InternalSCL.g:5751:4: otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) )
                    {
                    otherlv_7=(Token)match(input,55,FollowSets000.FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getValuedObjectAccess().getCombineKeyword_4_0());
                      			
                    }
                    // InternalSCL.g:5755:4: ( (lv_combineOperator_8_0= ruleCombineOperator ) )
                    // InternalSCL.g:5756:5: (lv_combineOperator_8_0= ruleCombineOperator )
                    {
                    // InternalSCL.g:5756:5: (lv_combineOperator_8_0= ruleCombineOperator )
                    // InternalSCL.g:5757:6: lv_combineOperator_8_0= ruleCombineOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectAccess().getCombineOperatorCombineOperatorEnumRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_combineOperator_8_0=ruleCombineOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectRule());
                      						}
                      						set(
                      							current,
                      							"combineOperator",
                      							lv_combineOperator_8_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.CombineOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObject"


    // $ANTLR start "entryRuleSimpleValuedObject"
    // InternalSCL.g:5779:1: entryRuleSimpleValuedObject returns [EObject current=null] : iv_ruleSimpleValuedObject= ruleSimpleValuedObject EOF ;
    public final EObject entryRuleSimpleValuedObject() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleValuedObject = null;


        try {
            // InternalSCL.g:5779:59: (iv_ruleSimpleValuedObject= ruleSimpleValuedObject EOF )
            // InternalSCL.g:5780:2: iv_ruleSimpleValuedObject= ruleSimpleValuedObject EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleValuedObjectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSimpleValuedObject=ruleSimpleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleValuedObject; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleValuedObject"


    // $ANTLR start "ruleSimpleValuedObject"
    // InternalSCL.g:5786:1: ruleSimpleValuedObject returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) ) ;
    public final EObject ruleSimpleValuedObject() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:5792:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) ) )
            // InternalSCL.g:5793:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) )
            {
            // InternalSCL.g:5793:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) )
            // InternalSCL.g:5794:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) )
            {
            // InternalSCL.g:5794:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop198:
            do {
                int alt198=2;
                int LA198_0 = input.LA(1);

                if ( (LA198_0==RULE_COMMENT_ANNOTATION||LA198_0==76) ) {
                    alt198=1;
                }


                switch (alt198) {
            	case 1 :
            	    // InternalSCL.g:5795:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalSCL.g:5795:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalSCL.g:5796:5: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSimpleValuedObjectAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_12);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSimpleValuedObjectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop198;
                }
            } while (true);

            // InternalSCL.g:5813:3: ( (lv_name_1_0= rulePrimeID ) )
            // InternalSCL.g:5814:4: (lv_name_1_0= rulePrimeID )
            {
            // InternalSCL.g:5814:4: (lv_name_1_0= rulePrimeID )
            // InternalSCL.g:5815:5: lv_name_1_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimpleValuedObjectAccess().getNamePrimeIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSimpleValuedObjectRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleValuedObject"


    // $ANTLR start "entryRuleEffect"
    // InternalSCL.g:5836:1: entryRuleEffect returns [EObject current=null] : iv_ruleEffect= ruleEffect EOF ;
    public final EObject entryRuleEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEffect = null;


        try {
            // InternalSCL.g:5836:47: (iv_ruleEffect= ruleEffect EOF )
            // InternalSCL.g:5837:2: iv_ruleEffect= ruleEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEffect=ruleEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEffect"


    // $ANTLR start "ruleEffect"
    // InternalSCL.g:5843:1: ruleEffect returns [EObject current=null] : (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission ) ;
    public final EObject ruleEffect() throws RecognitionException {
        EObject current = null;

        EObject this_Assignment_0 = null;

        EObject this_PostfixEffect_1 = null;

        EObject this_ValuedEmission_2 = null;

        EObject this_HostcodeEffect_3 = null;

        EObject this_ReferenceCallEffect_4 = null;

        EObject this_FunctionCallEffect_5 = null;

        EObject this_PrintCallEffect_6 = null;

        EObject this_RandomizeCallEffect_7 = null;

        EObject this_PureEmission_8 = null;



        	enterRule();

        try {
            // InternalSCL.g:5849:2: ( (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission ) )
            // InternalSCL.g:5850:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission )
            {
            // InternalSCL.g:5850:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission )
            int alt199=9;
            alt199 = dfa199.predict(input);
            switch (alt199) {
                case 1 :
                    // InternalSCL.g:5851:3: this_Assignment_0= ruleAssignment
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getAssignmentParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Assignment_0=ruleAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Assignment_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCL.g:5863:3: this_PostfixEffect_1= rulePostfixEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getPostfixEffectParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PostfixEffect_1=rulePostfixEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PostfixEffect_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCL.g:5875:3: this_ValuedEmission_2= ruleValuedEmission
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getValuedEmissionParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedEmission_2=ruleValuedEmission();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedEmission_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCL.g:5887:3: this_HostcodeEffect_3= ruleHostcodeEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getHostcodeEffectParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_HostcodeEffect_3=ruleHostcodeEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_HostcodeEffect_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCL.g:5899:3: this_ReferenceCallEffect_4= ruleReferenceCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getReferenceCallEffectParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceCallEffect_4=ruleReferenceCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceCallEffect_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSCL.g:5911:3: this_FunctionCallEffect_5= ruleFunctionCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getFunctionCallEffectParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FunctionCallEffect_5=ruleFunctionCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionCallEffect_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalSCL.g:5923:3: this_PrintCallEffect_6= rulePrintCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getPrintCallEffectParserRuleCall_6());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrintCallEffect_6=rulePrintCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrintCallEffect_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalSCL.g:5935:3: this_RandomizeCallEffect_7= ruleRandomizeCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getRandomizeCallEffectParserRuleCall_7());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RandomizeCallEffect_7=ruleRandomizeCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RandomizeCallEffect_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalSCL.g:5947:3: this_PureEmission_8= rulePureEmission
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getPureEmissionParserRuleCall_8());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PureEmission_8=rulePureEmission();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PureEmission_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEffect"


    // $ANTLR start "entryRulePureEmission"
    // InternalSCL.g:5962:1: entryRulePureEmission returns [EObject current=null] : iv_rulePureEmission= rulePureEmission EOF ;
    public final EObject entryRulePureEmission() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePureEmission = null;


        try {
            // InternalSCL.g:5962:53: (iv_rulePureEmission= rulePureEmission EOF )
            // InternalSCL.g:5963:2: iv_rulePureEmission= rulePureEmission EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPureEmissionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePureEmission=rulePureEmission();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePureEmission; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePureEmission"


    // $ANTLR start "rulePureEmission"
    // InternalSCL.g:5969:1: rulePureEmission returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject rulePureEmission() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        EObject lv_schedule_3_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:5975:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCL.g:5976:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCL.g:5976:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCL.g:5977:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCL.g:5977:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop200:
            do {
                int alt200=2;
                int LA200_0 = input.LA(1);

                if ( (LA200_0==RULE_COMMENT_ANNOTATION||LA200_0==76) ) {
                    alt200=1;
                }


                switch (alt200) {
            	case 1 :
            	    // InternalSCL.g:5978:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalSCL.g:5978:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalSCL.g:5979:5: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPureEmissionAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_12);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPureEmissionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop200;
                }
            } while (true);

            // InternalSCL.g:5996:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCL.g:5997:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCL.g:5997:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCL.g:5998:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPureEmissionAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_84);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPureEmissionRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:6015:3: (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )?
            int alt202=2;
            int LA202_0 = input.LA(1);

            if ( (LA202_0==22) ) {
                alt202=1;
            }
            switch (alt202) {
                case 1 :
                    // InternalSCL.g:6016:4: otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_2=(Token)match(input,22,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPureEmissionAccess().getScheduleKeyword_2_0());
                      			
                    }
                    // InternalSCL.g:6020:4: ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+
                    int cnt201=0;
                    loop201:
                    do {
                        int alt201=2;
                        alt201 = dfa201.predict(input);
                        switch (alt201) {
                    	case 1 :
                    	    // InternalSCL.g:6021:5: (lv_schedule_3_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCL.g:6021:5: (lv_schedule_3_0= ruleScheduleObjectReference )
                    	    // InternalSCL.g:6022:6: lv_schedule_3_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getPureEmissionAccess().getScheduleScheduleObjectReferenceParserRuleCall_2_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_85);
                    	    lv_schedule_3_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getPureEmissionRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_3_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt201 >= 1 ) break loop201;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(201, input);
                                throw eee;
                        }
                        cnt201++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePureEmission"


    // $ANTLR start "entryRuleValuedEmission"
    // InternalSCL.g:6044:1: entryRuleValuedEmission returns [EObject current=null] : iv_ruleValuedEmission= ruleValuedEmission EOF ;
    public final EObject entryRuleValuedEmission() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedEmission = null;


        try {
            // InternalSCL.g:6044:55: (iv_ruleValuedEmission= ruleValuedEmission EOF )
            // InternalSCL.g:6045:2: iv_ruleValuedEmission= ruleValuedEmission EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedEmissionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedEmission=ruleValuedEmission();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedEmission; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedEmission"


    // $ANTLR start "ruleValuedEmission"
    // InternalSCL.g:6051:1: ruleValuedEmission returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject ruleValuedEmission() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        EObject lv_newValue_3_0 = null;

        EObject lv_schedule_6_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:6057:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCL.g:6058:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCL.g:6058:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCL.g:6059:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCL.g:6059:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop203:
            do {
                int alt203=2;
                int LA203_0 = input.LA(1);

                if ( (LA203_0==RULE_COMMENT_ANNOTATION||LA203_0==76) ) {
                    alt203=1;
                }


                switch (alt203) {
            	case 1 :
            	    // InternalSCL.g:6060:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalSCL.g:6060:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalSCL.g:6061:5: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getValuedEmissionAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_12);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop203;
                }
            } while (true);

            // InternalSCL.g:6078:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCL.g:6079:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCL.g:6079:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCL.g:6080:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedEmissionAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_86);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,34,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getValuedEmissionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalSCL.g:6101:3: ( (lv_newValue_3_0= ruleExpression ) )
            // InternalSCL.g:6102:4: (lv_newValue_3_0= ruleExpression )
            {
            // InternalSCL.g:6102:4: (lv_newValue_3_0= ruleExpression )
            // InternalSCL.g:6103:5: lv_newValue_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedEmissionAccess().getNewValueExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_87);
            lv_newValue_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
              					}
              					set(
              						current,
              						"newValue",
              						lv_newValue_3_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,36,FollowSets000.FOLLOW_84); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getValuedEmissionAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalSCL.g:6124:3: (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )?
            int alt205=2;
            int LA205_0 = input.LA(1);

            if ( (LA205_0==22) ) {
                alt205=1;
            }
            switch (alt205) {
                case 1 :
                    // InternalSCL.g:6125:4: otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_5=(Token)match(input,22,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getValuedEmissionAccess().getScheduleKeyword_5_0());
                      			
                    }
                    // InternalSCL.g:6129:4: ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+
                    int cnt204=0;
                    loop204:
                    do {
                        int alt204=2;
                        alt204 = dfa204.predict(input);
                        switch (alt204) {
                    	case 1 :
                    	    // InternalSCL.g:6130:5: (lv_schedule_6_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCL.g:6130:5: (lv_schedule_6_0= ruleScheduleObjectReference )
                    	    // InternalSCL.g:6131:6: lv_schedule_6_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getValuedEmissionAccess().getScheduleScheduleObjectReferenceParserRuleCall_5_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_85);
                    	    lv_schedule_6_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_6_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt204 >= 1 ) break loop204;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(204, input);
                                throw eee;
                        }
                        cnt204++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedEmission"


    // $ANTLR start "entryRuleAssignment"
    // InternalSCL.g:6153:1: entryRuleAssignment returns [EObject current=null] : iv_ruleAssignment= ruleAssignment EOF ;
    public final EObject entryRuleAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignment = null;


        try {
            // InternalSCL.g:6153:51: (iv_ruleAssignment= ruleAssignment EOF )
            // InternalSCL.g:6154:2: iv_ruleAssignment= ruleAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAssignment=ruleAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssignment"


    // $ANTLR start "ruleAssignment"
    // InternalSCL.g:6160:1: ruleAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject ruleAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_schedule_5_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:6166:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCL.g:6167:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCL.g:6167:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCL.g:6168:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCL.g:6168:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop206:
            do {
                int alt206=2;
                int LA206_0 = input.LA(1);

                if ( (LA206_0==RULE_COMMENT_ANNOTATION||LA206_0==76) ) {
                    alt206=1;
                }


                switch (alt206) {
            	case 1 :
            	    // InternalSCL.g:6169:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:6169:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCL.g:6170:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_12);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAssignmentRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop206;
                }
            } while (true);

            // InternalSCL.g:6187:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCL.g:6188:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCL.g:6188:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCL.g:6189:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_15);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:6206:3: ( (lv_operator_2_0= ruleAssignOperator ) )
            // InternalSCL.g:6207:4: (lv_operator_2_0= ruleAssignOperator )
            {
            // InternalSCL.g:6207:4: (lv_operator_2_0= ruleAssignOperator )
            // InternalSCL.g:6208:5: lv_operator_2_0= ruleAssignOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_16);
            lv_operator_2_0=ruleAssignOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_2_0,
              						"de.cau.cs.kieler.kexpressions.keffects.KEffects.AssignOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:6225:3: ( (lv_expression_3_0= ruleExpression ) )
            // InternalSCL.g:6226:4: (lv_expression_3_0= ruleExpression )
            {
            // InternalSCL.g:6226:4: (lv_expression_3_0= ruleExpression )
            // InternalSCL.g:6227:5: lv_expression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_84);
            lv_expression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_3_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:6244:3: (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )?
            int alt208=2;
            int LA208_0 = input.LA(1);

            if ( (LA208_0==22) ) {
                alt208=1;
            }
            switch (alt208) {
                case 1 :
                    // InternalSCL.g:6245:4: otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_4=(Token)match(input,22,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAssignmentAccess().getScheduleKeyword_4_0());
                      			
                    }
                    // InternalSCL.g:6249:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
                    int cnt207=0;
                    loop207:
                    do {
                        int alt207=2;
                        alt207 = dfa207.predict(input);
                        switch (alt207) {
                    	case 1 :
                    	    // InternalSCL.g:6250:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCL.g:6250:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    // InternalSCL.g:6251:6: lv_schedule_5_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_4_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_85);
                    	    lv_schedule_5_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getAssignmentRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_5_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt207 >= 1 ) break loop207;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(207, input);
                                throw eee;
                        }
                        cnt207++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignment"


    // $ANTLR start "entryRulePostfixEffect"
    // InternalSCL.g:6273:1: entryRulePostfixEffect returns [EObject current=null] : iv_rulePostfixEffect= rulePostfixEffect EOF ;
    public final EObject entryRulePostfixEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePostfixEffect = null;


        try {
            // InternalSCL.g:6273:54: (iv_rulePostfixEffect= rulePostfixEffect EOF )
            // InternalSCL.g:6274:2: iv_rulePostfixEffect= rulePostfixEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostfixEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePostfixEffect=rulePostfixEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePostfixEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePostfixEffect"


    // $ANTLR start "rulePostfixEffect"
    // InternalSCL.g:6280:1: rulePostfixEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject rulePostfixEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_schedule_4_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:6286:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCL.g:6287:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCL.g:6287:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCL.g:6288:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCL.g:6288:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop209:
            do {
                int alt209=2;
                int LA209_0 = input.LA(1);

                if ( (LA209_0==RULE_COMMENT_ANNOTATION||LA209_0==76) ) {
                    alt209=1;
                }


                switch (alt209) {
            	case 1 :
            	    // InternalSCL.g:6289:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:6289:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCL.g:6290:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPostfixEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_12);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop209;
                }
            } while (true);

            // InternalSCL.g:6307:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalSCL.g:6308:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalSCL.g:6308:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalSCL.g:6309:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPostfixEffectAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_19);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:6326:3: ( (lv_operator_2_0= rulePostfixOperator ) )
            // InternalSCL.g:6327:4: (lv_operator_2_0= rulePostfixOperator )
            {
            // InternalSCL.g:6327:4: (lv_operator_2_0= rulePostfixOperator )
            // InternalSCL.g:6328:5: lv_operator_2_0= rulePostfixOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPostfixEffectAccess().getOperatorPostfixOperatorEnumRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_84);
            lv_operator_2_0=rulePostfixOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_2_0,
              						"de.cau.cs.kieler.kexpressions.keffects.KEffects.PostfixOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:6345:3: (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )?
            int alt211=2;
            int LA211_0 = input.LA(1);

            if ( (LA211_0==22) ) {
                alt211=1;
            }
            switch (alt211) {
                case 1 :
                    // InternalSCL.g:6346:4: otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_3=(Token)match(input,22,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getPostfixEffectAccess().getScheduleKeyword_3_0());
                      			
                    }
                    // InternalSCL.g:6350:4: ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+
                    int cnt210=0;
                    loop210:
                    do {
                        int alt210=2;
                        alt210 = dfa210.predict(input);
                        switch (alt210) {
                    	case 1 :
                    	    // InternalSCL.g:6351:5: (lv_schedule_4_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCL.g:6351:5: (lv_schedule_4_0= ruleScheduleObjectReference )
                    	    // InternalSCL.g:6352:6: lv_schedule_4_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getPostfixEffectAccess().getScheduleScheduleObjectReferenceParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_85);
                    	    lv_schedule_4_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_4_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt210 >= 1 ) break loop210;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(210, input);
                                throw eee;
                        }
                        cnt210++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostfixEffect"


    // $ANTLR start "entryRuleHostcodeEffect"
    // InternalSCL.g:6374:1: entryRuleHostcodeEffect returns [EObject current=null] : iv_ruleHostcodeEffect= ruleHostcodeEffect EOF ;
    public final EObject entryRuleHostcodeEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHostcodeEffect = null;


        try {
            // InternalSCL.g:6374:55: (iv_ruleHostcodeEffect= ruleHostcodeEffect EOF )
            // InternalSCL.g:6375:2: iv_ruleHostcodeEffect= ruleHostcodeEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHostcodeEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleHostcodeEffect=ruleHostcodeEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHostcodeEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHostcodeEffect"


    // $ANTLR start "ruleHostcodeEffect"
    // InternalSCL.g:6381:1: ruleHostcodeEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) ;
    public final EObject ruleHostcodeEffect() throws RecognitionException {
        EObject current = null;

        Token lv_text_1_0=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:6387:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) )
            // InternalSCL.g:6388:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            {
            // InternalSCL.g:6388:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            // InternalSCL.g:6389:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) )
            {
            // InternalSCL.g:6389:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop212:
            do {
                int alt212=2;
                int LA212_0 = input.LA(1);

                if ( (LA212_0==RULE_COMMENT_ANNOTATION||LA212_0==76) ) {
                    alt212=1;
                }


                switch (alt212) {
            	case 1 :
            	    // InternalSCL.g:6390:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:6390:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCL.g:6391:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getHostcodeEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_88);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getHostcodeEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop212;
                }
            } while (true);

            // InternalSCL.g:6408:3: ( (lv_text_1_0= RULE_HOSTCODE ) )
            // InternalSCL.g:6409:4: (lv_text_1_0= RULE_HOSTCODE )
            {
            // InternalSCL.g:6409:4: (lv_text_1_0= RULE_HOSTCODE )
            // InternalSCL.g:6410:5: lv_text_1_0= RULE_HOSTCODE
            {
            lv_text_1_0=(Token)match(input,RULE_HOSTCODE,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_text_1_0, grammarAccess.getHostcodeEffectAccess().getTextHOSTCODETerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getHostcodeEffectRule());
              					}
              					setWithLastConsumed(
              						current,
              						"text",
              						lv_text_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.HOSTCODE");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHostcodeEffect"


    // $ANTLR start "entryRuleReferenceCallEffect"
    // InternalSCL.g:6430:1: entryRuleReferenceCallEffect returns [EObject current=null] : iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF ;
    public final EObject entryRuleReferenceCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceCallEffect = null;


        try {
            // InternalSCL.g:6430:60: (iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF )
            // InternalSCL.g:6431:2: iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceCallEffect=ruleReferenceCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceCallEffect"


    // $ANTLR start "ruleReferenceCallEffect"
    // InternalSCL.g:6437:1: ruleReferenceCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '.' ( (lv_subReference_3_0= ruleValuedObjectReference ) ) )? ( (otherlv_4= '(' ( (lv_parameters_5_0= ruleParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleParameter ) ) )* otherlv_8= ')' ) | otherlv_9= '()' ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject ruleReferenceCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_subReference_3_0 = null;

        EObject lv_parameters_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_schedule_11_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:6443:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '.' ( (lv_subReference_3_0= ruleValuedObjectReference ) ) )? ( (otherlv_4= '(' ( (lv_parameters_5_0= ruleParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleParameter ) ) )* otherlv_8= ')' ) | otherlv_9= '()' ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCL.g:6444:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '.' ( (lv_subReference_3_0= ruleValuedObjectReference ) ) )? ( (otherlv_4= '(' ( (lv_parameters_5_0= ruleParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleParameter ) ) )* otherlv_8= ')' ) | otherlv_9= '()' ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCL.g:6444:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '.' ( (lv_subReference_3_0= ruleValuedObjectReference ) ) )? ( (otherlv_4= '(' ( (lv_parameters_5_0= ruleParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleParameter ) ) )* otherlv_8= ')' ) | otherlv_9= '()' ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCL.g:6445:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '.' ( (lv_subReference_3_0= ruleValuedObjectReference ) ) )? ( (otherlv_4= '(' ( (lv_parameters_5_0= ruleParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleParameter ) ) )* otherlv_8= ')' ) | otherlv_9= '()' ) (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCL.g:6445:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop213:
            do {
                int alt213=2;
                int LA213_0 = input.LA(1);

                if ( (LA213_0==RULE_COMMENT_ANNOTATION||LA213_0==76) ) {
                    alt213=1;
                }


                switch (alt213) {
            	case 1 :
            	    // InternalSCL.g:6446:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:6446:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCL.g:6447:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_12);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop213;
                }
            } while (true);

            // InternalSCL.g:6464:3: ( ( rulePrimeID ) )
            // InternalSCL.g:6465:4: ( rulePrimeID )
            {
            // InternalSCL.g:6465:4: ( rulePrimeID )
            // InternalSCL.g:6466:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getReferenceCallEffectRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getValuedObjectValuedObjectCrossReference_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_89);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:6483:3: (otherlv_2= '.' ( (lv_subReference_3_0= ruleValuedObjectReference ) ) )?
            int alt214=2;
            int LA214_0 = input.LA(1);

            if ( (LA214_0==56) ) {
                alt214=1;
            }
            switch (alt214) {
                case 1 :
                    // InternalSCL.g:6484:4: otherlv_2= '.' ( (lv_subReference_3_0= ruleValuedObjectReference ) )
                    {
                    otherlv_2=(Token)match(input,56,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getReferenceCallEffectAccess().getFullStopKeyword_2_0());
                      			
                    }
                    // InternalSCL.g:6488:4: ( (lv_subReference_3_0= ruleValuedObjectReference ) )
                    // InternalSCL.g:6489:5: (lv_subReference_3_0= ruleValuedObjectReference )
                    {
                    // InternalSCL.g:6489:5: (lv_subReference_3_0= ruleValuedObjectReference )
                    // InternalSCL.g:6490:6: lv_subReference_3_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_43);
                    lv_subReference_3_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                      						}
                      						set(
                      							current,
                      							"subReference",
                      							lv_subReference_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCL.g:6508:3: ( (otherlv_4= '(' ( (lv_parameters_5_0= ruleParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleParameter ) ) )* otherlv_8= ')' ) | otherlv_9= '()' )
            int alt216=2;
            int LA216_0 = input.LA(1);

            if ( (LA216_0==34) ) {
                alt216=1;
            }
            else if ( (LA216_0==37) ) {
                alt216=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 216, 0, input);

                throw nvae;
            }
            switch (alt216) {
                case 1 :
                    // InternalSCL.g:6509:4: (otherlv_4= '(' ( (lv_parameters_5_0= ruleParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleParameter ) ) )* otherlv_8= ')' )
                    {
                    // InternalSCL.g:6509:4: (otherlv_4= '(' ( (lv_parameters_5_0= ruleParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleParameter ) ) )* otherlv_8= ')' )
                    // InternalSCL.g:6510:5: otherlv_4= '(' ( (lv_parameters_5_0= ruleParameter ) ) (otherlv_6= ',' ( (lv_parameters_7_0= ruleParameter ) ) )* otherlv_8= ')'
                    {
                    otherlv_4=(Token)match(input,34,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisKeyword_3_0_0());
                      				
                    }
                    // InternalSCL.g:6514:5: ( (lv_parameters_5_0= ruleParameter ) )
                    // InternalSCL.g:6515:6: (lv_parameters_5_0= ruleParameter )
                    {
                    // InternalSCL.g:6515:6: (lv_parameters_5_0= ruleParameter )
                    // InternalSCL.g:6516:7: lv_parameters_5_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_37);
                    lv_parameters_5_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_5_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCL.g:6533:5: (otherlv_6= ',' ( (lv_parameters_7_0= ruleParameter ) ) )*
                    loop215:
                    do {
                        int alt215=2;
                        int LA215_0 = input.LA(1);

                        if ( (LA215_0==35) ) {
                            alt215=1;
                        }


                        switch (alt215) {
                    	case 1 :
                    	    // InternalSCL.g:6534:6: otherlv_6= ',' ( (lv_parameters_7_0= ruleParameter ) )
                    	    {
                    	    otherlv_6=(Token)match(input,35,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_6, grammarAccess.getReferenceCallEffectAccess().getCommaKeyword_3_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:6538:6: ( (lv_parameters_7_0= ruleParameter ) )
                    	    // InternalSCL.g:6539:7: (lv_parameters_7_0= ruleParameter )
                    	    {
                    	    // InternalSCL.g:6539:7: (lv_parameters_7_0= ruleParameter )
                    	    // InternalSCL.g:6540:8: lv_parameters_7_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_3_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_37);
                    	    lv_parameters_7_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_7_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop215;
                        }
                    } while (true);

                    otherlv_8=(Token)match(input,36,FollowSets000.FOLLOW_84); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getReferenceCallEffectAccess().getRightParenthesisKeyword_3_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:6564:4: otherlv_9= '()'
                    {
                    otherlv_9=(Token)match(input,37,FollowSets000.FOLLOW_84); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_3_1());
                      			
                    }

                    }
                    break;

            }

            // InternalSCL.g:6569:3: (otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+ )?
            int alt218=2;
            int LA218_0 = input.LA(1);

            if ( (LA218_0==22) ) {
                alt218=1;
            }
            switch (alt218) {
                case 1 :
                    // InternalSCL.g:6570:4: otherlv_10= 'schedule' ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_10=(Token)match(input,22,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getReferenceCallEffectAccess().getScheduleKeyword_4_0());
                      			
                    }
                    // InternalSCL.g:6574:4: ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+
                    int cnt217=0;
                    loop217:
                    do {
                        int alt217=2;
                        alt217 = dfa217.predict(input);
                        switch (alt217) {
                    	case 1 :
                    	    // InternalSCL.g:6575:5: (lv_schedule_11_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCL.g:6575:5: (lv_schedule_11_0= ruleScheduleObjectReference )
                    	    // InternalSCL.g:6576:6: lv_schedule_11_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getScheduleScheduleObjectReferenceParserRuleCall_4_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_85);
                    	    lv_schedule_11_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_11_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt217 >= 1 ) break loop217;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(217, input);
                                throw eee;
                        }
                        cnt217++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceCallEffect"


    // $ANTLR start "entryRuleFunctionCallEffect"
    // InternalSCL.g:6598:1: entryRuleFunctionCallEffect returns [EObject current=null] : iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF ;
    public final EObject entryRuleFunctionCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionCallEffect = null;


        try {
            // InternalSCL.g:6598:59: (iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF )
            // InternalSCL.g:6599:2: iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionCallEffect=ruleFunctionCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionCallEffect"


    // $ANTLR start "ruleFunctionCallEffect"
    // InternalSCL.g:6605:1: ruleFunctionCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) ;
    public final EObject ruleFunctionCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_functionName_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:6611:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) )
            // InternalSCL.g:6612:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            {
            // InternalSCL.g:6612:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            // InternalSCL.g:6613:3: ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            {
            // InternalSCL.g:6613:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop219:
            do {
                int alt219=2;
                int LA219_0 = input.LA(1);

                if ( (LA219_0==RULE_COMMENT_ANNOTATION||LA219_0==76) ) {
                    alt219=1;
                }


                switch (alt219) {
            	case 1 :
            	    // InternalSCL.g:6614:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:6614:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCL.g:6615:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_90);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop219;
                }
            } while (true);

            // InternalSCL.g:6632:3: (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            // InternalSCL.g:6633:4: otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            {
            otherlv_1=(Token)match(input,53,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_1, grammarAccess.getFunctionCallEffectAccess().getExternKeyword_1_0());
              			
            }
            // InternalSCL.g:6637:4: ( (lv_functionName_2_0= RULE_ID ) )
            // InternalSCL.g:6638:5: (lv_functionName_2_0= RULE_ID )
            {
            // InternalSCL.g:6638:5: (lv_functionName_2_0= RULE_ID )
            // InternalSCL.g:6639:6: lv_functionName_2_0= RULE_ID
            {
            lv_functionName_2_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						newLeafNode(lv_functionName_2_0, grammarAccess.getFunctionCallEffectAccess().getFunctionNameIDTerminalRuleCall_1_1_0());
              					
            }
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getFunctionCallEffectRule());
              						}
              						setWithLastConsumed(
              							current,
              							"functionName",
              							lv_functionName_2_0,
              							"de.cau.cs.kieler.annotations.Annotations.ID");
              					
            }

            }


            }

            // InternalSCL.g:6655:4: ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            int alt221=2;
            int LA221_0 = input.LA(1);

            if ( (LA221_0==34) ) {
                alt221=1;
            }
            else if ( (LA221_0==37) ) {
                alt221=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 221, 0, input);

                throw nvae;
            }
            switch (alt221) {
                case 1 :
                    // InternalSCL.g:6656:5: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    {
                    // InternalSCL.g:6656:5: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    // InternalSCL.g:6657:6: otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')'
                    {
                    otherlv_3=(Token)match(input,34,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_3, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisKeyword_1_2_0_0());
                      					
                    }
                    // InternalSCL.g:6661:6: ( (lv_parameters_4_0= ruleParameter ) )
                    // InternalSCL.g:6662:7: (lv_parameters_4_0= ruleParameter )
                    {
                    // InternalSCL.g:6662:7: (lv_parameters_4_0= ruleParameter )
                    // InternalSCL.g:6663:8: lv_parameters_4_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_37);
                    lv_parameters_4_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                      								}
                      								add(
                      									current,
                      									"parameters",
                      									lv_parameters_4_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSCL.g:6680:6: (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )*
                    loop220:
                    do {
                        int alt220=2;
                        int LA220_0 = input.LA(1);

                        if ( (LA220_0==35) ) {
                            alt220=1;
                        }


                        switch (alt220) {
                    	case 1 :
                    	    // InternalSCL.g:6681:7: otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) )
                    	    {
                    	    otherlv_5=(Token)match(input,35,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_5, grammarAccess.getFunctionCallEffectAccess().getCommaKeyword_1_2_0_2_0());
                    	      						
                    	    }
                    	    // InternalSCL.g:6685:7: ( (lv_parameters_6_0= ruleParameter ) )
                    	    // InternalSCL.g:6686:8: (lv_parameters_6_0= ruleParameter )
                    	    {
                    	    // InternalSCL.g:6686:8: (lv_parameters_6_0= ruleParameter )
                    	    // InternalSCL.g:6687:9: lv_parameters_6_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      									newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_2_1_0());
                    	      								
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_37);
                    	    lv_parameters_6_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									if (current==null) {
                    	      										current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                    	      									}
                    	      									add(
                    	      										current,
                    	      										"parameters",
                    	      										lv_parameters_6_0,
                    	      										"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      									afterParserOrEnumRuleCall();
                    	      								
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop220;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_7, grammarAccess.getFunctionCallEffectAccess().getRightParenthesisKeyword_1_2_0_3());
                      					
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:6711:5: otherlv_8= '()'
                    {
                    otherlv_8=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_1_2_1());
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionCallEffect"


    // $ANTLR start "entryRulePrintCallEffect"
    // InternalSCL.g:6721:1: entryRulePrintCallEffect returns [EObject current=null] : iv_rulePrintCallEffect= rulePrintCallEffect EOF ;
    public final EObject entryRulePrintCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrintCallEffect = null;


        try {
            // InternalSCL.g:6721:56: (iv_rulePrintCallEffect= rulePrintCallEffect EOF )
            // InternalSCL.g:6722:2: iv_rulePrintCallEffect= rulePrintCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrintCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrintCallEffect=rulePrintCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrintCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrintCallEffect"


    // $ANTLR start "rulePrintCallEffect"
    // InternalSCL.g:6728:1: rulePrintCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject rulePrintCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;

        EObject lv_schedule_8_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:6734:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalSCL.g:6735:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalSCL.g:6735:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? )
            // InternalSCL.g:6736:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalSCL.g:6736:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop222:
            do {
                int alt222=2;
                int LA222_0 = input.LA(1);

                if ( (LA222_0==RULE_COMMENT_ANNOTATION||LA222_0==76) ) {
                    alt222=1;
                }


                switch (alt222) {
            	case 1 :
            	    // InternalSCL.g:6737:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:6737:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCL.g:6738:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPrintCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_91);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop222;
                }
            } while (true);

            otherlv_1=(Token)match(input,57,FollowSets000.FOLLOW_86); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getPrintCallEffectAccess().getPrintKeyword_1());
              		
            }
            // InternalSCL.g:6759:3: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
            // InternalSCL.g:6760:4: otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')'
            {
            otherlv_2=(Token)match(input,34,FollowSets000.FOLLOW_36); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_2, grammarAccess.getPrintCallEffectAccess().getLeftParenthesisKeyword_2_0());
              			
            }
            // InternalSCL.g:6764:4: ( (lv_parameters_3_0= ruleParameter ) )
            // InternalSCL.g:6765:5: (lv_parameters_3_0= ruleParameter )
            {
            // InternalSCL.g:6765:5: (lv_parameters_3_0= ruleParameter )
            // InternalSCL.g:6766:6: lv_parameters_3_0= ruleParameter
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getPrintCallEffectAccess().getParametersParameterParserRuleCall_2_1_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_37);
            lv_parameters_3_0=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
              						}
              						add(
              							current,
              							"parameters",
              							lv_parameters_3_0,
              							"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }

            // InternalSCL.g:6783:4: (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )*
            loop223:
            do {
                int alt223=2;
                int LA223_0 = input.LA(1);

                if ( (LA223_0==35) ) {
                    alt223=1;
                }


                switch (alt223) {
            	case 1 :
            	    // InternalSCL.g:6784:5: otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) )
            	    {
            	    otherlv_4=(Token)match(input,35,FollowSets000.FOLLOW_36); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_4, grammarAccess.getPrintCallEffectAccess().getCommaKeyword_2_2_0());
            	      				
            	    }
            	    // InternalSCL.g:6788:5: ( (lv_parameters_5_0= ruleParameter ) )
            	    // InternalSCL.g:6789:6: (lv_parameters_5_0= ruleParameter )
            	    {
            	    // InternalSCL.g:6789:6: (lv_parameters_5_0= ruleParameter )
            	    // InternalSCL.g:6790:7: lv_parameters_5_0= ruleParameter
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getPrintCallEffectAccess().getParametersParameterParserRuleCall_2_2_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_37);
            	    lv_parameters_5_0=ruleParameter();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
            	      							}
            	      							add(
            	      								current,
            	      								"parameters",
            	      								lv_parameters_5_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop223;
                }
            } while (true);

            otherlv_6=(Token)match(input,36,FollowSets000.FOLLOW_84); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_6, grammarAccess.getPrintCallEffectAccess().getRightParenthesisKeyword_2_3());
              			
            }

            }

            // InternalSCL.g:6813:3: (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )?
            int alt225=2;
            int LA225_0 = input.LA(1);

            if ( (LA225_0==22) ) {
                alt225=1;
            }
            switch (alt225) {
                case 1 :
                    // InternalSCL.g:6814:4: otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_7=(Token)match(input,22,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getPrintCallEffectAccess().getScheduleKeyword_3_0());
                      			
                    }
                    // InternalSCL.g:6818:4: ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+
                    int cnt224=0;
                    loop224:
                    do {
                        int alt224=2;
                        alt224 = dfa224.predict(input);
                        switch (alt224) {
                    	case 1 :
                    	    // InternalSCL.g:6819:5: (lv_schedule_8_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalSCL.g:6819:5: (lv_schedule_8_0= ruleScheduleObjectReference )
                    	    // InternalSCL.g:6820:6: lv_schedule_8_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getPrintCallEffectAccess().getScheduleScheduleObjectReferenceParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_85);
                    	    lv_schedule_8_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_8_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt224 >= 1 ) break loop224;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(224, input);
                                throw eee;
                        }
                        cnt224++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrintCallEffect"


    // $ANTLR start "entryRuleRandomizeCallEffect"
    // InternalSCL.g:6842:1: entryRuleRandomizeCallEffect returns [EObject current=null] : iv_ruleRandomizeCallEffect= ruleRandomizeCallEffect EOF ;
    public final EObject entryRuleRandomizeCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRandomizeCallEffect = null;


        try {
            // InternalSCL.g:6842:60: (iv_ruleRandomizeCallEffect= ruleRandomizeCallEffect EOF )
            // InternalSCL.g:6843:2: iv_ruleRandomizeCallEffect= ruleRandomizeCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRandomizeCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRandomizeCallEffect=ruleRandomizeCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRandomizeCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRandomizeCallEffect"


    // $ANTLR start "ruleRandomizeCallEffect"
    // InternalSCL.g:6849:1: ruleRandomizeCallEffect returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ;
    public final EObject ruleRandomizeCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:6855:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            // InternalSCL.g:6856:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            {
            // InternalSCL.g:6856:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            // InternalSCL.g:6857:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            {
            // InternalSCL.g:6857:3: ()
            // InternalSCL.g:6858:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRandomizeCallEffectAccess().getRandomizeCallEffectAction_0(),
              					current);
              			
            }

            }

            // InternalSCL.g:6867:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop226:
            do {
                int alt226=2;
                int LA226_0 = input.LA(1);

                if ( (LA226_0==RULE_COMMENT_ANNOTATION||LA226_0==76) ) {
                    alt226=1;
                }


                switch (alt226) {
            	case 1 :
            	    // InternalSCL.g:6868:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:6868:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalSCL.g:6869:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRandomizeCallEffectAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_92);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRandomizeCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop226;
                }
            } while (true);

            otherlv_2=(Token)match(input,58,FollowSets000.FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRandomizeCallEffectAccess().getRandomizeKeyword_2());
              		
            }
            // InternalSCL.g:6890:3: ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            int alt228=2;
            int LA228_0 = input.LA(1);

            if ( (LA228_0==34) ) {
                alt228=1;
            }
            else if ( (LA228_0==37) ) {
                alt228=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 228, 0, input);

                throw nvae;
            }
            switch (alt228) {
                case 1 :
                    // InternalSCL.g:6891:4: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    {
                    // InternalSCL.g:6891:4: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    // InternalSCL.g:6892:5: otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')'
                    {
                    otherlv_3=(Token)match(input,34,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getRandomizeCallEffectAccess().getLeftParenthesisKeyword_3_0_0());
                      				
                    }
                    // InternalSCL.g:6896:5: ( (lv_parameters_4_0= ruleParameter ) )
                    // InternalSCL.g:6897:6: (lv_parameters_4_0= ruleParameter )
                    {
                    // InternalSCL.g:6897:6: (lv_parameters_4_0= ruleParameter )
                    // InternalSCL.g:6898:7: lv_parameters_4_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRandomizeCallEffectAccess().getParametersParameterParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_37);
                    lv_parameters_4_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRandomizeCallEffectRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_4_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCL.g:6915:5: (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )*
                    loop227:
                    do {
                        int alt227=2;
                        int LA227_0 = input.LA(1);

                        if ( (LA227_0==35) ) {
                            alt227=1;
                        }


                        switch (alt227) {
                    	case 1 :
                    	    // InternalSCL.g:6916:6: otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) )
                    	    {
                    	    otherlv_5=(Token)match(input,35,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_5, grammarAccess.getRandomizeCallEffectAccess().getCommaKeyword_3_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:6920:6: ( (lv_parameters_6_0= ruleParameter ) )
                    	    // InternalSCL.g:6921:7: (lv_parameters_6_0= ruleParameter )
                    	    {
                    	    // InternalSCL.g:6921:7: (lv_parameters_6_0= ruleParameter )
                    	    // InternalSCL.g:6922:8: lv_parameters_6_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getRandomizeCallEffectAccess().getParametersParameterParserRuleCall_3_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_37);
                    	    lv_parameters_6_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getRandomizeCallEffectRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_6_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop227;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getRandomizeCallEffectAccess().getRightParenthesisKeyword_3_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:6946:4: otherlv_8= '()'
                    {
                    otherlv_8=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getRandomizeCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRandomizeCallEffect"


    // $ANTLR start "entryRuleExpression"
    // InternalSCL.g:6955:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalSCL.g:6955:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalSCL.g:6956:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalSCL.g:6962:1: ruleExpression returns [EObject current=null] : (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BoolExpression_0 = null;

        EObject this_ValuedExpression_1 = null;



        	enterRule();

        try {
            // InternalSCL.g:6968:2: ( (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) )
            // InternalSCL.g:6969:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )
            {
            // InternalSCL.g:6969:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )
            int alt229=2;
            alt229 = dfa229.predict(input);
            switch (alt229) {
                case 1 :
                    // InternalSCL.g:6970:3: this_BoolExpression_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionAccess().getBoolExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolExpression_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCL.g:6982:3: this_ValuedExpression_1= ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionAccess().getValuedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_1=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleBoolExpression"
    // InternalSCL.g:6997:1: entryRuleBoolExpression returns [EObject current=null] : iv_ruleBoolExpression= ruleBoolExpression EOF ;
    public final EObject entryRuleBoolExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoolExpression = null;


        try {
            // InternalSCL.g:6997:55: (iv_ruleBoolExpression= ruleBoolExpression EOF )
            // InternalSCL.g:6998:2: iv_ruleBoolExpression= ruleBoolExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBoolExpression=ruleBoolExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolExpression"


    // $ANTLR start "ruleBoolExpression"
    // InternalSCL.g:7004:1: ruleBoolExpression returns [EObject current=null] : this_LogicalOrExpression_0= ruleLogicalOrExpression ;
    public final EObject ruleBoolExpression() throws RecognitionException {
        EObject current = null;

        EObject this_LogicalOrExpression_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:7010:2: (this_LogicalOrExpression_0= ruleLogicalOrExpression )
            // InternalSCL.g:7011:2: this_LogicalOrExpression_0= ruleLogicalOrExpression
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getBoolExpressionAccess().getLogicalOrExpressionParserRuleCall());
              	
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_LogicalOrExpression_0=ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_LogicalOrExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoolExpression"


    // $ANTLR start "entryRuleLogicalOrExpression"
    // InternalSCL.g:7025:1: entryRuleLogicalOrExpression returns [EObject current=null] : iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF ;
    public final EObject entryRuleLogicalOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalOrExpression = null;


        try {
            // InternalSCL.g:7025:60: (iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF )
            // InternalSCL.g:7026:2: iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalOrExpression=ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalOrExpression"


    // $ANTLR start "ruleLogicalOrExpression"
    // InternalSCL.g:7032:1: ruleLogicalOrExpression returns [EObject current=null] : (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? ) ;
    public final EObject ruleLogicalOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_LogicalAndExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:7038:2: ( (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? ) )
            // InternalSCL.g:7039:2: (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? )
            {
            // InternalSCL.g:7039:2: (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? )
            // InternalSCL.g:7040:3: this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_93);
            this_LogicalAndExpression_0=ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LogicalAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCL.g:7051:3: ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )?
            int alt231=2;
            int LA231_0 = input.LA(1);

            if ( (LA231_0==59) ) {
                alt231=1;
            }
            switch (alt231) {
                case 1 :
                    // InternalSCL.g:7052:4: () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )*
                    {
                    // InternalSCL.g:7052:4: ()
                    // InternalSCL.g:7053:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getLogicalOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCL.g:7062:4: ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) )
                    // InternalSCL.g:7063:5: ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) )
                    {
                    // InternalSCL.g:7063:5: ( (lv_operator_2_0= ruleLogicalOrOperator ) )
                    // InternalSCL.g:7064:6: (lv_operator_2_0= ruleLogicalOrOperator )
                    {
                    // InternalSCL.g:7064:6: (lv_operator_2_0= ruleLogicalOrOperator )
                    // InternalSCL.g:7065:7: lv_operator_2_0= ruleLogicalOrOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getOperatorLogicalOrOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    lv_operator_2_0=ruleLogicalOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalOrOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCL.g:7082:5: ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) )
                    // InternalSCL.g:7083:6: (lv_subExpressions_3_0= ruleLogicalAndExpression )
                    {
                    // InternalSCL.g:7083:6: (lv_subExpressions_3_0= ruleLogicalAndExpression )
                    // InternalSCL.g:7084:7: lv_subExpressions_3_0= ruleLogicalAndExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_93);
                    lv_subExpressions_3_0=ruleLogicalAndExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCL.g:7102:4: (otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )*
                    loop230:
                    do {
                        int alt230=2;
                        int LA230_0 = input.LA(1);

                        if ( (LA230_0==59) ) {
                            alt230=1;
                        }


                        switch (alt230) {
                    	case 1 :
                    	    // InternalSCL.g:7103:5: otherlv_4= '||' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,59,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getLogicalOrExpressionAccess().getVerticalLineVerticalLineKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCL.g:7107:5: ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) )
                    	    // InternalSCL.g:7108:6: (lv_subExpressions_5_0= ruleLogicalAndExpression )
                    	    {
                    	    // InternalSCL.g:7108:6: (lv_subExpressions_5_0= ruleLogicalAndExpression )
                    	    // InternalSCL.g:7109:7: lv_subExpressions_5_0= ruleLogicalAndExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_93);
                    	    lv_subExpressions_5_0=ruleLogicalAndExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop230;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOrExpression"


    // $ANTLR start "entryRuleLogicalAndExpression"
    // InternalSCL.g:7132:1: entryRuleLogicalAndExpression returns [EObject current=null] : iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF ;
    public final EObject entryRuleLogicalAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalAndExpression = null;


        try {
            // InternalSCL.g:7132:61: (iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF )
            // InternalSCL.g:7133:2: iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalAndExpression=ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalAndExpression"


    // $ANTLR start "ruleLogicalAndExpression"
    // InternalSCL.g:7139:1: ruleLogicalAndExpression returns [EObject current=null] : (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? ) ;
    public final EObject ruleLogicalAndExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_BitwiseOrExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:7145:2: ( (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? ) )
            // InternalSCL.g:7146:2: (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? )
            {
            // InternalSCL.g:7146:2: (this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )? )
            // InternalSCL.g:7147:3: this_BitwiseOrExpression_0= ruleBitwiseOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getBitwiseOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_94);
            this_BitwiseOrExpression_0=ruleBitwiseOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BitwiseOrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCL.g:7158:3: ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )* )?
            int alt233=2;
            int LA233_0 = input.LA(1);

            if ( (LA233_0==60) ) {
                alt233=1;
            }
            switch (alt233) {
                case 1 :
                    // InternalSCL.g:7159:4: () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) ) (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )*
                    {
                    // InternalSCL.g:7159:4: ()
                    // InternalSCL.g:7160:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getLogicalAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCL.g:7169:4: ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) ) )
                    // InternalSCL.g:7170:5: ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) )
                    {
                    // InternalSCL.g:7170:5: ( (lv_operator_2_0= ruleLogicalAndOperator ) )
                    // InternalSCL.g:7171:6: (lv_operator_2_0= ruleLogicalAndOperator )
                    {
                    // InternalSCL.g:7171:6: (lv_operator_2_0= ruleLogicalAndOperator )
                    // InternalSCL.g:7172:7: lv_operator_2_0= ruleLogicalAndOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getOperatorLogicalAndOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    lv_operator_2_0=ruleLogicalAndOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.LogicalAndOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCL.g:7189:5: ( (lv_subExpressions_3_0= ruleBitwiseOrExpression ) )
                    // InternalSCL.g:7190:6: (lv_subExpressions_3_0= ruleBitwiseOrExpression )
                    {
                    // InternalSCL.g:7190:6: (lv_subExpressions_3_0= ruleBitwiseOrExpression )
                    // InternalSCL.g:7191:7: lv_subExpressions_3_0= ruleBitwiseOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_94);
                    lv_subExpressions_3_0=ruleBitwiseOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCL.g:7209:4: (otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) ) )*
                    loop232:
                    do {
                        int alt232=2;
                        int LA232_0 = input.LA(1);

                        if ( (LA232_0==60) ) {
                            alt232=1;
                        }


                        switch (alt232) {
                    	case 1 :
                    	    // InternalSCL.g:7210:5: otherlv_4= '&&' ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,60,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getLogicalAndExpressionAccess().getAmpersandAmpersandKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCL.g:7214:5: ( (lv_subExpressions_5_0= ruleBitwiseOrExpression ) )
                    	    // InternalSCL.g:7215:6: (lv_subExpressions_5_0= ruleBitwiseOrExpression )
                    	    {
                    	    // InternalSCL.g:7215:6: (lv_subExpressions_5_0= ruleBitwiseOrExpression )
                    	    // InternalSCL.g:7216:7: lv_subExpressions_5_0= ruleBitwiseOrExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_94);
                    	    lv_subExpressions_5_0=ruleBitwiseOrExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop232;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalAndExpression"


    // $ANTLR start "entryRuleBitwiseOrExpression"
    // InternalSCL.g:7239:1: entryRuleBitwiseOrExpression returns [EObject current=null] : iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF ;
    public final EObject entryRuleBitwiseOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseOrExpression = null;


        try {
            // InternalSCL.g:7239:60: (iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF )
            // InternalSCL.g:7240:2: iv_ruleBitwiseOrExpression= ruleBitwiseOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseOrExpression=ruleBitwiseOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseOrExpression"


    // $ANTLR start "ruleBitwiseOrExpression"
    // InternalSCL.g:7246:1: ruleBitwiseOrExpression returns [EObject current=null] : (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? ) ;
    public final EObject ruleBitwiseOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_BitwiseXOrExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:7252:2: ( (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? ) )
            // InternalSCL.g:7253:2: (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? )
            {
            // InternalSCL.g:7253:2: (this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )? )
            // InternalSCL.g:7254:3: this_BitwiseXOrExpression_0= ruleBitwiseXOrExpression ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getBitwiseXOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_95);
            this_BitwiseXOrExpression_0=ruleBitwiseXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BitwiseXOrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCL.g:7265:3: ( () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )* )?
            int alt235=2;
            int LA235_0 = input.LA(1);

            if ( (LA235_0==61) ) {
                alt235=1;
            }
            switch (alt235) {
                case 1 :
                    // InternalSCL.g:7266:4: () ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) ) (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )*
                    {
                    // InternalSCL.g:7266:4: ()
                    // InternalSCL.g:7267:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getBitwiseOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCL.g:7276:4: ( ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) ) )
                    // InternalSCL.g:7277:5: ( (lv_operator_2_0= ruleBitwiseOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) )
                    {
                    // InternalSCL.g:7277:5: ( (lv_operator_2_0= ruleBitwiseOrOperator ) )
                    // InternalSCL.g:7278:6: (lv_operator_2_0= ruleBitwiseOrOperator )
                    {
                    // InternalSCL.g:7278:6: (lv_operator_2_0= ruleBitwiseOrOperator )
                    // InternalSCL.g:7279:7: lv_operator_2_0= ruleBitwiseOrOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getOperatorBitwiseOrOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    lv_operator_2_0=ruleBitwiseOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseOrOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCL.g:7296:5: ( (lv_subExpressions_3_0= ruleBitwiseXOrExpression ) )
                    // InternalSCL.g:7297:6: (lv_subExpressions_3_0= ruleBitwiseXOrExpression )
                    {
                    // InternalSCL.g:7297:6: (lv_subExpressions_3_0= ruleBitwiseXOrExpression )
                    // InternalSCL.g:7298:7: lv_subExpressions_3_0= ruleBitwiseXOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseXOrExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_95);
                    lv_subExpressions_3_0=ruleBitwiseXOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseXOrExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCL.g:7316:4: (otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) ) )*
                    loop234:
                    do {
                        int alt234=2;
                        int LA234_0 = input.LA(1);

                        if ( (LA234_0==61) ) {
                            alt234=1;
                        }


                        switch (alt234) {
                    	case 1 :
                    	    // InternalSCL.g:7317:5: otherlv_4= '|' ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,61,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getBitwiseOrExpressionAccess().getVerticalLineKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCL.g:7321:5: ( (lv_subExpressions_5_0= ruleBitwiseXOrExpression ) )
                    	    // InternalSCL.g:7322:6: (lv_subExpressions_5_0= ruleBitwiseXOrExpression )
                    	    {
                    	    // InternalSCL.g:7322:6: (lv_subExpressions_5_0= ruleBitwiseXOrExpression )
                    	    // InternalSCL.g:7323:7: lv_subExpressions_5_0= ruleBitwiseXOrExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseXOrExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_95);
                    	    lv_subExpressions_5_0=ruleBitwiseXOrExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getBitwiseOrExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseXOrExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop234;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseOrExpression"


    // $ANTLR start "entryRuleBitwiseXOrExpression"
    // InternalSCL.g:7346:1: entryRuleBitwiseXOrExpression returns [EObject current=null] : iv_ruleBitwiseXOrExpression= ruleBitwiseXOrExpression EOF ;
    public final EObject entryRuleBitwiseXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseXOrExpression = null;


        try {
            // InternalSCL.g:7346:61: (iv_ruleBitwiseXOrExpression= ruleBitwiseXOrExpression EOF )
            // InternalSCL.g:7347:2: iv_ruleBitwiseXOrExpression= ruleBitwiseXOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseXOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseXOrExpression=ruleBitwiseXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseXOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseXOrExpression"


    // $ANTLR start "ruleBitwiseXOrExpression"
    // InternalSCL.g:7353:1: ruleBitwiseXOrExpression returns [EObject current=null] : (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? ) ;
    public final EObject ruleBitwiseXOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_BitwiseAndExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:7359:2: ( (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? ) )
            // InternalSCL.g:7360:2: (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? )
            {
            // InternalSCL.g:7360:2: (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? )
            // InternalSCL.g:7361:3: this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getBitwiseAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_96);
            this_BitwiseAndExpression_0=ruleBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BitwiseAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCL.g:7372:3: ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )?
            int alt237=2;
            int LA237_0 = input.LA(1);

            if ( (LA237_0==62) ) {
                alt237=1;
            }
            switch (alt237) {
                case 1 :
                    // InternalSCL.g:7373:4: () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )*
                    {
                    // InternalSCL.g:7373:4: ()
                    // InternalSCL.g:7374:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getBitwiseXOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCL.g:7383:4: ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) )
                    // InternalSCL.g:7384:5: ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) )
                    {
                    // InternalSCL.g:7384:5: ( (lv_operator_2_0= ruleBitwiseXOrOperator ) )
                    // InternalSCL.g:7385:6: (lv_operator_2_0= ruleBitwiseXOrOperator )
                    {
                    // InternalSCL.g:7385:6: (lv_operator_2_0= ruleBitwiseXOrOperator )
                    // InternalSCL.g:7386:7: lv_operator_2_0= ruleBitwiseXOrOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getOperatorBitwiseXOrOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    lv_operator_2_0=ruleBitwiseXOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseXOrExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseXOrOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCL.g:7403:5: ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) )
                    // InternalSCL.g:7404:6: (lv_subExpressions_3_0= ruleBitwiseAndExpression )
                    {
                    // InternalSCL.g:7404:6: (lv_subExpressions_3_0= ruleBitwiseAndExpression )
                    // InternalSCL.g:7405:7: lv_subExpressions_3_0= ruleBitwiseAndExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_96);
                    lv_subExpressions_3_0=ruleBitwiseAndExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseXOrExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCL.g:7423:4: (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )*
                    loop236:
                    do {
                        int alt236=2;
                        int LA236_0 = input.LA(1);

                        if ( (LA236_0==62) ) {
                            alt236=1;
                        }


                        switch (alt236) {
                    	case 1 :
                    	    // InternalSCL.g:7424:5: otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,62,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getBitwiseXOrExpressionAccess().getCircumflexAccentKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCL.g:7428:5: ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) )
                    	    // InternalSCL.g:7429:6: (lv_subExpressions_5_0= ruleBitwiseAndExpression )
                    	    {
                    	    // InternalSCL.g:7429:6: (lv_subExpressions_5_0= ruleBitwiseAndExpression )
                    	    // InternalSCL.g:7430:7: lv_subExpressions_5_0= ruleBitwiseAndExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_96);
                    	    lv_subExpressions_5_0=ruleBitwiseAndExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getBitwiseXOrExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop236;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseXOrExpression"


    // $ANTLR start "entryRuleBitwiseAndExpression"
    // InternalSCL.g:7453:1: entryRuleBitwiseAndExpression returns [EObject current=null] : iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF ;
    public final EObject entryRuleBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseAndExpression = null;


        try {
            // InternalSCL.g:7453:61: (iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF )
            // InternalSCL.g:7454:2: iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseAndExpression=ruleBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseAndExpression"


    // $ANTLR start "ruleBitwiseAndExpression"
    // InternalSCL.g:7460:1: ruleBitwiseAndExpression returns [EObject current=null] : (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) ;
    public final EObject ruleBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_CompareOperation_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:7466:2: ( (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) )
            // InternalSCL.g:7467:2: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            {
            // InternalSCL.g:7467:2: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            // InternalSCL.g:7468:3: this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getCompareOperationParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_97);
            this_CompareOperation_0=ruleCompareOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CompareOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCL.g:7479:3: ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
            int alt239=2;
            int LA239_0 = input.LA(1);

            if ( (LA239_0==39) ) {
                alt239=1;
            }
            switch (alt239) {
                case 1 :
                    // InternalSCL.g:7480:4: () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    {
                    // InternalSCL.g:7480:4: ()
                    // InternalSCL.g:7481:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getBitwiseAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCL.g:7490:4: ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) )
                    // InternalSCL.g:7491:5: ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    {
                    // InternalSCL.g:7491:5: ( (lv_operator_2_0= ruleBitwiseAndOperator ) )
                    // InternalSCL.g:7492:6: (lv_operator_2_0= ruleBitwiseAndOperator )
                    {
                    // InternalSCL.g:7492:6: (lv_operator_2_0= ruleBitwiseAndOperator )
                    // InternalSCL.g:7493:7: lv_operator_2_0= ruleBitwiseAndOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getOperatorBitwiseAndOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    lv_operator_2_0=ruleBitwiseAndOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCL.g:7510:5: ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    // InternalSCL.g:7511:6: (lv_subExpressions_3_0= ruleCompareOperation )
                    {
                    // InternalSCL.g:7511:6: (lv_subExpressions_3_0= ruleCompareOperation )
                    // InternalSCL.g:7512:7: lv_subExpressions_3_0= ruleCompareOperation
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_97);
                    lv_subExpressions_3_0=ruleCompareOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperation");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCL.g:7530:4: (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    loop238:
                    do {
                        int alt238=2;
                        int LA238_0 = input.LA(1);

                        if ( (LA238_0==39) ) {
                            alt238=1;
                        }


                        switch (alt238) {
                    	case 1 :
                    	    // InternalSCL.g:7531:5: otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) )
                    	    {
                    	    otherlv_4=(Token)match(input,39,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getBitwiseAndExpressionAccess().getAmpersandKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCL.g:7535:5: ( (lv_subExpressions_5_0= ruleCompareOperation ) )
                    	    // InternalSCL.g:7536:6: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    {
                    	    // InternalSCL.g:7536:6: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    // InternalSCL.g:7537:7: lv_subExpressions_5_0= ruleCompareOperation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_97);
                    	    lv_subExpressions_5_0=ruleCompareOperation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperation");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop238;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseAndExpression"


    // $ANTLR start "entryRuleCompareOperation"
    // InternalSCL.g:7560:1: entryRuleCompareOperation returns [EObject current=null] : iv_ruleCompareOperation= ruleCompareOperation EOF ;
    public final EObject entryRuleCompareOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompareOperation = null;


        try {
            // InternalSCL.g:7560:57: (iv_ruleCompareOperation= ruleCompareOperation EOF )
            // InternalSCL.g:7561:2: iv_ruleCompareOperation= ruleCompareOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompareOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCompareOperation=ruleCompareOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompareOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompareOperation"


    // $ANTLR start "ruleCompareOperation"
    // InternalSCL.g:7567:1: ruleCompareOperation returns [EObject current=null] : (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? ) ;
    public final EObject ruleCompareOperation() throws RecognitionException {
        EObject current = null;

        EObject this_NotOrValuedExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:7573:2: ( (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? ) )
            // InternalSCL.g:7574:2: (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? )
            {
            // InternalSCL.g:7574:2: (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? )
            // InternalSCL.g:7575:3: this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getCompareOperationAccess().getNotOrValuedExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_98);
            this_NotOrValuedExpression_0=ruleNotOrValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NotOrValuedExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCL.g:7586:3: ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )?
            int alt240=2;
            int LA240_0 = input.LA(1);

            if ( ((LA240_0>=94 && LA240_0<=99)) ) {
                alt240=1;
            }
            switch (alt240) {
                case 1 :
                    // InternalSCL.g:7587:4: () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
                    {
                    // InternalSCL.g:7587:4: ()
                    // InternalSCL.g:7588:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getCompareOperationAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCL.g:7597:4: ( (lv_operator_2_0= ruleCompareOperator ) )
                    // InternalSCL.g:7598:5: (lv_operator_2_0= ruleCompareOperator )
                    {
                    // InternalSCL.g:7598:5: (lv_operator_2_0= ruleCompareOperator )
                    // InternalSCL.g:7599:6: lv_operator_2_0= ruleCompareOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCompareOperationAccess().getOperatorCompareOperatorEnumRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    lv_operator_2_0=ruleCompareOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCompareOperationRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCL.g:7616:4: ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
                    // InternalSCL.g:7617:5: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
                    {
                    // InternalSCL.g:7617:5: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
                    // InternalSCL.g:7618:6: lv_subExpressions_3_0= ruleNotOrValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCompareOperationAccess().getSubExpressionsNotOrValuedExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_3_0=ruleNotOrValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCompareOperationRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.NotOrValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareOperation"


    // $ANTLR start "entryRuleNotOrValuedExpression"
    // InternalSCL.g:7640:1: entryRuleNotOrValuedExpression returns [EObject current=null] : iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF ;
    public final EObject entryRuleNotOrValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNotOrValuedExpression = null;


        try {
            // InternalSCL.g:7640:62: (iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF )
            // InternalSCL.g:7641:2: iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNotOrValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNotOrValuedExpression=ruleNotOrValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNotOrValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNotOrValuedExpression"


    // $ANTLR start "ruleNotOrValuedExpression"
    // InternalSCL.g:7647:1: ruleNotOrValuedExpression returns [EObject current=null] : (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression ) ;
    public final EObject ruleNotOrValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ValuedExpression_0 = null;

        EObject this_NotExpression_1 = null;



        	enterRule();

        try {
            // InternalSCL.g:7653:2: ( (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression ) )
            // InternalSCL.g:7654:2: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )
            {
            // InternalSCL.g:7654:2: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )
            int alt241=2;
            alt241 = dfa241.predict(input);
            switch (alt241) {
                case 1 :
                    // InternalSCL.g:7655:3: this_ValuedExpression_0= ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotOrValuedExpressionAccess().getValuedExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_0=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCL.g:7667:3: this_NotExpression_1= ruleNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotOrValuedExpressionAccess().getNotExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NotExpression_1=ruleNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NotExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotOrValuedExpression"


    // $ANTLR start "entryRuleBitwiseNotExpression"
    // InternalSCL.g:7682:1: entryRuleBitwiseNotExpression returns [EObject current=null] : iv_ruleBitwiseNotExpression= ruleBitwiseNotExpression EOF ;
    public final EObject entryRuleBitwiseNotExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseNotExpression = null;


        try {
            // InternalSCL.g:7682:61: (iv_ruleBitwiseNotExpression= ruleBitwiseNotExpression EOF )
            // InternalSCL.g:7683:2: iv_ruleBitwiseNotExpression= ruleBitwiseNotExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseNotExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseNotExpression=ruleBitwiseNotExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseNotExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseNotExpression"


    // $ANTLR start "ruleBitwiseNotExpression"
    // InternalSCL.g:7689:1: ruleBitwiseNotExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) ;
    public final EObject ruleBitwiseNotExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_AtomicExpression_3 = null;



        	enterRule();

        try {
            // InternalSCL.g:7695:2: ( ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) )
            // InternalSCL.g:7696:2: ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            {
            // InternalSCL.g:7696:2: ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            int alt242=2;
            int LA242_0 = input.LA(1);

            if ( (LA242_0==101) ) {
                alt242=1;
            }
            else if ( (LA242_0==RULE_ID||LA242_0==RULE_HOSTCODE||(LA242_0>=RULE_BOOLEAN && LA242_0<=RULE_COMMENT_ANNOTATION)||LA242_0==34||LA242_0==53||LA242_0==58||LA242_0==72||LA242_0==76||LA242_0==100||LA242_0==102) ) {
                alt242=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 242, 0, input);

                throw nvae;
            }
            switch (alt242) {
                case 1 :
                    // InternalSCL.g:7697:3: ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) )
                    {
                    // InternalSCL.g:7697:3: ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) )
                    // InternalSCL.g:7698:4: () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) )
                    {
                    // InternalSCL.g:7698:4: ()
                    // InternalSCL.g:7699:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getBitwiseNotExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCL.g:7708:4: ( (lv_operator_1_0= ruleBitwiseNotOperator ) )
                    // InternalSCL.g:7709:5: (lv_operator_1_0= ruleBitwiseNotOperator )
                    {
                    // InternalSCL.g:7709:5: (lv_operator_1_0= ruleBitwiseNotOperator )
                    // InternalSCL.g:7710:6: lv_operator_1_0= ruleBitwiseNotOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getOperatorBitwiseNotOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    lv_operator_1_0=ruleBitwiseNotOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBitwiseNotExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseNotOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCL.g:7727:4: ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) )
                    // InternalSCL.g:7728:5: (lv_subExpressions_2_0= ruleBitwiseNotExpression )
                    {
                    // InternalSCL.g:7728:5: (lv_subExpressions_2_0= ruleBitwiseNotExpression )
                    // InternalSCL.g:7729:6: lv_subExpressions_2_0= ruleBitwiseNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getSubExpressionsBitwiseNotExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleBitwiseNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBitwiseNotExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseNotExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:7748:3: this_AtomicExpression_3= ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getAtomicExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicExpression_3=ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseNotExpression"


    // $ANTLR start "entryRuleNotExpression"
    // InternalSCL.g:7763:1: entryRuleNotExpression returns [EObject current=null] : iv_ruleNotExpression= ruleNotExpression EOF ;
    public final EObject entryRuleNotExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNotExpression = null;


        try {
            // InternalSCL.g:7763:54: (iv_ruleNotExpression= ruleNotExpression EOF )
            // InternalSCL.g:7764:2: iv_ruleNotExpression= ruleNotExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNotExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNotExpression=ruleNotExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNotExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNotExpression"


    // $ANTLR start "ruleNotExpression"
    // InternalSCL.g:7770:1: ruleNotExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_BitwiseNotExpression_3= ruleBitwiseNotExpression ) ;
    public final EObject ruleNotExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_BitwiseNotExpression_3 = null;



        	enterRule();

        try {
            // InternalSCL.g:7776:2: ( ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_BitwiseNotExpression_3= ruleBitwiseNotExpression ) )
            // InternalSCL.g:7777:2: ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_BitwiseNotExpression_3= ruleBitwiseNotExpression )
            {
            // InternalSCL.g:7777:2: ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_BitwiseNotExpression_3= ruleBitwiseNotExpression )
            int alt243=2;
            int LA243_0 = input.LA(1);

            if ( (LA243_0==38) ) {
                alt243=1;
            }
            else if ( (LA243_0==RULE_ID||LA243_0==RULE_HOSTCODE||(LA243_0>=RULE_BOOLEAN && LA243_0<=RULE_COMMENT_ANNOTATION)||LA243_0==34||LA243_0==53||LA243_0==58||LA243_0==72||LA243_0==76||(LA243_0>=100 && LA243_0<=102)) ) {
                alt243=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 243, 0, input);

                throw nvae;
            }
            switch (alt243) {
                case 1 :
                    // InternalSCL.g:7778:3: ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) )
                    {
                    // InternalSCL.g:7778:3: ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) )
                    // InternalSCL.g:7779:4: () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) )
                    {
                    // InternalSCL.g:7779:4: ()
                    // InternalSCL.g:7780:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getNotExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCL.g:7789:4: ( (lv_operator_1_0= ruleNotOperator ) )
                    // InternalSCL.g:7790:5: (lv_operator_1_0= ruleNotOperator )
                    {
                    // InternalSCL.g:7790:5: (lv_operator_1_0= ruleNotOperator )
                    // InternalSCL.g:7791:6: lv_operator_1_0= ruleNotOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNotExpressionAccess().getOperatorNotOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_16);
                    lv_operator_1_0=ruleNotOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNotExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.NotOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCL.g:7808:4: ( (lv_subExpressions_2_0= ruleNotExpression ) )
                    // InternalSCL.g:7809:5: (lv_subExpressions_2_0= ruleNotExpression )
                    {
                    // InternalSCL.g:7809:5: (lv_subExpressions_2_0= ruleNotExpression )
                    // InternalSCL.g:7810:6: lv_subExpressions_2_0= ruleNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNotExpressionAccess().getSubExpressionsNotExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNotExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.NotExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:7829:3: this_BitwiseNotExpression_3= ruleBitwiseNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotExpressionAccess().getBitwiseNotExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BitwiseNotExpression_3=ruleBitwiseNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BitwiseNotExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotExpression"


    // $ANTLR start "entryRuleValuedExpression"
    // InternalSCL.g:7844:1: entryRuleValuedExpression returns [EObject current=null] : iv_ruleValuedExpression= ruleValuedExpression EOF ;
    public final EObject entryRuleValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedExpression = null;


        try {
            // InternalSCL.g:7844:57: (iv_ruleValuedExpression= ruleValuedExpression EOF )
            // InternalSCL.g:7845:2: iv_ruleValuedExpression= ruleValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedExpression=ruleValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedExpression"


    // $ANTLR start "ruleValuedExpression"
    // InternalSCL.g:7851:1: ruleValuedExpression returns [EObject current=null] : this_ShiftExpressions_0= ruleShiftExpressions ;
    public final EObject ruleValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ShiftExpressions_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:7857:2: (this_ShiftExpressions_0= ruleShiftExpressions )
            // InternalSCL.g:7858:2: this_ShiftExpressions_0= ruleShiftExpressions
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getValuedExpressionAccess().getShiftExpressionsParserRuleCall());
              	
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_ShiftExpressions_0=ruleShiftExpressions();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_ShiftExpressions_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedExpression"


    // $ANTLR start "entryRuleShiftExpressions"
    // InternalSCL.g:7872:1: entryRuleShiftExpressions returns [EObject current=null] : iv_ruleShiftExpressions= ruleShiftExpressions EOF ;
    public final EObject entryRuleShiftExpressions() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftExpressions = null;


        try {
            // InternalSCL.g:7872:57: (iv_ruleShiftExpressions= ruleShiftExpressions EOF )
            // InternalSCL.g:7873:2: iv_ruleShiftExpressions= ruleShiftExpressions EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftExpressionsRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShiftExpressions=ruleShiftExpressions();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftExpressions; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShiftExpressions"


    // $ANTLR start "ruleShiftExpressions"
    // InternalSCL.g:7879:1: ruleShiftExpressions returns [EObject current=null] : (this_SumExpression_0= ruleSumExpression ( ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleShiftLeftRightExpression ) ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleShiftLeftRightExpression ) ) )* ) )? ) ;
    public final EObject ruleShiftExpressions() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_9=null;
        Token otherlv_14=null;
        EObject this_SumExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;

        Enumerator lv_operator_12_0 = null;

        EObject lv_subExpressions_13_0 = null;

        EObject lv_subExpressions_15_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:7885:2: ( (this_SumExpression_0= ruleSumExpression ( ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleShiftLeftRightExpression ) ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleShiftLeftRightExpression ) ) )* ) )? ) )
            // InternalSCL.g:7886:2: (this_SumExpression_0= ruleSumExpression ( ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleShiftLeftRightExpression ) ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleShiftLeftRightExpression ) ) )* ) )? )
            {
            // InternalSCL.g:7886:2: (this_SumExpression_0= ruleSumExpression ( ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleShiftLeftRightExpression ) ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleShiftLeftRightExpression ) ) )* ) )? )
            // InternalSCL.g:7887:3: this_SumExpression_0= ruleSumExpression ( ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleShiftLeftRightExpression ) ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleShiftLeftRightExpression ) ) )* ) )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSumExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_99);
            this_SumExpression_0=ruleSumExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SumExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCL.g:7898:3: ( ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleShiftLeftRightExpression ) ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleShiftLeftRightExpression ) ) )* ) )?
            int alt247=4;
            switch ( input.LA(1) ) {
                case 63:
                    {
                    alt247=1;
                    }
                    break;
                case 64:
                    {
                    alt247=2;
                    }
                    break;
                case 65:
                    {
                    alt247=3;
                    }
                    break;
            }

            switch (alt247) {
                case 1 :
                    // InternalSCL.g:7899:4: ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* )
                    {
                    // InternalSCL.g:7899:4: ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* )
                    // InternalSCL.g:7900:5: () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )*
                    {
                    // InternalSCL.g:7900:5: ()
                    // InternalSCL.g:7901:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndAdd(
                      							grammarAccess.getShiftExpressionsAccess().getOperatorExpressionSubExpressionsAction_1_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSCL.g:7910:5: ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) )
                    // InternalSCL.g:7911:6: ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) )
                    {
                    // InternalSCL.g:7911:6: ( (lv_operator_2_0= ruleShiftLeftOperator ) )
                    // InternalSCL.g:7912:7: (lv_operator_2_0= ruleShiftLeftOperator )
                    {
                    // InternalSCL.g:7912:7: (lv_operator_2_0= ruleShiftLeftOperator )
                    // InternalSCL.g:7913:8: lv_operator_2_0= ruleShiftLeftOperator
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getOperatorShiftLeftOperatorEnumRuleCall_1_0_1_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_operator_2_0=ruleShiftLeftOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
                      								}
                      								set(
                      									current,
                      									"operator",
                      									lv_operator_2_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.ShiftLeftOperator");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSCL.g:7930:6: ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) )
                    // InternalSCL.g:7931:7: (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression )
                    {
                    // InternalSCL.g:7931:7: (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression )
                    // InternalSCL.g:7932:8: lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsShiftRightRightUnsignedExpressionParserRuleCall_1_0_1_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_101);
                    lv_subExpressions_3_0=ruleShiftRightRightUnsignedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
                      								}
                      								add(
                      									current,
                      									"subExpressions",
                      									lv_subExpressions_3_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightRightUnsignedExpression");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }

                    // InternalSCL.g:7950:5: (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )*
                    loop244:
                    do {
                        int alt244=2;
                        int LA244_0 = input.LA(1);

                        if ( (LA244_0==63) ) {
                            alt244=1;
                        }


                        switch (alt244) {
                    	case 1 :
                    	    // InternalSCL.g:7951:6: otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,63,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getShiftExpressionsAccess().getLessThanSignLessThanSignKeyword_1_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:7955:6: ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) )
                    	    // InternalSCL.g:7956:7: (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression )
                    	    {
                    	    // InternalSCL.g:7956:7: (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression )
                    	    // InternalSCL.g:7957:8: lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsShiftRightRightUnsignedExpressionParserRuleCall_1_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_101);
                    	    lv_subExpressions_5_0=ruleShiftRightRightUnsignedExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"subExpressions",
                    	      									lv_subExpressions_5_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightRightUnsignedExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop244;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:7977:4: ( () ( ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) ) )* )
                    {
                    // InternalSCL.g:7977:4: ( () ( ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) ) )* )
                    // InternalSCL.g:7978:5: () ( ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) ) )*
                    {
                    // InternalSCL.g:7978:5: ()
                    // InternalSCL.g:7979:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndAdd(
                      							grammarAccess.getShiftExpressionsAccess().getOperatorExpressionSubExpressionsAction_1_1_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSCL.g:7988:5: ( ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) ) )
                    // InternalSCL.g:7989:6: ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) )
                    {
                    // InternalSCL.g:7989:6: ( (lv_operator_7_0= ruleShiftRightOperator ) )
                    // InternalSCL.g:7990:7: (lv_operator_7_0= ruleShiftRightOperator )
                    {
                    // InternalSCL.g:7990:7: (lv_operator_7_0= ruleShiftRightOperator )
                    // InternalSCL.g:7991:8: lv_operator_7_0= ruleShiftRightOperator
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getOperatorShiftRightOperatorEnumRuleCall_1_1_1_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_operator_7_0=ruleShiftRightOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
                      								}
                      								set(
                      									current,
                      									"operator",
                      									lv_operator_7_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightOperator");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSCL.g:8008:6: ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) )
                    // InternalSCL.g:8009:7: (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression )
                    {
                    // InternalSCL.g:8009:7: (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression )
                    // InternalSCL.g:8010:8: lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsShiftLeftRightUnsignedExpressionParserRuleCall_1_1_1_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_102);
                    lv_subExpressions_8_0=ruleShiftLeftRightUnsignedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
                      								}
                      								add(
                      									current,
                      									"subExpressions",
                      									lv_subExpressions_8_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.ShiftLeftRightUnsignedExpression");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }

                    // InternalSCL.g:8028:5: (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) ) )*
                    loop245:
                    do {
                        int alt245=2;
                        int LA245_0 = input.LA(1);

                        if ( (LA245_0==64) ) {
                            alt245=1;
                        }


                        switch (alt245) {
                    	case 1 :
                    	    // InternalSCL.g:8029:6: otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) )
                    	    {
                    	    otherlv_9=(Token)match(input,64,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_9, grammarAccess.getShiftExpressionsAccess().getGreaterThanSignGreaterThanSignKeyword_1_1_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:8033:6: ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) )
                    	    // InternalSCL.g:8034:7: (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression )
                    	    {
                    	    // InternalSCL.g:8034:7: (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression )
                    	    // InternalSCL.g:8035:8: lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsShiftLeftRightUnsignedExpressionParserRuleCall_1_1_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_102);
                    	    lv_subExpressions_10_0=ruleShiftLeftRightUnsignedExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"subExpressions",
                    	      									lv_subExpressions_10_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.ShiftLeftRightUnsignedExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop245;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 3 :
                    // InternalSCL.g:8055:4: ( () ( ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleShiftLeftRightExpression ) ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleShiftLeftRightExpression ) ) )* )
                    {
                    // InternalSCL.g:8055:4: ( () ( ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleShiftLeftRightExpression ) ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleShiftLeftRightExpression ) ) )* )
                    // InternalSCL.g:8056:5: () ( ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleShiftLeftRightExpression ) ) ) (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleShiftLeftRightExpression ) ) )*
                    {
                    // InternalSCL.g:8056:5: ()
                    // InternalSCL.g:8057:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndAdd(
                      							grammarAccess.getShiftExpressionsAccess().getOperatorExpressionSubExpressionsAction_1_2_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSCL.g:8066:5: ( ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleShiftLeftRightExpression ) ) )
                    // InternalSCL.g:8067:6: ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_13_0= ruleShiftLeftRightExpression ) )
                    {
                    // InternalSCL.g:8067:6: ( (lv_operator_12_0= ruleShiftRightUnsignedOperator ) )
                    // InternalSCL.g:8068:7: (lv_operator_12_0= ruleShiftRightUnsignedOperator )
                    {
                    // InternalSCL.g:8068:7: (lv_operator_12_0= ruleShiftRightUnsignedOperator )
                    // InternalSCL.g:8069:8: lv_operator_12_0= ruleShiftRightUnsignedOperator
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getOperatorShiftRightUnsignedOperatorEnumRuleCall_1_2_1_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_operator_12_0=ruleShiftRightUnsignedOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
                      								}
                      								set(
                      									current,
                      									"operator",
                      									lv_operator_12_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedOperator");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSCL.g:8086:6: ( (lv_subExpressions_13_0= ruleShiftLeftRightExpression ) )
                    // InternalSCL.g:8087:7: (lv_subExpressions_13_0= ruleShiftLeftRightExpression )
                    {
                    // InternalSCL.g:8087:7: (lv_subExpressions_13_0= ruleShiftLeftRightExpression )
                    // InternalSCL.g:8088:8: lv_subExpressions_13_0= ruleShiftLeftRightExpression
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsShiftLeftRightExpressionParserRuleCall_1_2_1_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_103);
                    lv_subExpressions_13_0=ruleShiftLeftRightExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
                      								}
                      								add(
                      									current,
                      									"subExpressions",
                      									lv_subExpressions_13_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.ShiftLeftRightExpression");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }

                    // InternalSCL.g:8106:5: (otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleShiftLeftRightExpression ) ) )*
                    loop246:
                    do {
                        int alt246=2;
                        int LA246_0 = input.LA(1);

                        if ( (LA246_0==65) ) {
                            alt246=1;
                        }


                        switch (alt246) {
                    	case 1 :
                    	    // InternalSCL.g:8107:6: otherlv_14= '>>>' ( (lv_subExpressions_15_0= ruleShiftLeftRightExpression ) )
                    	    {
                    	    otherlv_14=(Token)match(input,65,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_14, grammarAccess.getShiftExpressionsAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_2_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:8111:6: ( (lv_subExpressions_15_0= ruleShiftLeftRightExpression ) )
                    	    // InternalSCL.g:8112:7: (lv_subExpressions_15_0= ruleShiftLeftRightExpression )
                    	    {
                    	    // InternalSCL.g:8112:7: (lv_subExpressions_15_0= ruleShiftLeftRightExpression )
                    	    // InternalSCL.g:8113:8: lv_subExpressions_15_0= ruleShiftLeftRightExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getShiftExpressionsAccess().getSubExpressionsShiftLeftRightExpressionParserRuleCall_1_2_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_103);
                    	    lv_subExpressions_15_0=ruleShiftLeftRightExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getShiftExpressionsRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"subExpressions",
                    	      									lv_subExpressions_15_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.ShiftLeftRightExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop246;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftExpressions"


    // $ANTLR start "entryRuleShiftLeftRightExpression"
    // InternalSCL.g:8137:1: entryRuleShiftLeftRightExpression returns [EObject current=null] : iv_ruleShiftLeftRightExpression= ruleShiftLeftRightExpression EOF ;
    public final EObject entryRuleShiftLeftRightExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftLeftRightExpression = null;


        try {
            // InternalSCL.g:8137:65: (iv_ruleShiftLeftRightExpression= ruleShiftLeftRightExpression EOF )
            // InternalSCL.g:8138:2: iv_ruleShiftLeftRightExpression= ruleShiftLeftRightExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftLeftRightExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShiftLeftRightExpression=ruleShiftLeftRightExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftLeftRightExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShiftLeftRightExpression"


    // $ANTLR start "ruleShiftLeftRightExpression"
    // InternalSCL.g:8144:1: ruleShiftLeftRightExpression returns [EObject current=null] : (this_SumExpression_0= ruleSumExpression ( ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) ) )* ) )? ) ;
    public final EObject ruleShiftLeftRightExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_9=null;
        EObject this_SumExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:8150:2: ( (this_SumExpression_0= ruleSumExpression ( ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) ) )* ) )? ) )
            // InternalSCL.g:8151:2: (this_SumExpression_0= ruleSumExpression ( ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) ) )* ) )? )
            {
            // InternalSCL.g:8151:2: (this_SumExpression_0= ruleSumExpression ( ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) ) )* ) )? )
            // InternalSCL.g:8152:3: this_SumExpression_0= ruleSumExpression ( ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) ) )* ) )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getShiftLeftRightExpressionAccess().getSumExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_104);
            this_SumExpression_0=ruleSumExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SumExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCL.g:8163:3: ( ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) ) )* ) )?
            int alt250=3;
            alt250 = dfa250.predict(input);
            switch (alt250) {
                case 1 :
                    // InternalSCL.g:8164:4: ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* )
                    {
                    // InternalSCL.g:8164:4: ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* )
                    // InternalSCL.g:8165:5: () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )*
                    {
                    // InternalSCL.g:8165:5: ()
                    // InternalSCL.g:8166:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndAdd(
                      							grammarAccess.getShiftLeftRightExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSCL.g:8175:5: ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) )
                    // InternalSCL.g:8176:6: ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) )
                    {
                    // InternalSCL.g:8176:6: ( (lv_operator_2_0= ruleShiftLeftOperator ) )
                    // InternalSCL.g:8177:7: (lv_operator_2_0= ruleShiftLeftOperator )
                    {
                    // InternalSCL.g:8177:7: (lv_operator_2_0= ruleShiftLeftOperator )
                    // InternalSCL.g:8178:8: lv_operator_2_0= ruleShiftLeftOperator
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getShiftLeftRightExpressionAccess().getOperatorShiftLeftOperatorEnumRuleCall_1_0_1_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_operator_2_0=ruleShiftLeftOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getShiftLeftRightExpressionRule());
                      								}
                      								set(
                      									current,
                      									"operator",
                      									lv_operator_2_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.ShiftLeftOperator");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSCL.g:8195:6: ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) )
                    // InternalSCL.g:8196:7: (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression )
                    {
                    // InternalSCL.g:8196:7: (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression )
                    // InternalSCL.g:8197:8: lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getShiftLeftRightExpressionAccess().getSubExpressionsShiftRightRightUnsignedExpressionParserRuleCall_1_0_1_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_101);
                    lv_subExpressions_3_0=ruleShiftRightRightUnsignedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getShiftLeftRightExpressionRule());
                      								}
                      								add(
                      									current,
                      									"subExpressions",
                      									lv_subExpressions_3_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightRightUnsignedExpression");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }

                    // InternalSCL.g:8215:5: (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )*
                    loop248:
                    do {
                        int alt248=2;
                        int LA248_0 = input.LA(1);

                        if ( (LA248_0==63) ) {
                            int LA248_2 = input.LA(2);

                            if ( (synpred276_InternalSCL()) ) {
                                alt248=1;
                            }


                        }


                        switch (alt248) {
                    	case 1 :
                    	    // InternalSCL.g:8216:6: otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,63,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getShiftLeftRightExpressionAccess().getLessThanSignLessThanSignKeyword_1_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:8220:6: ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) )
                    	    // InternalSCL.g:8221:7: (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression )
                    	    {
                    	    // InternalSCL.g:8221:7: (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression )
                    	    // InternalSCL.g:8222:8: lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getShiftLeftRightExpressionAccess().getSubExpressionsShiftRightRightUnsignedExpressionParserRuleCall_1_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_101);
                    	    lv_subExpressions_5_0=ruleShiftRightRightUnsignedExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getShiftLeftRightExpressionRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"subExpressions",
                    	      									lv_subExpressions_5_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightRightUnsignedExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop248;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:8242:4: ( () ( ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) ) )* )
                    {
                    // InternalSCL.g:8242:4: ( () ( ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) ) )* )
                    // InternalSCL.g:8243:5: () ( ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) ) )*
                    {
                    // InternalSCL.g:8243:5: ()
                    // InternalSCL.g:8244:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndAdd(
                      							grammarAccess.getShiftLeftRightExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSCL.g:8253:5: ( ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) ) )
                    // InternalSCL.g:8254:6: ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) )
                    {
                    // InternalSCL.g:8254:6: ( (lv_operator_7_0= ruleShiftRightOperator ) )
                    // InternalSCL.g:8255:7: (lv_operator_7_0= ruleShiftRightOperator )
                    {
                    // InternalSCL.g:8255:7: (lv_operator_7_0= ruleShiftRightOperator )
                    // InternalSCL.g:8256:8: lv_operator_7_0= ruleShiftRightOperator
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getShiftLeftRightExpressionAccess().getOperatorShiftRightOperatorEnumRuleCall_1_1_1_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_operator_7_0=ruleShiftRightOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getShiftLeftRightExpressionRule());
                      								}
                      								set(
                      									current,
                      									"operator",
                      									lv_operator_7_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightOperator");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSCL.g:8273:6: ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) )
                    // InternalSCL.g:8274:7: (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression )
                    {
                    // InternalSCL.g:8274:7: (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression )
                    // InternalSCL.g:8275:8: lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getShiftLeftRightExpressionAccess().getSubExpressionsShiftLeftRightUnsignedExpressionParserRuleCall_1_1_1_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_102);
                    lv_subExpressions_8_0=ruleShiftLeftRightUnsignedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getShiftLeftRightExpressionRule());
                      								}
                      								add(
                      									current,
                      									"subExpressions",
                      									lv_subExpressions_8_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.ShiftLeftRightUnsignedExpression");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }

                    // InternalSCL.g:8293:5: (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) ) )*
                    loop249:
                    do {
                        int alt249=2;
                        int LA249_0 = input.LA(1);

                        if ( (LA249_0==64) ) {
                            int LA249_2 = input.LA(2);

                            if ( (synpred278_InternalSCL()) ) {
                                alt249=1;
                            }


                        }


                        switch (alt249) {
                    	case 1 :
                    	    // InternalSCL.g:8294:6: otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) )
                    	    {
                    	    otherlv_9=(Token)match(input,64,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_9, grammarAccess.getShiftLeftRightExpressionAccess().getGreaterThanSignGreaterThanSignKeyword_1_1_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:8298:6: ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) )
                    	    // InternalSCL.g:8299:7: (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression )
                    	    {
                    	    // InternalSCL.g:8299:7: (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression )
                    	    // InternalSCL.g:8300:8: lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getShiftLeftRightExpressionAccess().getSubExpressionsShiftLeftRightUnsignedExpressionParserRuleCall_1_1_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_102);
                    	    lv_subExpressions_10_0=ruleShiftLeftRightUnsignedExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getShiftLeftRightExpressionRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"subExpressions",
                    	      									lv_subExpressions_10_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.ShiftLeftRightUnsignedExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop249;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftLeftRightExpression"


    // $ANTLR start "entryRuleShiftLeftRightUnsignedExpression"
    // InternalSCL.g:8324:1: entryRuleShiftLeftRightUnsignedExpression returns [EObject current=null] : iv_ruleShiftLeftRightUnsignedExpression= ruleShiftLeftRightUnsignedExpression EOF ;
    public final EObject entryRuleShiftLeftRightUnsignedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftLeftRightUnsignedExpression = null;


        try {
            // InternalSCL.g:8324:73: (iv_ruleShiftLeftRightUnsignedExpression= ruleShiftLeftRightUnsignedExpression EOF )
            // InternalSCL.g:8325:2: iv_ruleShiftLeftRightUnsignedExpression= ruleShiftLeftRightUnsignedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftLeftRightUnsignedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShiftLeftRightUnsignedExpression=ruleShiftLeftRightUnsignedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftLeftRightUnsignedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShiftLeftRightUnsignedExpression"


    // $ANTLR start "ruleShiftLeftRightUnsignedExpression"
    // InternalSCL.g:8331:1: ruleShiftLeftRightUnsignedExpression returns [EObject current=null] : (this_SumExpression_0= ruleSumExpression ( ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )* ) )? ) ;
    public final EObject ruleShiftLeftRightUnsignedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_9=null;
        EObject this_SumExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:8337:2: ( (this_SumExpression_0= ruleSumExpression ( ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )* ) )? ) )
            // InternalSCL.g:8338:2: (this_SumExpression_0= ruleSumExpression ( ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )* ) )? )
            {
            // InternalSCL.g:8338:2: (this_SumExpression_0= ruleSumExpression ( ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )* ) )? )
            // InternalSCL.g:8339:3: this_SumExpression_0= ruleSumExpression ( ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )* ) )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getShiftLeftRightUnsignedExpressionAccess().getSumExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_105);
            this_SumExpression_0=ruleSumExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SumExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCL.g:8350:3: ( ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )* ) )?
            int alt253=3;
            alt253 = dfa253.predict(input);
            switch (alt253) {
                case 1 :
                    // InternalSCL.g:8351:4: ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* )
                    {
                    // InternalSCL.g:8351:4: ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* )
                    // InternalSCL.g:8352:5: () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )*
                    {
                    // InternalSCL.g:8352:5: ()
                    // InternalSCL.g:8353:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndAdd(
                      							grammarAccess.getShiftLeftRightUnsignedExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSCL.g:8362:5: ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) )
                    // InternalSCL.g:8363:6: ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) )
                    {
                    // InternalSCL.g:8363:6: ( (lv_operator_2_0= ruleShiftLeftOperator ) )
                    // InternalSCL.g:8364:7: (lv_operator_2_0= ruleShiftLeftOperator )
                    {
                    // InternalSCL.g:8364:7: (lv_operator_2_0= ruleShiftLeftOperator )
                    // InternalSCL.g:8365:8: lv_operator_2_0= ruleShiftLeftOperator
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getShiftLeftRightUnsignedExpressionAccess().getOperatorShiftLeftOperatorEnumRuleCall_1_0_1_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_operator_2_0=ruleShiftLeftOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getShiftLeftRightUnsignedExpressionRule());
                      								}
                      								set(
                      									current,
                      									"operator",
                      									lv_operator_2_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.ShiftLeftOperator");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSCL.g:8382:6: ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) )
                    // InternalSCL.g:8383:7: (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression )
                    {
                    // InternalSCL.g:8383:7: (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression )
                    // InternalSCL.g:8384:8: lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getShiftLeftRightUnsignedExpressionAccess().getSubExpressionsShiftRightRightUnsignedExpressionParserRuleCall_1_0_1_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_101);
                    lv_subExpressions_3_0=ruleShiftRightRightUnsignedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getShiftLeftRightUnsignedExpressionRule());
                      								}
                      								add(
                      									current,
                      									"subExpressions",
                      									lv_subExpressions_3_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightRightUnsignedExpression");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }

                    // InternalSCL.g:8402:5: (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )*
                    loop251:
                    do {
                        int alt251=2;
                        int LA251_0 = input.LA(1);

                        if ( (LA251_0==63) ) {
                            int LA251_2 = input.LA(2);

                            if ( (synpred280_InternalSCL()) ) {
                                alt251=1;
                            }


                        }


                        switch (alt251) {
                    	case 1 :
                    	    // InternalSCL.g:8403:6: otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,63,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getShiftLeftRightUnsignedExpressionAccess().getLessThanSignLessThanSignKeyword_1_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:8407:6: ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) )
                    	    // InternalSCL.g:8408:7: (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression )
                    	    {
                    	    // InternalSCL.g:8408:7: (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression )
                    	    // InternalSCL.g:8409:8: lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getShiftLeftRightUnsignedExpressionAccess().getSubExpressionsShiftRightRightUnsignedExpressionParserRuleCall_1_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_101);
                    	    lv_subExpressions_5_0=ruleShiftRightRightUnsignedExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getShiftLeftRightUnsignedExpressionRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"subExpressions",
                    	      									lv_subExpressions_5_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightRightUnsignedExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop251;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:8429:4: ( () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )* )
                    {
                    // InternalSCL.g:8429:4: ( () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )* )
                    // InternalSCL.g:8430:5: () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )*
                    {
                    // InternalSCL.g:8430:5: ()
                    // InternalSCL.g:8431:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndAdd(
                      							grammarAccess.getShiftLeftRightUnsignedExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSCL.g:8440:5: ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) )
                    // InternalSCL.g:8441:6: ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) )
                    {
                    // InternalSCL.g:8441:6: ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) )
                    // InternalSCL.g:8442:7: (lv_operator_7_0= ruleShiftRightUnsignedOperator )
                    {
                    // InternalSCL.g:8442:7: (lv_operator_7_0= ruleShiftRightUnsignedOperator )
                    // InternalSCL.g:8443:8: lv_operator_7_0= ruleShiftRightUnsignedOperator
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getShiftLeftRightUnsignedExpressionAccess().getOperatorShiftRightUnsignedOperatorEnumRuleCall_1_1_1_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_operator_7_0=ruleShiftRightUnsignedOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getShiftLeftRightUnsignedExpressionRule());
                      								}
                      								set(
                      									current,
                      									"operator",
                      									lv_operator_7_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedOperator");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSCL.g:8460:6: ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) )
                    // InternalSCL.g:8461:7: (lv_subExpressions_8_0= ruleShiftLeftRightExpression )
                    {
                    // InternalSCL.g:8461:7: (lv_subExpressions_8_0= ruleShiftLeftRightExpression )
                    // InternalSCL.g:8462:8: lv_subExpressions_8_0= ruleShiftLeftRightExpression
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getShiftLeftRightUnsignedExpressionAccess().getSubExpressionsShiftLeftRightExpressionParserRuleCall_1_1_1_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_103);
                    lv_subExpressions_8_0=ruleShiftLeftRightExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getShiftLeftRightUnsignedExpressionRule());
                      								}
                      								add(
                      									current,
                      									"subExpressions",
                      									lv_subExpressions_8_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.ShiftLeftRightExpression");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }

                    // InternalSCL.g:8480:5: (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )*
                    loop252:
                    do {
                        int alt252=2;
                        int LA252_0 = input.LA(1);

                        if ( (LA252_0==65) ) {
                            int LA252_2 = input.LA(2);

                            if ( (synpred282_InternalSCL()) ) {
                                alt252=1;
                            }


                        }


                        switch (alt252) {
                    	case 1 :
                    	    // InternalSCL.g:8481:6: otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) )
                    	    {
                    	    otherlv_9=(Token)match(input,65,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_9, grammarAccess.getShiftLeftRightUnsignedExpressionAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_1_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:8485:6: ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) )
                    	    // InternalSCL.g:8486:7: (lv_subExpressions_10_0= ruleShiftLeftRightExpression )
                    	    {
                    	    // InternalSCL.g:8486:7: (lv_subExpressions_10_0= ruleShiftLeftRightExpression )
                    	    // InternalSCL.g:8487:8: lv_subExpressions_10_0= ruleShiftLeftRightExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getShiftLeftRightUnsignedExpressionAccess().getSubExpressionsShiftLeftRightExpressionParserRuleCall_1_1_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_103);
                    	    lv_subExpressions_10_0=ruleShiftLeftRightExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getShiftLeftRightUnsignedExpressionRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"subExpressions",
                    	      									lv_subExpressions_10_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.ShiftLeftRightExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop252;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftLeftRightUnsignedExpression"


    // $ANTLR start "entryRuleShiftRightRightUnsignedExpression"
    // InternalSCL.g:8511:1: entryRuleShiftRightRightUnsignedExpression returns [EObject current=null] : iv_ruleShiftRightRightUnsignedExpression= ruleShiftRightRightUnsignedExpression EOF ;
    public final EObject entryRuleShiftRightRightUnsignedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftRightRightUnsignedExpression = null;


        try {
            // InternalSCL.g:8511:74: (iv_ruleShiftRightRightUnsignedExpression= ruleShiftRightRightUnsignedExpression EOF )
            // InternalSCL.g:8512:2: iv_ruleShiftRightRightUnsignedExpression= ruleShiftRightRightUnsignedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftRightRightUnsignedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShiftRightRightUnsignedExpression=ruleShiftRightRightUnsignedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftRightRightUnsignedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShiftRightRightUnsignedExpression"


    // $ANTLR start "ruleShiftRightRightUnsignedExpression"
    // InternalSCL.g:8518:1: ruleShiftRightRightUnsignedExpression returns [EObject current=null] : (this_SumExpression_0= ruleSumExpression ( ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )* ) )? ) ;
    public final EObject ruleShiftRightRightUnsignedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_9=null;
        EObject this_SumExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:8524:2: ( (this_SumExpression_0= ruleSumExpression ( ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )* ) )? ) )
            // InternalSCL.g:8525:2: (this_SumExpression_0= ruleSumExpression ( ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )* ) )? )
            {
            // InternalSCL.g:8525:2: (this_SumExpression_0= ruleSumExpression ( ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )* ) )? )
            // InternalSCL.g:8526:3: this_SumExpression_0= ruleSumExpression ( ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )* ) )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getShiftRightRightUnsignedExpressionAccess().getSumExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_106);
            this_SumExpression_0=ruleSumExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SumExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCL.g:8537:3: ( ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )* ) )?
            int alt256=3;
            alt256 = dfa256.predict(input);
            switch (alt256) {
                case 1 :
                    // InternalSCL.g:8538:4: ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression ) ) )* )
                    {
                    // InternalSCL.g:8538:4: ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression ) ) )* )
                    // InternalSCL.g:8539:5: () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression ) ) )*
                    {
                    // InternalSCL.g:8539:5: ()
                    // InternalSCL.g:8540:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndAdd(
                      							grammarAccess.getShiftRightRightUnsignedExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSCL.g:8549:5: ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftLeftRightUnsignedExpression ) ) )
                    // InternalSCL.g:8550:6: ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftLeftRightUnsignedExpression ) )
                    {
                    // InternalSCL.g:8550:6: ( (lv_operator_2_0= ruleShiftRightOperator ) )
                    // InternalSCL.g:8551:7: (lv_operator_2_0= ruleShiftRightOperator )
                    {
                    // InternalSCL.g:8551:7: (lv_operator_2_0= ruleShiftRightOperator )
                    // InternalSCL.g:8552:8: lv_operator_2_0= ruleShiftRightOperator
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getShiftRightRightUnsignedExpressionAccess().getOperatorShiftRightOperatorEnumRuleCall_1_0_1_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_operator_2_0=ruleShiftRightOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getShiftRightRightUnsignedExpressionRule());
                      								}
                      								set(
                      									current,
                      									"operator",
                      									lv_operator_2_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightOperator");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSCL.g:8569:6: ( (lv_subExpressions_3_0= ruleShiftLeftRightUnsignedExpression ) )
                    // InternalSCL.g:8570:7: (lv_subExpressions_3_0= ruleShiftLeftRightUnsignedExpression )
                    {
                    // InternalSCL.g:8570:7: (lv_subExpressions_3_0= ruleShiftLeftRightUnsignedExpression )
                    // InternalSCL.g:8571:8: lv_subExpressions_3_0= ruleShiftLeftRightUnsignedExpression
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getShiftRightRightUnsignedExpressionAccess().getSubExpressionsShiftLeftRightUnsignedExpressionParserRuleCall_1_0_1_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_102);
                    lv_subExpressions_3_0=ruleShiftLeftRightUnsignedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getShiftRightRightUnsignedExpressionRule());
                      								}
                      								add(
                      									current,
                      									"subExpressions",
                      									lv_subExpressions_3_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.ShiftLeftRightUnsignedExpression");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }

                    // InternalSCL.g:8589:5: (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression ) ) )*
                    loop254:
                    do {
                        int alt254=2;
                        int LA254_0 = input.LA(1);

                        if ( (LA254_0==64) ) {
                            int LA254_2 = input.LA(2);

                            if ( (synpred284_InternalSCL()) ) {
                                alt254=1;
                            }


                        }


                        switch (alt254) {
                    	case 1 :
                    	    // InternalSCL.g:8590:6: otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,64,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getShiftRightRightUnsignedExpressionAccess().getGreaterThanSignGreaterThanSignKeyword_1_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:8594:6: ( (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression ) )
                    	    // InternalSCL.g:8595:7: (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression )
                    	    {
                    	    // InternalSCL.g:8595:7: (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression )
                    	    // InternalSCL.g:8596:8: lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getShiftRightRightUnsignedExpressionAccess().getSubExpressionsShiftLeftRightUnsignedExpressionParserRuleCall_1_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_102);
                    	    lv_subExpressions_5_0=ruleShiftLeftRightUnsignedExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getShiftRightRightUnsignedExpressionRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"subExpressions",
                    	      									lv_subExpressions_5_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.ShiftLeftRightUnsignedExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop254;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:8616:4: ( () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )* )
                    {
                    // InternalSCL.g:8616:4: ( () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )* )
                    // InternalSCL.g:8617:5: () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )*
                    {
                    // InternalSCL.g:8617:5: ()
                    // InternalSCL.g:8618:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndAdd(
                      							grammarAccess.getShiftRightRightUnsignedExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSCL.g:8627:5: ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) )
                    // InternalSCL.g:8628:6: ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) )
                    {
                    // InternalSCL.g:8628:6: ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) )
                    // InternalSCL.g:8629:7: (lv_operator_7_0= ruleShiftRightUnsignedOperator )
                    {
                    // InternalSCL.g:8629:7: (lv_operator_7_0= ruleShiftRightUnsignedOperator )
                    // InternalSCL.g:8630:8: lv_operator_7_0= ruleShiftRightUnsignedOperator
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getShiftRightRightUnsignedExpressionAccess().getOperatorShiftRightUnsignedOperatorEnumRuleCall_1_1_1_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_operator_7_0=ruleShiftRightUnsignedOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getShiftRightRightUnsignedExpressionRule());
                      								}
                      								set(
                      									current,
                      									"operator",
                      									lv_operator_7_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedOperator");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSCL.g:8647:6: ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) )
                    // InternalSCL.g:8648:7: (lv_subExpressions_8_0= ruleShiftLeftRightExpression )
                    {
                    // InternalSCL.g:8648:7: (lv_subExpressions_8_0= ruleShiftLeftRightExpression )
                    // InternalSCL.g:8649:8: lv_subExpressions_8_0= ruleShiftLeftRightExpression
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getShiftRightRightUnsignedExpressionAccess().getSubExpressionsShiftLeftRightExpressionParserRuleCall_1_1_1_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_103);
                    lv_subExpressions_8_0=ruleShiftLeftRightExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getShiftRightRightUnsignedExpressionRule());
                      								}
                      								add(
                      									current,
                      									"subExpressions",
                      									lv_subExpressions_8_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.ShiftLeftRightExpression");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }

                    // InternalSCL.g:8667:5: (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )*
                    loop255:
                    do {
                        int alt255=2;
                        int LA255_0 = input.LA(1);

                        if ( (LA255_0==65) ) {
                            int LA255_2 = input.LA(2);

                            if ( (synpred286_InternalSCL()) ) {
                                alt255=1;
                            }


                        }


                        switch (alt255) {
                    	case 1 :
                    	    // InternalSCL.g:8668:6: otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) )
                    	    {
                    	    otherlv_9=(Token)match(input,65,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_9, grammarAccess.getShiftRightRightUnsignedExpressionAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_1_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:8672:6: ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) )
                    	    // InternalSCL.g:8673:7: (lv_subExpressions_10_0= ruleShiftLeftRightExpression )
                    	    {
                    	    // InternalSCL.g:8673:7: (lv_subExpressions_10_0= ruleShiftLeftRightExpression )
                    	    // InternalSCL.g:8674:8: lv_subExpressions_10_0= ruleShiftLeftRightExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getShiftRightRightUnsignedExpressionAccess().getSubExpressionsShiftLeftRightExpressionParserRuleCall_1_1_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_103);
                    	    lv_subExpressions_10_0=ruleShiftLeftRightExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getShiftRightRightUnsignedExpressionRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"subExpressions",
                    	      									lv_subExpressions_10_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.ShiftLeftRightExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop255;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightRightUnsignedExpression"


    // $ANTLR start "entryRuleShiftRightExpression"
    // InternalSCL.g:8698:1: entryRuleShiftRightExpression returns [EObject current=null] : iv_ruleShiftRightExpression= ruleShiftRightExpression EOF ;
    public final EObject entryRuleShiftRightExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftRightExpression = null;


        try {
            // InternalSCL.g:8698:61: (iv_ruleShiftRightExpression= ruleShiftRightExpression EOF )
            // InternalSCL.g:8699:2: iv_ruleShiftRightExpression= ruleShiftRightExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftRightExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShiftRightExpression=ruleShiftRightExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftRightExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShiftRightExpression"


    // $ANTLR start "ruleShiftRightExpression"
    // InternalSCL.g:8705:1: ruleShiftRightExpression returns [EObject current=null] : (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? ) ;
    public final EObject ruleShiftRightExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_SumExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:8711:2: ( (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? ) )
            // InternalSCL.g:8712:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? )
            {
            // InternalSCL.g:8712:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? )
            // InternalSCL.g:8713:3: this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getSumExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_102);
            this_SumExpression_0=ruleSumExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SumExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCL.g:8724:3: ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )?
            int alt258=2;
            int LA258_0 = input.LA(1);

            if ( (LA258_0==64) ) {
                alt258=1;
            }
            switch (alt258) {
                case 1 :
                    // InternalSCL.g:8725:4: () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )*
                    {
                    // InternalSCL.g:8725:4: ()
                    // InternalSCL.g:8726:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getShiftRightExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCL.g:8735:4: ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) )
                    // InternalSCL.g:8736:5: ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) )
                    {
                    // InternalSCL.g:8736:5: ( (lv_operator_2_0= ruleShiftRightOperator ) )
                    // InternalSCL.g:8737:6: (lv_operator_2_0= ruleShiftRightOperator )
                    {
                    // InternalSCL.g:8737:6: (lv_operator_2_0= ruleShiftRightOperator )
                    // InternalSCL.g:8738:7: lv_operator_2_0= ruleShiftRightOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getOperatorShiftRightOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_operator_2_0=ruleShiftRightOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCL.g:8755:5: ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) )
                    // InternalSCL.g:8756:6: (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression )
                    {
                    // InternalSCL.g:8756:6: (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression )
                    // InternalSCL.g:8757:7: lv_subExpressions_3_0= ruleShiftRightUnsignedExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsShiftRightUnsignedExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_102);
                    lv_subExpressions_3_0=ruleShiftRightUnsignedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCL.g:8775:4: (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )*
                    loop257:
                    do {
                        int alt257=2;
                        int LA257_0 = input.LA(1);

                        if ( (LA257_0==64) ) {
                            alt257=1;
                        }


                        switch (alt257) {
                    	case 1 :
                    	    // InternalSCL.g:8776:5: otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,64,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getShiftRightExpressionAccess().getGreaterThanSignGreaterThanSignKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCL.g:8780:5: ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) )
                    	    // InternalSCL.g:8781:6: (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression )
                    	    {
                    	    // InternalSCL.g:8781:6: (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression )
                    	    // InternalSCL.g:8782:7: lv_subExpressions_5_0= ruleShiftRightUnsignedExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsShiftRightUnsignedExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_102);
                    	    lv_subExpressions_5_0=ruleShiftRightUnsignedExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getShiftRightExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop257;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightExpression"


    // $ANTLR start "entryRuleShiftRightUnsignedExpression"
    // InternalSCL.g:8805:1: entryRuleShiftRightUnsignedExpression returns [EObject current=null] : iv_ruleShiftRightUnsignedExpression= ruleShiftRightUnsignedExpression EOF ;
    public final EObject entryRuleShiftRightUnsignedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftRightUnsignedExpression = null;


        try {
            // InternalSCL.g:8805:69: (iv_ruleShiftRightUnsignedExpression= ruleShiftRightUnsignedExpression EOF )
            // InternalSCL.g:8806:2: iv_ruleShiftRightUnsignedExpression= ruleShiftRightUnsignedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShiftRightUnsignedExpression=ruleShiftRightUnsignedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftRightUnsignedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShiftRightUnsignedExpression"


    // $ANTLR start "ruleShiftRightUnsignedExpression"
    // InternalSCL.g:8812:1: ruleShiftRightUnsignedExpression returns [EObject current=null] : (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? ) ;
    public final EObject ruleShiftRightUnsignedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_SumExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:8818:2: ( (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? ) )
            // InternalSCL.g:8819:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? )
            {
            // InternalSCL.g:8819:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? )
            // InternalSCL.g:8820:3: this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getSumExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_103);
            this_SumExpression_0=ruleSumExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SumExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCL.g:8831:3: ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )?
            int alt260=2;
            int LA260_0 = input.LA(1);

            if ( (LA260_0==65) ) {
                alt260=1;
            }
            switch (alt260) {
                case 1 :
                    // InternalSCL.g:8832:4: () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )*
                    {
                    // InternalSCL.g:8832:4: ()
                    // InternalSCL.g:8833:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getShiftRightUnsignedExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCL.g:8842:4: ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) )
                    // InternalSCL.g:8843:5: ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) )
                    {
                    // InternalSCL.g:8843:5: ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) )
                    // InternalSCL.g:8844:6: (lv_operator_2_0= ruleShiftRightUnsignedOperator )
                    {
                    // InternalSCL.g:8844:6: (lv_operator_2_0= ruleShiftRightUnsignedOperator )
                    // InternalSCL.g:8845:7: lv_operator_2_0= ruleShiftRightUnsignedOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getOperatorShiftRightUnsignedOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_operator_2_0=ruleShiftRightUnsignedOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightUnsignedExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCL.g:8862:5: ( (lv_subExpressions_3_0= ruleSumExpression ) )
                    // InternalSCL.g:8863:6: (lv_subExpressions_3_0= ruleSumExpression )
                    {
                    // InternalSCL.g:8863:6: (lv_subExpressions_3_0= ruleSumExpression )
                    // InternalSCL.g:8864:7: lv_subExpressions_3_0= ruleSumExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsSumExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_103);
                    lv_subExpressions_3_0=ruleSumExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightUnsignedExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCL.g:8882:4: (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )*
                    loop259:
                    do {
                        int alt259=2;
                        int LA259_0 = input.LA(1);

                        if ( (LA259_0==65) ) {
                            alt259=1;
                        }


                        switch (alt259) {
                    	case 1 :
                    	    // InternalSCL.g:8883:5: otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,65,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getShiftRightUnsignedExpressionAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCL.g:8887:5: ( (lv_subExpressions_5_0= ruleSumExpression ) )
                    	    // InternalSCL.g:8888:6: (lv_subExpressions_5_0= ruleSumExpression )
                    	    {
                    	    // InternalSCL.g:8888:6: (lv_subExpressions_5_0= ruleSumExpression )
                    	    // InternalSCL.g:8889:7: lv_subExpressions_5_0= ruleSumExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsSumExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_103);
                    	    lv_subExpressions_5_0=ruleSumExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getShiftRightUnsignedExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop259;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightUnsignedExpression"


    // $ANTLR start "entryRuleSumExpression"
    // InternalSCL.g:8912:1: entryRuleSumExpression returns [EObject current=null] : iv_ruleSumExpression= ruleSumExpression EOF ;
    public final EObject entryRuleSumExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSumExpression = null;


        try {
            // InternalSCL.g:8912:54: (iv_ruleSumExpression= ruleSumExpression EOF )
            // InternalSCL.g:8913:2: iv_ruleSumExpression= ruleSumExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSumExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSumExpression=ruleSumExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSumExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSumExpression"


    // $ANTLR start "ruleSumExpression"
    // InternalSCL.g:8919:1: ruleSumExpression returns [EObject current=null] : (this_ProductExpression_0= ruleProductExpression ( ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleAddExpression ) ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleAddExpression ) ) )* ) )? ) ;
    public final EObject ruleSumExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_9=null;
        EObject this_ProductExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:8925:2: ( (this_ProductExpression_0= ruleProductExpression ( ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleAddExpression ) ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleAddExpression ) ) )* ) )? ) )
            // InternalSCL.g:8926:2: (this_ProductExpression_0= ruleProductExpression ( ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleAddExpression ) ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleAddExpression ) ) )* ) )? )
            {
            // InternalSCL.g:8926:2: (this_ProductExpression_0= ruleProductExpression ( ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleAddExpression ) ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleAddExpression ) ) )* ) )? )
            // InternalSCL.g:8927:3: this_ProductExpression_0= ruleProductExpression ( ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleAddExpression ) ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleAddExpression ) ) )* ) )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSumExpressionAccess().getProductExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_107);
            this_ProductExpression_0=ruleProductExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ProductExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCL.g:8938:3: ( ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleAddExpression ) ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleAddExpression ) ) )* ) )?
            int alt263=3;
            int LA263_0 = input.LA(1);

            if ( (LA263_0==66) ) {
                alt263=1;
            }
            else if ( (LA263_0==67) ) {
                alt263=2;
            }
            switch (alt263) {
                case 1 :
                    // InternalSCL.g:8939:4: ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* )
                    {
                    // InternalSCL.g:8939:4: ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )* )
                    // InternalSCL.g:8940:5: () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )*
                    {
                    // InternalSCL.g:8940:5: ()
                    // InternalSCL.g:8941:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndAdd(
                      							grammarAccess.getSumExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSCL.g:8950:5: ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) ) )
                    // InternalSCL.g:8951:6: ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleSubExpression ) )
                    {
                    // InternalSCL.g:8951:6: ( (lv_operator_2_0= ruleAddOperator ) )
                    // InternalSCL.g:8952:7: (lv_operator_2_0= ruleAddOperator )
                    {
                    // InternalSCL.g:8952:7: (lv_operator_2_0= ruleAddOperator )
                    // InternalSCL.g:8953:8: lv_operator_2_0= ruleAddOperator
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getSumExpressionAccess().getOperatorAddOperatorEnumRuleCall_1_0_1_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_operator_2_0=ruleAddOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getSumExpressionRule());
                      								}
                      								set(
                      									current,
                      									"operator",
                      									lv_operator_2_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.AddOperator");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSCL.g:8970:6: ( (lv_subExpressions_3_0= ruleSubExpression ) )
                    // InternalSCL.g:8971:7: (lv_subExpressions_3_0= ruleSubExpression )
                    {
                    // InternalSCL.g:8971:7: (lv_subExpressions_3_0= ruleSubExpression )
                    // InternalSCL.g:8972:8: lv_subExpressions_3_0= ruleSubExpression
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsSubExpressionParserRuleCall_1_0_1_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_108);
                    lv_subExpressions_3_0=ruleSubExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getSumExpressionRule());
                      								}
                      								add(
                      									current,
                      									"subExpressions",
                      									lv_subExpressions_3_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.SubExpression");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }

                    // InternalSCL.g:8990:5: (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) ) )*
                    loop261:
                    do {
                        int alt261=2;
                        int LA261_0 = input.LA(1);

                        if ( (LA261_0==66) ) {
                            alt261=1;
                        }


                        switch (alt261) {
                    	case 1 :
                    	    // InternalSCL.g:8991:6: otherlv_4= '+' ( (lv_subExpressions_5_0= ruleSubExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,66,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getSumExpressionAccess().getPlusSignKeyword_1_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:8995:6: ( (lv_subExpressions_5_0= ruleSubExpression ) )
                    	    // InternalSCL.g:8996:7: (lv_subExpressions_5_0= ruleSubExpression )
                    	    {
                    	    // InternalSCL.g:8996:7: (lv_subExpressions_5_0= ruleSubExpression )
                    	    // InternalSCL.g:8997:8: lv_subExpressions_5_0= ruleSubExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsSubExpressionParserRuleCall_1_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_108);
                    	    lv_subExpressions_5_0=ruleSubExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getSumExpressionRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"subExpressions",
                    	      									lv_subExpressions_5_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.SubExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop261;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:9017:4: ( () ( ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleAddExpression ) ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleAddExpression ) ) )* )
                    {
                    // InternalSCL.g:9017:4: ( () ( ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleAddExpression ) ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleAddExpression ) ) )* )
                    // InternalSCL.g:9018:5: () ( ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleAddExpression ) ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleAddExpression ) ) )*
                    {
                    // InternalSCL.g:9018:5: ()
                    // InternalSCL.g:9019:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndAdd(
                      							grammarAccess.getSumExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSCL.g:9028:5: ( ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleAddExpression ) ) )
                    // InternalSCL.g:9029:6: ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleAddExpression ) )
                    {
                    // InternalSCL.g:9029:6: ( (lv_operator_7_0= ruleSubOperator ) )
                    // InternalSCL.g:9030:7: (lv_operator_7_0= ruleSubOperator )
                    {
                    // InternalSCL.g:9030:7: (lv_operator_7_0= ruleSubOperator )
                    // InternalSCL.g:9031:8: lv_operator_7_0= ruleSubOperator
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getSumExpressionAccess().getOperatorSubOperatorEnumRuleCall_1_1_1_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_operator_7_0=ruleSubOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getSumExpressionRule());
                      								}
                      								set(
                      									current,
                      									"operator",
                      									lv_operator_7_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.SubOperator");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSCL.g:9048:6: ( (lv_subExpressions_8_0= ruleAddExpression ) )
                    // InternalSCL.g:9049:7: (lv_subExpressions_8_0= ruleAddExpression )
                    {
                    // InternalSCL.g:9049:7: (lv_subExpressions_8_0= ruleAddExpression )
                    // InternalSCL.g:9050:8: lv_subExpressions_8_0= ruleAddExpression
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsAddExpressionParserRuleCall_1_1_1_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_109);
                    lv_subExpressions_8_0=ruleAddExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getSumExpressionRule());
                      								}
                      								add(
                      									current,
                      									"subExpressions",
                      									lv_subExpressions_8_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.AddExpression");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }

                    // InternalSCL.g:9068:5: (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleAddExpression ) ) )*
                    loop262:
                    do {
                        int alt262=2;
                        int LA262_0 = input.LA(1);

                        if ( (LA262_0==67) ) {
                            alt262=1;
                        }


                        switch (alt262) {
                    	case 1 :
                    	    // InternalSCL.g:9069:6: otherlv_9= '-' ( (lv_subExpressions_10_0= ruleAddExpression ) )
                    	    {
                    	    otherlv_9=(Token)match(input,67,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_9, grammarAccess.getSumExpressionAccess().getHyphenMinusKeyword_1_1_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:9073:6: ( (lv_subExpressions_10_0= ruleAddExpression ) )
                    	    // InternalSCL.g:9074:7: (lv_subExpressions_10_0= ruleAddExpression )
                    	    {
                    	    // InternalSCL.g:9074:7: (lv_subExpressions_10_0= ruleAddExpression )
                    	    // InternalSCL.g:9075:8: lv_subExpressions_10_0= ruleAddExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsAddExpressionParserRuleCall_1_1_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_109);
                    	    lv_subExpressions_10_0=ruleAddExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getSumExpressionRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"subExpressions",
                    	      									lv_subExpressions_10_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.AddExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop262;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSumExpression"


    // $ANTLR start "entryRuleAddExpression"
    // InternalSCL.g:9099:1: entryRuleAddExpression returns [EObject current=null] : iv_ruleAddExpression= ruleAddExpression EOF ;
    public final EObject entryRuleAddExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAddExpression = null;


        try {
            // InternalSCL.g:9099:54: (iv_ruleAddExpression= ruleAddExpression EOF )
            // InternalSCL.g:9100:2: iv_ruleAddExpression= ruleAddExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAddExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAddExpression=ruleAddExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAddExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAddExpression"


    // $ANTLR start "ruleAddExpression"
    // InternalSCL.g:9106:1: ruleAddExpression returns [EObject current=null] : (this_ProductExpression_0= ruleProductExpression ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* )? ) ;
    public final EObject ruleAddExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_ProductExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:9112:2: ( (this_ProductExpression_0= ruleProductExpression ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* )? ) )
            // InternalSCL.g:9113:2: (this_ProductExpression_0= ruleProductExpression ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* )? )
            {
            // InternalSCL.g:9113:2: (this_ProductExpression_0= ruleProductExpression ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* )? )
            // InternalSCL.g:9114:3: this_ProductExpression_0= ruleProductExpression ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAddExpressionAccess().getProductExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_108);
            this_ProductExpression_0=ruleProductExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ProductExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCL.g:9125:3: ( () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* )?
            int alt265=2;
            int LA265_0 = input.LA(1);

            if ( (LA265_0==66) ) {
                alt265=1;
            }
            switch (alt265) {
                case 1 :
                    // InternalSCL.g:9126:4: () ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )*
                    {
                    // InternalSCL.g:9126:4: ()
                    // InternalSCL.g:9127:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getAddExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCL.g:9136:4: ( ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) )
                    // InternalSCL.g:9137:5: ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) )
                    {
                    // InternalSCL.g:9137:5: ( (lv_operator_2_0= ruleAddOperator ) )
                    // InternalSCL.g:9138:6: (lv_operator_2_0= ruleAddOperator )
                    {
                    // InternalSCL.g:9138:6: (lv_operator_2_0= ruleAddOperator )
                    // InternalSCL.g:9139:7: lv_operator_2_0= ruleAddOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAddExpressionAccess().getOperatorAddOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_operator_2_0=ruleAddOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAddExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.AddOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCL.g:9156:5: ( (lv_subExpressions_3_0= ruleProductExpression ) )
                    // InternalSCL.g:9157:6: (lv_subExpressions_3_0= ruleProductExpression )
                    {
                    // InternalSCL.g:9157:6: (lv_subExpressions_3_0= ruleProductExpression )
                    // InternalSCL.g:9158:7: lv_subExpressions_3_0= ruleProductExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getAddExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_108);
                    lv_subExpressions_3_0=ruleProductExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getAddExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ProductExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCL.g:9176:4: (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )*
                    loop264:
                    do {
                        int alt264=2;
                        int LA264_0 = input.LA(1);

                        if ( (LA264_0==66) ) {
                            alt264=1;
                        }


                        switch (alt264) {
                    	case 1 :
                    	    // InternalSCL.g:9177:5: otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,66,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getAddExpressionAccess().getPlusSignKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCL.g:9181:5: ( (lv_subExpressions_5_0= ruleProductExpression ) )
                    	    // InternalSCL.g:9182:6: (lv_subExpressions_5_0= ruleProductExpression )
                    	    {
                    	    // InternalSCL.g:9182:6: (lv_subExpressions_5_0= ruleProductExpression )
                    	    // InternalSCL.g:9183:7: lv_subExpressions_5_0= ruleProductExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAddExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_108);
                    	    lv_subExpressions_5_0=ruleProductExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAddExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.ProductExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop264;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddExpression"


    // $ANTLR start "entryRuleSubExpression"
    // InternalSCL.g:9206:1: entryRuleSubExpression returns [EObject current=null] : iv_ruleSubExpression= ruleSubExpression EOF ;
    public final EObject entryRuleSubExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSubExpression = null;


        try {
            // InternalSCL.g:9206:54: (iv_ruleSubExpression= ruleSubExpression EOF )
            // InternalSCL.g:9207:2: iv_ruleSubExpression= ruleSubExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSubExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSubExpression=ruleSubExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSubExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSubExpression"


    // $ANTLR start "ruleSubExpression"
    // InternalSCL.g:9213:1: ruleSubExpression returns [EObject current=null] : (this_ProductExpression_0= ruleProductExpression ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* )? ) ;
    public final EObject ruleSubExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_ProductExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:9219:2: ( (this_ProductExpression_0= ruleProductExpression ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* )? ) )
            // InternalSCL.g:9220:2: (this_ProductExpression_0= ruleProductExpression ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* )? )
            {
            // InternalSCL.g:9220:2: (this_ProductExpression_0= ruleProductExpression ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* )? )
            // InternalSCL.g:9221:3: this_ProductExpression_0= ruleProductExpression ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSubExpressionAccess().getProductExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_109);
            this_ProductExpression_0=ruleProductExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ProductExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCL.g:9232:3: ( () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* )?
            int alt267=2;
            int LA267_0 = input.LA(1);

            if ( (LA267_0==67) ) {
                alt267=1;
            }
            switch (alt267) {
                case 1 :
                    // InternalSCL.g:9233:4: () ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) ) (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )*
                    {
                    // InternalSCL.g:9233:4: ()
                    // InternalSCL.g:9234:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getSubExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCL.g:9243:4: ( ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) )
                    // InternalSCL.g:9244:5: ( (lv_operator_2_0= ruleSubOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) )
                    {
                    // InternalSCL.g:9244:5: ( (lv_operator_2_0= ruleSubOperator ) )
                    // InternalSCL.g:9245:6: (lv_operator_2_0= ruleSubOperator )
                    {
                    // InternalSCL.g:9245:6: (lv_operator_2_0= ruleSubOperator )
                    // InternalSCL.g:9246:7: lv_operator_2_0= ruleSubOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSubExpressionAccess().getOperatorSubOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_operator_2_0=ruleSubOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSubExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.SubOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCL.g:9263:5: ( (lv_subExpressions_3_0= ruleProductExpression ) )
                    // InternalSCL.g:9264:6: (lv_subExpressions_3_0= ruleProductExpression )
                    {
                    // InternalSCL.g:9264:6: (lv_subExpressions_3_0= ruleProductExpression )
                    // InternalSCL.g:9265:7: lv_subExpressions_3_0= ruleProductExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getSubExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_109);
                    lv_subExpressions_3_0=ruleProductExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getSubExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ProductExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalSCL.g:9283:4: (otherlv_4= '-' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )*
                    loop266:
                    do {
                        int alt266=2;
                        int LA266_0 = input.LA(1);

                        if ( (LA266_0==67) ) {
                            alt266=1;
                        }


                        switch (alt266) {
                    	case 1 :
                    	    // InternalSCL.g:9284:5: otherlv_4= '-' ( (lv_subExpressions_5_0= ruleProductExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,67,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getSubExpressionAccess().getHyphenMinusKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalSCL.g:9288:5: ( (lv_subExpressions_5_0= ruleProductExpression ) )
                    	    // InternalSCL.g:9289:6: (lv_subExpressions_5_0= ruleProductExpression )
                    	    {
                    	    // InternalSCL.g:9289:6: (lv_subExpressions_5_0= ruleProductExpression )
                    	    // InternalSCL.g:9290:7: lv_subExpressions_5_0= ruleProductExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getSubExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_109);
                    	    lv_subExpressions_5_0=ruleProductExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getSubExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.ProductExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop266;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubExpression"


    // $ANTLR start "entryRuleProductExpression"
    // InternalSCL.g:9313:1: entryRuleProductExpression returns [EObject current=null] : iv_ruleProductExpression= ruleProductExpression EOF ;
    public final EObject entryRuleProductExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProductExpression = null;


        try {
            // InternalSCL.g:9313:58: (iv_ruleProductExpression= ruleProductExpression EOF )
            // InternalSCL.g:9314:2: iv_ruleProductExpression= ruleProductExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProductExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleProductExpression=ruleProductExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProductExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProductExpression"


    // $ANTLR start "ruleProductExpression"
    // InternalSCL.g:9320:1: ruleProductExpression returns [EObject current=null] : (this_NegExpression_0= ruleNegExpression ( ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) ) )* ) | ( () ( ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleMultDivExpression ) ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleMultDivExpression ) ) )* ) )? ) ;
    public final EObject ruleProductExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_9=null;
        Token otherlv_14=null;
        EObject this_NegExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;

        Enumerator lv_operator_12_0 = null;

        EObject lv_subExpressions_13_0 = null;

        EObject lv_subExpressions_15_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:9326:2: ( (this_NegExpression_0= ruleNegExpression ( ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) ) )* ) | ( () ( ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleMultDivExpression ) ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleMultDivExpression ) ) )* ) )? ) )
            // InternalSCL.g:9327:2: (this_NegExpression_0= ruleNegExpression ( ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) ) )* ) | ( () ( ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleMultDivExpression ) ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleMultDivExpression ) ) )* ) )? )
            {
            // InternalSCL.g:9327:2: (this_NegExpression_0= ruleNegExpression ( ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) ) )* ) | ( () ( ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleMultDivExpression ) ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleMultDivExpression ) ) )* ) )? )
            // InternalSCL.g:9328:3: this_NegExpression_0= ruleNegExpression ( ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) ) )* ) | ( () ( ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleMultDivExpression ) ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleMultDivExpression ) ) )* ) )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getProductExpressionAccess().getNegExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_110);
            this_NegExpression_0=ruleNegExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NegExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCL.g:9339:3: ( ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) ) )* ) | ( () ( ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleMultDivExpression ) ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleMultDivExpression ) ) )* ) )?
            int alt271=4;
            switch ( input.LA(1) ) {
                case 68:
                    {
                    alt271=1;
                    }
                    break;
                case 69:
                    {
                    alt271=2;
                    }
                    break;
                case 70:
                    {
                    alt271=3;
                    }
                    break;
            }

            switch (alt271) {
                case 1 :
                    // InternalSCL.g:9340:4: ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* )
                    {
                    // InternalSCL.g:9340:4: ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* )
                    // InternalSCL.g:9341:5: () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )*
                    {
                    // InternalSCL.g:9341:5: ()
                    // InternalSCL.g:9342:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndAdd(
                      							grammarAccess.getProductExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSCL.g:9351:5: ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) )
                    // InternalSCL.g:9352:6: ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) )
                    {
                    // InternalSCL.g:9352:6: ( (lv_operator_2_0= ruleMultOperator ) )
                    // InternalSCL.g:9353:7: (lv_operator_2_0= ruleMultOperator )
                    {
                    // InternalSCL.g:9353:7: (lv_operator_2_0= ruleMultOperator )
                    // InternalSCL.g:9354:8: lv_operator_2_0= ruleMultOperator
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getProductExpressionAccess().getOperatorMultOperatorEnumRuleCall_1_0_1_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_operator_2_0=ruleMultOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getProductExpressionRule());
                      								}
                      								set(
                      									current,
                      									"operator",
                      									lv_operator_2_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.MultOperator");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSCL.g:9371:6: ( (lv_subExpressions_3_0= ruleDivModExpression ) )
                    // InternalSCL.g:9372:7: (lv_subExpressions_3_0= ruleDivModExpression )
                    {
                    // InternalSCL.g:9372:7: (lv_subExpressions_3_0= ruleDivModExpression )
                    // InternalSCL.g:9373:8: lv_subExpressions_3_0= ruleDivModExpression
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsDivModExpressionParserRuleCall_1_0_1_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_111);
                    lv_subExpressions_3_0=ruleDivModExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getProductExpressionRule());
                      								}
                      								add(
                      									current,
                      									"subExpressions",
                      									lv_subExpressions_3_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.DivModExpression");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }

                    // InternalSCL.g:9391:5: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )*
                    loop268:
                    do {
                        int alt268=2;
                        int LA268_0 = input.LA(1);

                        if ( (LA268_0==68) ) {
                            alt268=1;
                        }


                        switch (alt268) {
                    	case 1 :
                    	    // InternalSCL.g:9392:6: otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,68,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getProductExpressionAccess().getAsteriskKeyword_1_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:9396:6: ( (lv_subExpressions_5_0= ruleDivModExpression ) )
                    	    // InternalSCL.g:9397:7: (lv_subExpressions_5_0= ruleDivModExpression )
                    	    {
                    	    // InternalSCL.g:9397:7: (lv_subExpressions_5_0= ruleDivModExpression )
                    	    // InternalSCL.g:9398:8: lv_subExpressions_5_0= ruleDivModExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsDivModExpressionParserRuleCall_1_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_111);
                    	    lv_subExpressions_5_0=ruleDivModExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getProductExpressionRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"subExpressions",
                    	      									lv_subExpressions_5_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.DivModExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop268;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:9418:4: ( () ( ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) ) )* )
                    {
                    // InternalSCL.g:9418:4: ( () ( ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) ) )* )
                    // InternalSCL.g:9419:5: () ( ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) ) )*
                    {
                    // InternalSCL.g:9419:5: ()
                    // InternalSCL.g:9420:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndAdd(
                      							grammarAccess.getProductExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSCL.g:9429:5: ( ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) ) )
                    // InternalSCL.g:9430:6: ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) )
                    {
                    // InternalSCL.g:9430:6: ( (lv_operator_7_0= ruleDivOperator ) )
                    // InternalSCL.g:9431:7: (lv_operator_7_0= ruleDivOperator )
                    {
                    // InternalSCL.g:9431:7: (lv_operator_7_0= ruleDivOperator )
                    // InternalSCL.g:9432:8: lv_operator_7_0= ruleDivOperator
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getProductExpressionAccess().getOperatorDivOperatorEnumRuleCall_1_1_1_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_operator_7_0=ruleDivOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getProductExpressionRule());
                      								}
                      								set(
                      									current,
                      									"operator",
                      									lv_operator_7_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.DivOperator");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSCL.g:9449:6: ( (lv_subExpressions_8_0= ruleMultModExpression ) )
                    // InternalSCL.g:9450:7: (lv_subExpressions_8_0= ruleMultModExpression )
                    {
                    // InternalSCL.g:9450:7: (lv_subExpressions_8_0= ruleMultModExpression )
                    // InternalSCL.g:9451:8: lv_subExpressions_8_0= ruleMultModExpression
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsMultModExpressionParserRuleCall_1_1_1_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_112);
                    lv_subExpressions_8_0=ruleMultModExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getProductExpressionRule());
                      								}
                      								add(
                      									current,
                      									"subExpressions",
                      									lv_subExpressions_8_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.MultModExpression");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }

                    // InternalSCL.g:9469:5: (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) ) )*
                    loop269:
                    do {
                        int alt269=2;
                        int LA269_0 = input.LA(1);

                        if ( (LA269_0==69) ) {
                            alt269=1;
                        }


                        switch (alt269) {
                    	case 1 :
                    	    // InternalSCL.g:9470:6: otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) )
                    	    {
                    	    otherlv_9=(Token)match(input,69,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_9, grammarAccess.getProductExpressionAccess().getSolidusKeyword_1_1_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:9474:6: ( (lv_subExpressions_10_0= ruleMultModExpression ) )
                    	    // InternalSCL.g:9475:7: (lv_subExpressions_10_0= ruleMultModExpression )
                    	    {
                    	    // InternalSCL.g:9475:7: (lv_subExpressions_10_0= ruleMultModExpression )
                    	    // InternalSCL.g:9476:8: lv_subExpressions_10_0= ruleMultModExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsMultModExpressionParserRuleCall_1_1_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_112);
                    	    lv_subExpressions_10_0=ruleMultModExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getProductExpressionRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"subExpressions",
                    	      									lv_subExpressions_10_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.MultModExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop269;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 3 :
                    // InternalSCL.g:9496:4: ( () ( ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleMultDivExpression ) ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleMultDivExpression ) ) )* )
                    {
                    // InternalSCL.g:9496:4: ( () ( ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleMultDivExpression ) ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleMultDivExpression ) ) )* )
                    // InternalSCL.g:9497:5: () ( ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleMultDivExpression ) ) ) (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleMultDivExpression ) ) )*
                    {
                    // InternalSCL.g:9497:5: ()
                    // InternalSCL.g:9498:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndAdd(
                      							grammarAccess.getProductExpressionAccess().getOperatorExpressionSubExpressionsAction_1_2_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSCL.g:9507:5: ( ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleMultDivExpression ) ) )
                    // InternalSCL.g:9508:6: ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleMultDivExpression ) )
                    {
                    // InternalSCL.g:9508:6: ( (lv_operator_12_0= ruleModOperator ) )
                    // InternalSCL.g:9509:7: (lv_operator_12_0= ruleModOperator )
                    {
                    // InternalSCL.g:9509:7: (lv_operator_12_0= ruleModOperator )
                    // InternalSCL.g:9510:8: lv_operator_12_0= ruleModOperator
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getProductExpressionAccess().getOperatorModOperatorEnumRuleCall_1_2_1_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_operator_12_0=ruleModOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getProductExpressionRule());
                      								}
                      								set(
                      									current,
                      									"operator",
                      									lv_operator_12_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.ModOperator");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSCL.g:9527:6: ( (lv_subExpressions_13_0= ruleMultDivExpression ) )
                    // InternalSCL.g:9528:7: (lv_subExpressions_13_0= ruleMultDivExpression )
                    {
                    // InternalSCL.g:9528:7: (lv_subExpressions_13_0= ruleMultDivExpression )
                    // InternalSCL.g:9529:8: lv_subExpressions_13_0= ruleMultDivExpression
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsMultDivExpressionParserRuleCall_1_2_1_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_113);
                    lv_subExpressions_13_0=ruleMultDivExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getProductExpressionRule());
                      								}
                      								add(
                      									current,
                      									"subExpressions",
                      									lv_subExpressions_13_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.MultDivExpression");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }

                    // InternalSCL.g:9547:5: (otherlv_14= '%' ( (lv_subExpressions_15_0= ruleMultDivExpression ) ) )*
                    loop270:
                    do {
                        int alt270=2;
                        int LA270_0 = input.LA(1);

                        if ( (LA270_0==70) ) {
                            alt270=1;
                        }


                        switch (alt270) {
                    	case 1 :
                    	    // InternalSCL.g:9548:6: otherlv_14= '%' ( (lv_subExpressions_15_0= ruleMultDivExpression ) )
                    	    {
                    	    otherlv_14=(Token)match(input,70,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_14, grammarAccess.getProductExpressionAccess().getPercentSignKeyword_1_2_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:9552:6: ( (lv_subExpressions_15_0= ruleMultDivExpression ) )
                    	    // InternalSCL.g:9553:7: (lv_subExpressions_15_0= ruleMultDivExpression )
                    	    {
                    	    // InternalSCL.g:9553:7: (lv_subExpressions_15_0= ruleMultDivExpression )
                    	    // InternalSCL.g:9554:8: lv_subExpressions_15_0= ruleMultDivExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsMultDivExpressionParserRuleCall_1_2_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_113);
                    	    lv_subExpressions_15_0=ruleMultDivExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getProductExpressionRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"subExpressions",
                    	      									lv_subExpressions_15_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.MultDivExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop270;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProductExpression"


    // $ANTLR start "entryRuleMultDivExpression"
    // InternalSCL.g:9578:1: entryRuleMultDivExpression returns [EObject current=null] : iv_ruleMultDivExpression= ruleMultDivExpression EOF ;
    public final EObject entryRuleMultDivExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultDivExpression = null;


        try {
            // InternalSCL.g:9578:58: (iv_ruleMultDivExpression= ruleMultDivExpression EOF )
            // InternalSCL.g:9579:2: iv_ruleMultDivExpression= ruleMultDivExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultDivExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMultDivExpression=ruleMultDivExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultDivExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultDivExpression"


    // $ANTLR start "ruleMultDivExpression"
    // InternalSCL.g:9585:1: ruleMultDivExpression returns [EObject current=null] : (this_NegExpression_0= ruleNegExpression ( ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) ) )* ) )? ) ;
    public final EObject ruleMultDivExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_9=null;
        EObject this_NegExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:9591:2: ( (this_NegExpression_0= ruleNegExpression ( ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) ) )* ) )? ) )
            // InternalSCL.g:9592:2: (this_NegExpression_0= ruleNegExpression ( ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) ) )* ) )? )
            {
            // InternalSCL.g:9592:2: (this_NegExpression_0= ruleNegExpression ( ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) ) )* ) )? )
            // InternalSCL.g:9593:3: this_NegExpression_0= ruleNegExpression ( ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) ) )* ) )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultDivExpressionAccess().getNegExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_114);
            this_NegExpression_0=ruleNegExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NegExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCL.g:9604:3: ( ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) ) )* ) )?
            int alt274=3;
            alt274 = dfa274.predict(input);
            switch (alt274) {
                case 1 :
                    // InternalSCL.g:9605:4: ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* )
                    {
                    // InternalSCL.g:9605:4: ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* )
                    // InternalSCL.g:9606:5: () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )*
                    {
                    // InternalSCL.g:9606:5: ()
                    // InternalSCL.g:9607:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndAdd(
                      							grammarAccess.getMultDivExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSCL.g:9616:5: ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) )
                    // InternalSCL.g:9617:6: ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) )
                    {
                    // InternalSCL.g:9617:6: ( (lv_operator_2_0= ruleMultOperator ) )
                    // InternalSCL.g:9618:7: (lv_operator_2_0= ruleMultOperator )
                    {
                    // InternalSCL.g:9618:7: (lv_operator_2_0= ruleMultOperator )
                    // InternalSCL.g:9619:8: lv_operator_2_0= ruleMultOperator
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getMultDivExpressionAccess().getOperatorMultOperatorEnumRuleCall_1_0_1_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_operator_2_0=ruleMultOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getMultDivExpressionRule());
                      								}
                      								set(
                      									current,
                      									"operator",
                      									lv_operator_2_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.MultOperator");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSCL.g:9636:6: ( (lv_subExpressions_3_0= ruleDivModExpression ) )
                    // InternalSCL.g:9637:7: (lv_subExpressions_3_0= ruleDivModExpression )
                    {
                    // InternalSCL.g:9637:7: (lv_subExpressions_3_0= ruleDivModExpression )
                    // InternalSCL.g:9638:8: lv_subExpressions_3_0= ruleDivModExpression
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getMultDivExpressionAccess().getSubExpressionsDivModExpressionParserRuleCall_1_0_1_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_111);
                    lv_subExpressions_3_0=ruleDivModExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getMultDivExpressionRule());
                      								}
                      								add(
                      									current,
                      									"subExpressions",
                      									lv_subExpressions_3_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.DivModExpression");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }

                    // InternalSCL.g:9656:5: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )*
                    loop272:
                    do {
                        int alt272=2;
                        int LA272_0 = input.LA(1);

                        if ( (LA272_0==68) ) {
                            int LA272_2 = input.LA(2);

                            if ( (synpred306_InternalSCL()) ) {
                                alt272=1;
                            }


                        }


                        switch (alt272) {
                    	case 1 :
                    	    // InternalSCL.g:9657:6: otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,68,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getMultDivExpressionAccess().getAsteriskKeyword_1_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:9661:6: ( (lv_subExpressions_5_0= ruleDivModExpression ) )
                    	    // InternalSCL.g:9662:7: (lv_subExpressions_5_0= ruleDivModExpression )
                    	    {
                    	    // InternalSCL.g:9662:7: (lv_subExpressions_5_0= ruleDivModExpression )
                    	    // InternalSCL.g:9663:8: lv_subExpressions_5_0= ruleDivModExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getMultDivExpressionAccess().getSubExpressionsDivModExpressionParserRuleCall_1_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_111);
                    	    lv_subExpressions_5_0=ruleDivModExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getMultDivExpressionRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"subExpressions",
                    	      									lv_subExpressions_5_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.DivModExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop272;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:9683:4: ( () ( ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) ) )* )
                    {
                    // InternalSCL.g:9683:4: ( () ( ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) ) )* )
                    // InternalSCL.g:9684:5: () ( ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) ) )*
                    {
                    // InternalSCL.g:9684:5: ()
                    // InternalSCL.g:9685:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndAdd(
                      							grammarAccess.getMultDivExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSCL.g:9694:5: ( ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) ) )
                    // InternalSCL.g:9695:6: ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) )
                    {
                    // InternalSCL.g:9695:6: ( (lv_operator_7_0= ruleDivOperator ) )
                    // InternalSCL.g:9696:7: (lv_operator_7_0= ruleDivOperator )
                    {
                    // InternalSCL.g:9696:7: (lv_operator_7_0= ruleDivOperator )
                    // InternalSCL.g:9697:8: lv_operator_7_0= ruleDivOperator
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getMultDivExpressionAccess().getOperatorDivOperatorEnumRuleCall_1_1_1_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_operator_7_0=ruleDivOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getMultDivExpressionRule());
                      								}
                      								set(
                      									current,
                      									"operator",
                      									lv_operator_7_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.DivOperator");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSCL.g:9714:6: ( (lv_subExpressions_8_0= ruleMultModExpression ) )
                    // InternalSCL.g:9715:7: (lv_subExpressions_8_0= ruleMultModExpression )
                    {
                    // InternalSCL.g:9715:7: (lv_subExpressions_8_0= ruleMultModExpression )
                    // InternalSCL.g:9716:8: lv_subExpressions_8_0= ruleMultModExpression
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getMultDivExpressionAccess().getSubExpressionsMultModExpressionParserRuleCall_1_1_1_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_112);
                    lv_subExpressions_8_0=ruleMultModExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getMultDivExpressionRule());
                      								}
                      								add(
                      									current,
                      									"subExpressions",
                      									lv_subExpressions_8_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.MultModExpression");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }

                    // InternalSCL.g:9734:5: (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) ) )*
                    loop273:
                    do {
                        int alt273=2;
                        int LA273_0 = input.LA(1);

                        if ( (LA273_0==69) ) {
                            int LA273_2 = input.LA(2);

                            if ( (synpred308_InternalSCL()) ) {
                                alt273=1;
                            }


                        }


                        switch (alt273) {
                    	case 1 :
                    	    // InternalSCL.g:9735:6: otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) )
                    	    {
                    	    otherlv_9=(Token)match(input,69,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_9, grammarAccess.getMultDivExpressionAccess().getSolidusKeyword_1_1_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:9739:6: ( (lv_subExpressions_10_0= ruleMultModExpression ) )
                    	    // InternalSCL.g:9740:7: (lv_subExpressions_10_0= ruleMultModExpression )
                    	    {
                    	    // InternalSCL.g:9740:7: (lv_subExpressions_10_0= ruleMultModExpression )
                    	    // InternalSCL.g:9741:8: lv_subExpressions_10_0= ruleMultModExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getMultDivExpressionAccess().getSubExpressionsMultModExpressionParserRuleCall_1_1_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_112);
                    	    lv_subExpressions_10_0=ruleMultModExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getMultDivExpressionRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"subExpressions",
                    	      									lv_subExpressions_10_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.MultModExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop273;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultDivExpression"


    // $ANTLR start "entryRuleMultModExpression"
    // InternalSCL.g:9765:1: entryRuleMultModExpression returns [EObject current=null] : iv_ruleMultModExpression= ruleMultModExpression EOF ;
    public final EObject entryRuleMultModExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultModExpression = null;


        try {
            // InternalSCL.g:9765:58: (iv_ruleMultModExpression= ruleMultModExpression EOF )
            // InternalSCL.g:9766:2: iv_ruleMultModExpression= ruleMultModExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultModExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMultModExpression=ruleMultModExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultModExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultModExpression"


    // $ANTLR start "ruleMultModExpression"
    // InternalSCL.g:9772:1: ruleMultModExpression returns [EObject current=null] : (this_NegExpression_0= ruleNegExpression ( ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )* ) )? ) ;
    public final EObject ruleMultModExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_9=null;
        EObject this_NegExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:9778:2: ( (this_NegExpression_0= ruleNegExpression ( ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )* ) )? ) )
            // InternalSCL.g:9779:2: (this_NegExpression_0= ruleNegExpression ( ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )* ) )? )
            {
            // InternalSCL.g:9779:2: (this_NegExpression_0= ruleNegExpression ( ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )* ) )? )
            // InternalSCL.g:9780:3: this_NegExpression_0= ruleNegExpression ( ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )* ) )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultModExpressionAccess().getNegExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_115);
            this_NegExpression_0=ruleNegExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NegExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCL.g:9791:3: ( ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )* ) )?
            int alt277=3;
            alt277 = dfa277.predict(input);
            switch (alt277) {
                case 1 :
                    // InternalSCL.g:9792:4: ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* )
                    {
                    // InternalSCL.g:9792:4: ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* )
                    // InternalSCL.g:9793:5: () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )*
                    {
                    // InternalSCL.g:9793:5: ()
                    // InternalSCL.g:9794:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndAdd(
                      							grammarAccess.getMultModExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSCL.g:9803:5: ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) )
                    // InternalSCL.g:9804:6: ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) )
                    {
                    // InternalSCL.g:9804:6: ( (lv_operator_2_0= ruleMultOperator ) )
                    // InternalSCL.g:9805:7: (lv_operator_2_0= ruleMultOperator )
                    {
                    // InternalSCL.g:9805:7: (lv_operator_2_0= ruleMultOperator )
                    // InternalSCL.g:9806:8: lv_operator_2_0= ruleMultOperator
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getMultModExpressionAccess().getOperatorMultOperatorEnumRuleCall_1_0_1_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_operator_2_0=ruleMultOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getMultModExpressionRule());
                      								}
                      								set(
                      									current,
                      									"operator",
                      									lv_operator_2_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.MultOperator");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSCL.g:9823:6: ( (lv_subExpressions_3_0= ruleDivModExpression ) )
                    // InternalSCL.g:9824:7: (lv_subExpressions_3_0= ruleDivModExpression )
                    {
                    // InternalSCL.g:9824:7: (lv_subExpressions_3_0= ruleDivModExpression )
                    // InternalSCL.g:9825:8: lv_subExpressions_3_0= ruleDivModExpression
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getMultModExpressionAccess().getSubExpressionsDivModExpressionParserRuleCall_1_0_1_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_111);
                    lv_subExpressions_3_0=ruleDivModExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getMultModExpressionRule());
                      								}
                      								add(
                      									current,
                      									"subExpressions",
                      									lv_subExpressions_3_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.DivModExpression");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }

                    // InternalSCL.g:9843:5: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )*
                    loop275:
                    do {
                        int alt275=2;
                        int LA275_0 = input.LA(1);

                        if ( (LA275_0==68) ) {
                            int LA275_2 = input.LA(2);

                            if ( (synpred310_InternalSCL()) ) {
                                alt275=1;
                            }


                        }


                        switch (alt275) {
                    	case 1 :
                    	    // InternalSCL.g:9844:6: otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,68,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getMultModExpressionAccess().getAsteriskKeyword_1_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:9848:6: ( (lv_subExpressions_5_0= ruleDivModExpression ) )
                    	    // InternalSCL.g:9849:7: (lv_subExpressions_5_0= ruleDivModExpression )
                    	    {
                    	    // InternalSCL.g:9849:7: (lv_subExpressions_5_0= ruleDivModExpression )
                    	    // InternalSCL.g:9850:8: lv_subExpressions_5_0= ruleDivModExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getMultModExpressionAccess().getSubExpressionsDivModExpressionParserRuleCall_1_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_111);
                    	    lv_subExpressions_5_0=ruleDivModExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getMultModExpressionRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"subExpressions",
                    	      									lv_subExpressions_5_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.DivModExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop275;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:9870:4: ( () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )* )
                    {
                    // InternalSCL.g:9870:4: ( () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )* )
                    // InternalSCL.g:9871:5: () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )*
                    {
                    // InternalSCL.g:9871:5: ()
                    // InternalSCL.g:9872:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndAdd(
                      							grammarAccess.getMultModExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSCL.g:9881:5: ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) )
                    // InternalSCL.g:9882:6: ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) )
                    {
                    // InternalSCL.g:9882:6: ( (lv_operator_7_0= ruleModOperator ) )
                    // InternalSCL.g:9883:7: (lv_operator_7_0= ruleModOperator )
                    {
                    // InternalSCL.g:9883:7: (lv_operator_7_0= ruleModOperator )
                    // InternalSCL.g:9884:8: lv_operator_7_0= ruleModOperator
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getMultModExpressionAccess().getOperatorModOperatorEnumRuleCall_1_1_1_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_operator_7_0=ruleModOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getMultModExpressionRule());
                      								}
                      								set(
                      									current,
                      									"operator",
                      									lv_operator_7_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.ModOperator");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSCL.g:9901:6: ( (lv_subExpressions_8_0= ruleMultDivExpression ) )
                    // InternalSCL.g:9902:7: (lv_subExpressions_8_0= ruleMultDivExpression )
                    {
                    // InternalSCL.g:9902:7: (lv_subExpressions_8_0= ruleMultDivExpression )
                    // InternalSCL.g:9903:8: lv_subExpressions_8_0= ruleMultDivExpression
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getMultModExpressionAccess().getSubExpressionsMultDivExpressionParserRuleCall_1_1_1_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_113);
                    lv_subExpressions_8_0=ruleMultDivExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getMultModExpressionRule());
                      								}
                      								add(
                      									current,
                      									"subExpressions",
                      									lv_subExpressions_8_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.MultDivExpression");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }

                    // InternalSCL.g:9921:5: (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )*
                    loop276:
                    do {
                        int alt276=2;
                        int LA276_0 = input.LA(1);

                        if ( (LA276_0==70) ) {
                            int LA276_2 = input.LA(2);

                            if ( (synpred312_InternalSCL()) ) {
                                alt276=1;
                            }


                        }


                        switch (alt276) {
                    	case 1 :
                    	    // InternalSCL.g:9922:6: otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) )
                    	    {
                    	    otherlv_9=(Token)match(input,70,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_9, grammarAccess.getMultModExpressionAccess().getPercentSignKeyword_1_1_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:9926:6: ( (lv_subExpressions_10_0= ruleMultDivExpression ) )
                    	    // InternalSCL.g:9927:7: (lv_subExpressions_10_0= ruleMultDivExpression )
                    	    {
                    	    // InternalSCL.g:9927:7: (lv_subExpressions_10_0= ruleMultDivExpression )
                    	    // InternalSCL.g:9928:8: lv_subExpressions_10_0= ruleMultDivExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getMultModExpressionAccess().getSubExpressionsMultDivExpressionParserRuleCall_1_1_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_113);
                    	    lv_subExpressions_10_0=ruleMultDivExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getMultModExpressionRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"subExpressions",
                    	      									lv_subExpressions_10_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.MultDivExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop276;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultModExpression"


    // $ANTLR start "entryRuleDivModExpression"
    // InternalSCL.g:9952:1: entryRuleDivModExpression returns [EObject current=null] : iv_ruleDivModExpression= ruleDivModExpression EOF ;
    public final EObject entryRuleDivModExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDivModExpression = null;


        try {
            // InternalSCL.g:9952:57: (iv_ruleDivModExpression= ruleDivModExpression EOF )
            // InternalSCL.g:9953:2: iv_ruleDivModExpression= ruleDivModExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDivModExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDivModExpression=ruleDivModExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDivModExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDivModExpression"


    // $ANTLR start "ruleDivModExpression"
    // InternalSCL.g:9959:1: ruleDivModExpression returns [EObject current=null] : (this_NegExpression_0= ruleNegExpression ( ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleMultModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleMultModExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )* ) )? ) ;
    public final EObject ruleDivModExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_9=null;
        EObject this_NegExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:9965:2: ( (this_NegExpression_0= ruleNegExpression ( ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleMultModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleMultModExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )* ) )? ) )
            // InternalSCL.g:9966:2: (this_NegExpression_0= ruleNegExpression ( ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleMultModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleMultModExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )* ) )? )
            {
            // InternalSCL.g:9966:2: (this_NegExpression_0= ruleNegExpression ( ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleMultModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleMultModExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )* ) )? )
            // InternalSCL.g:9967:3: this_NegExpression_0= ruleNegExpression ( ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleMultModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleMultModExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )* ) )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getDivModExpressionAccess().getNegExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_116);
            this_NegExpression_0=ruleNegExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NegExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalSCL.g:9978:3: ( ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleMultModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleMultModExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )* ) )?
            int alt280=3;
            alt280 = dfa280.predict(input);
            switch (alt280) {
                case 1 :
                    // InternalSCL.g:9979:4: ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleMultModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleMultModExpression ) ) )* )
                    {
                    // InternalSCL.g:9979:4: ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleMultModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleMultModExpression ) ) )* )
                    // InternalSCL.g:9980:5: () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleMultModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleMultModExpression ) ) )*
                    {
                    // InternalSCL.g:9980:5: ()
                    // InternalSCL.g:9981:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndAdd(
                      							grammarAccess.getDivModExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSCL.g:9990:5: ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleMultModExpression ) ) )
                    // InternalSCL.g:9991:6: ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleMultModExpression ) )
                    {
                    // InternalSCL.g:9991:6: ( (lv_operator_2_0= ruleDivOperator ) )
                    // InternalSCL.g:9992:7: (lv_operator_2_0= ruleDivOperator )
                    {
                    // InternalSCL.g:9992:7: (lv_operator_2_0= ruleDivOperator )
                    // InternalSCL.g:9993:8: lv_operator_2_0= ruleDivOperator
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getDivModExpressionAccess().getOperatorDivOperatorEnumRuleCall_1_0_1_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_operator_2_0=ruleDivOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getDivModExpressionRule());
                      								}
                      								set(
                      									current,
                      									"operator",
                      									lv_operator_2_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.DivOperator");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSCL.g:10010:6: ( (lv_subExpressions_3_0= ruleMultModExpression ) )
                    // InternalSCL.g:10011:7: (lv_subExpressions_3_0= ruleMultModExpression )
                    {
                    // InternalSCL.g:10011:7: (lv_subExpressions_3_0= ruleMultModExpression )
                    // InternalSCL.g:10012:8: lv_subExpressions_3_0= ruleMultModExpression
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getDivModExpressionAccess().getSubExpressionsMultModExpressionParserRuleCall_1_0_1_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_112);
                    lv_subExpressions_3_0=ruleMultModExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getDivModExpressionRule());
                      								}
                      								add(
                      									current,
                      									"subExpressions",
                      									lv_subExpressions_3_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.MultModExpression");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }

                    // InternalSCL.g:10030:5: (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleMultModExpression ) ) )*
                    loop278:
                    do {
                        int alt278=2;
                        int LA278_0 = input.LA(1);

                        if ( (LA278_0==69) ) {
                            int LA278_2 = input.LA(2);

                            if ( (synpred314_InternalSCL()) ) {
                                alt278=1;
                            }


                        }


                        switch (alt278) {
                    	case 1 :
                    	    // InternalSCL.g:10031:6: otherlv_4= '/' ( (lv_subExpressions_5_0= ruleMultModExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,69,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getDivModExpressionAccess().getSolidusKeyword_1_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:10035:6: ( (lv_subExpressions_5_0= ruleMultModExpression ) )
                    	    // InternalSCL.g:10036:7: (lv_subExpressions_5_0= ruleMultModExpression )
                    	    {
                    	    // InternalSCL.g:10036:7: (lv_subExpressions_5_0= ruleMultModExpression )
                    	    // InternalSCL.g:10037:8: lv_subExpressions_5_0= ruleMultModExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getDivModExpressionAccess().getSubExpressionsMultModExpressionParserRuleCall_1_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_112);
                    	    lv_subExpressions_5_0=ruleMultModExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getDivModExpressionRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"subExpressions",
                    	      									lv_subExpressions_5_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.MultModExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop278;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:10057:4: ( () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )* )
                    {
                    // InternalSCL.g:10057:4: ( () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )* )
                    // InternalSCL.g:10058:5: () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )*
                    {
                    // InternalSCL.g:10058:5: ()
                    // InternalSCL.g:10059:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						/* */
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndAdd(
                      							grammarAccess.getDivModExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0(),
                      							current);
                      					
                    }

                    }

                    // InternalSCL.g:10068:5: ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) )
                    // InternalSCL.g:10069:6: ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) )
                    {
                    // InternalSCL.g:10069:6: ( (lv_operator_7_0= ruleModOperator ) )
                    // InternalSCL.g:10070:7: (lv_operator_7_0= ruleModOperator )
                    {
                    // InternalSCL.g:10070:7: (lv_operator_7_0= ruleModOperator )
                    // InternalSCL.g:10071:8: lv_operator_7_0= ruleModOperator
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getDivModExpressionAccess().getOperatorModOperatorEnumRuleCall_1_1_1_0_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_operator_7_0=ruleModOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getDivModExpressionRule());
                      								}
                      								set(
                      									current,
                      									"operator",
                      									lv_operator_7_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.ModOperator");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalSCL.g:10088:6: ( (lv_subExpressions_8_0= ruleMultDivExpression ) )
                    // InternalSCL.g:10089:7: (lv_subExpressions_8_0= ruleMultDivExpression )
                    {
                    // InternalSCL.g:10089:7: (lv_subExpressions_8_0= ruleMultDivExpression )
                    // InternalSCL.g:10090:8: lv_subExpressions_8_0= ruleMultDivExpression
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getDivModExpressionAccess().getSubExpressionsMultDivExpressionParserRuleCall_1_1_1_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_113);
                    lv_subExpressions_8_0=ruleMultDivExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getDivModExpressionRule());
                      								}
                      								add(
                      									current,
                      									"subExpressions",
                      									lv_subExpressions_8_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.MultDivExpression");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }


                    }

                    // InternalSCL.g:10108:5: (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )*
                    loop279:
                    do {
                        int alt279=2;
                        int LA279_0 = input.LA(1);

                        if ( (LA279_0==70) ) {
                            int LA279_2 = input.LA(2);

                            if ( (synpred316_InternalSCL()) ) {
                                alt279=1;
                            }


                        }


                        switch (alt279) {
                    	case 1 :
                    	    // InternalSCL.g:10109:6: otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) )
                    	    {
                    	    otherlv_9=(Token)match(input,70,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_9, grammarAccess.getDivModExpressionAccess().getPercentSignKeyword_1_1_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:10113:6: ( (lv_subExpressions_10_0= ruleMultDivExpression ) )
                    	    // InternalSCL.g:10114:7: (lv_subExpressions_10_0= ruleMultDivExpression )
                    	    {
                    	    // InternalSCL.g:10114:7: (lv_subExpressions_10_0= ruleMultDivExpression )
                    	    // InternalSCL.g:10115:8: lv_subExpressions_10_0= ruleMultDivExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getDivModExpressionAccess().getSubExpressionsMultDivExpressionParserRuleCall_1_1_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_113);
                    	    lv_subExpressions_10_0=ruleMultDivExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getDivModExpressionRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"subExpressions",
                    	      									lv_subExpressions_10_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.MultDivExpression");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop279;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDivModExpression"


    // $ANTLR start "entryRuleNegExpression"
    // InternalSCL.g:10139:1: entryRuleNegExpression returns [EObject current=null] : iv_ruleNegExpression= ruleNegExpression EOF ;
    public final EObject entryRuleNegExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNegExpression = null;


        try {
            // InternalSCL.g:10139:54: (iv_ruleNegExpression= ruleNegExpression EOF )
            // InternalSCL.g:10140:2: iv_ruleNegExpression= ruleNegExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNegExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNegExpression=ruleNegExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNegExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNegExpression"


    // $ANTLR start "ruleNegExpression"
    // InternalSCL.g:10146:1: ruleNegExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_TernaryOperation_3= ruleTernaryOperation ) ;
    public final EObject ruleNegExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_TernaryOperation_3 = null;



        	enterRule();

        try {
            // InternalSCL.g:10152:2: ( ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_TernaryOperation_3= ruleTernaryOperation ) )
            // InternalSCL.g:10153:2: ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_TernaryOperation_3= ruleTernaryOperation )
            {
            // InternalSCL.g:10153:2: ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_TernaryOperation_3= ruleTernaryOperation )
            int alt281=2;
            int LA281_0 = input.LA(1);

            if ( (LA281_0==67) ) {
                alt281=1;
            }
            else if ( ((LA281_0>=RULE_ID && LA281_0<=RULE_COMMENT_ANNOTATION)||LA281_0==25||LA281_0==34||LA281_0==53||LA281_0==58||LA281_0==72||LA281_0==76||LA281_0==100||LA281_0==102) ) {
                alt281=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 281, 0, input);

                throw nvae;
            }
            switch (alt281) {
                case 1 :
                    // InternalSCL.g:10154:3: ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) )
                    {
                    // InternalSCL.g:10154:3: ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) )
                    // InternalSCL.g:10155:4: () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) )
                    {
                    // InternalSCL.g:10155:4: ()
                    // InternalSCL.g:10156:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getNegExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCL.g:10165:4: ( (lv_operator_1_0= ruleSubOperator ) )
                    // InternalSCL.g:10166:5: (lv_operator_1_0= ruleSubOperator )
                    {
                    // InternalSCL.g:10166:5: (lv_operator_1_0= ruleSubOperator )
                    // InternalSCL.g:10167:6: lv_operator_1_0= ruleSubOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNegExpressionAccess().getOperatorSubOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_operator_1_0=ruleSubOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNegExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.SubOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCL.g:10184:4: ( (lv_subExpressions_2_0= ruleNegExpression ) )
                    // InternalSCL.g:10185:5: (lv_subExpressions_2_0= ruleNegExpression )
                    {
                    // InternalSCL.g:10185:5: (lv_subExpressions_2_0= ruleNegExpression )
                    // InternalSCL.g:10186:6: lv_subExpressions_2_0= ruleNegExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNegExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleNegExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNegExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.NegExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:10205:3: this_TernaryOperation_3= ruleTernaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNegExpressionAccess().getTernaryOperationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TernaryOperation_3=ruleTernaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TernaryOperation_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNegExpression"


    // $ANTLR start "entryRuleTernaryOperation"
    // InternalSCL.g:10220:1: entryRuleTernaryOperation returns [EObject current=null] : iv_ruleTernaryOperation= ruleTernaryOperation EOF ;
    public final EObject entryRuleTernaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTernaryOperation = null;


        try {
            // InternalSCL.g:10220:57: (iv_ruleTernaryOperation= ruleTernaryOperation EOF )
            // InternalSCL.g:10221:2: iv_ruleTernaryOperation= ruleTernaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTernaryOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTernaryOperation=ruleTernaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTernaryOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTernaryOperation"


    // $ANTLR start "ruleTernaryOperation"
    // InternalSCL.g:10227:1: ruleTernaryOperation returns [EObject current=null] : ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) ) | this_FBYExpression_6= ruleFBYExpression ) ;
    public final EObject ruleTernaryOperation() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject lv_subExpressions_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        EObject this_FBYExpression_6 = null;



        	enterRule();

        try {
            // InternalSCL.g:10233:2: ( ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) ) | this_FBYExpression_6= ruleFBYExpression ) )
            // InternalSCL.g:10234:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) ) | this_FBYExpression_6= ruleFBYExpression )
            {
            // InternalSCL.g:10234:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) ) | this_FBYExpression_6= ruleFBYExpression )
            int alt282=2;
            alt282 = dfa282.predict(input);
            switch (alt282) {
                case 1 :
                    // InternalSCL.g:10235:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )
                    {
                    // InternalSCL.g:10235:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )
                    // InternalSCL.g:10236:4: () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                    {
                    // InternalSCL.g:10236:4: ()
                    // InternalSCL.g:10237:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTernaryOperationAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCL.g:10246:4: ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) )
                    // InternalSCL.g:10247:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
                    {
                    // InternalSCL.g:10247:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
                    // InternalSCL.g:10248:6: lv_subExpressions_1_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_117);
                    lv_subExpressions_1_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCL.g:10265:4: ( (lv_operator_2_0= ruleConditionalOperator ) )
                    // InternalSCL.g:10266:5: (lv_operator_2_0= ruleConditionalOperator )
                    {
                    // InternalSCL.g:10266:5: (lv_operator_2_0= ruleConditionalOperator )
                    // InternalSCL.g:10267:6: lv_operator_2_0= ruleConditionalOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTernaryOperationAccess().getOperatorConditionalOperatorEnumRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_22);
                    lv_operator_2_0=ruleConditionalOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ConditionalOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCL.g:10284:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    // InternalSCL.g:10285:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    {
                    // InternalSCL.g:10285:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    // InternalSCL.g:10286:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_13);
                    lv_subExpressions_3_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,18,FollowSets000.FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getTernaryOperationAccess().getColonKeyword_0_4());
                      			
                    }
                    // InternalSCL.g:10307:4: ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                    // InternalSCL.g:10308:5: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                    {
                    // InternalSCL.g:10308:5: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                    // InternalSCL.g:10309:6: lv_subExpressions_5_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_5_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_5_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_5_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:10328:3: this_FBYExpression_6= ruleFBYExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTernaryOperationAccess().getFBYExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FBYExpression_6=ruleFBYExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FBYExpression_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTernaryOperation"


    // $ANTLR start "entryRuleFBYExpression"
    // InternalSCL.g:10343:1: entryRuleFBYExpression returns [EObject current=null] : iv_ruleFBYExpression= ruleFBYExpression EOF ;
    public final EObject entryRuleFBYExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFBYExpression = null;


        try {
            // InternalSCL.g:10343:54: (iv_ruleFBYExpression= ruleFBYExpression EOF )
            // InternalSCL.g:10344:2: iv_ruleFBYExpression= ruleFBYExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFBYExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFBYExpression=ruleFBYExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFBYExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFBYExpression"


    // $ANTLR start "ruleFBYExpression"
    // InternalSCL.g:10350:1: ruleFBYExpression returns [EObject current=null] : ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_4= ruleAtomicValuedExpression ) ;
    public final EObject ruleFBYExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_subExpressions_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject this_AtomicValuedExpression_4 = null;



        	enterRule();

        try {
            // InternalSCL.g:10356:2: ( ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_4= ruleAtomicValuedExpression ) )
            // InternalSCL.g:10357:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_4= ruleAtomicValuedExpression )
            {
            // InternalSCL.g:10357:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_4= ruleAtomicValuedExpression )
            int alt283=2;
            alt283 = dfa283.predict(input);
            switch (alt283) {
                case 1 :
                    // InternalSCL.g:10358:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
                    {
                    // InternalSCL.g:10358:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
                    // InternalSCL.g:10359:4: () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    {
                    // InternalSCL.g:10359:4: ()
                    // InternalSCL.g:10360:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getFBYExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCL.g:10369:4: ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) )
                    // InternalSCL.g:10370:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
                    {
                    // InternalSCL.g:10370:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
                    // InternalSCL.g:10371:6: lv_subExpressions_1_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFBYExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_118);
                    lv_subExpressions_1_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFBYExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCL.g:10388:4: ( (lv_operator_2_0= ruleFBYOperator ) )
                    // InternalSCL.g:10389:5: (lv_operator_2_0= ruleFBYOperator )
                    {
                    // InternalSCL.g:10389:5: (lv_operator_2_0= ruleFBYOperator )
                    // InternalSCL.g:10390:6: lv_operator_2_0= ruleFBYOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFBYExpressionAccess().getOperatorFBYOperatorEnumRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_22);
                    lv_operator_2_0=ruleFBYOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFBYExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.FBYOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCL.g:10407:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    // InternalSCL.g:10408:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    {
                    // InternalSCL.g:10408:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    // InternalSCL.g:10409:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getFBYExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_3_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getFBYExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:10428:3: this_AtomicValuedExpression_4= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFBYExpressionAccess().getAtomicValuedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicValuedExpression_4=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicValuedExpression_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFBYExpression"


    // $ANTLR start "entryRuleAtomicExpression"
    // InternalSCL.g:10443:1: entryRuleAtomicExpression returns [EObject current=null] : iv_ruleAtomicExpression= ruleAtomicExpression EOF ;
    public final EObject entryRuleAtomicExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtomicExpression = null;


        try {
            // InternalSCL.g:10443:57: (iv_ruleAtomicExpression= ruleAtomicExpression EOF )
            // InternalSCL.g:10444:2: iv_ruleAtomicExpression= ruleAtomicExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomicExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAtomicExpression=ruleAtomicExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtomicExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtomicExpression"


    // $ANTLR start "ruleAtomicExpression"
    // InternalSCL.g:10450:1: ruleAtomicExpression returns [EObject current=null] : (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_FunctionCall_5= ruleFunctionCall | this_RandomCall_6= ruleRandomCall | this_RandomizeCall_7= ruleRandomizeCall | this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression | this_TextExpression_9= ruleTextExpression ) ;
    public final EObject ruleAtomicExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_BoolValue_0 = null;

        EObject this_BoolExpression_2 = null;

        EObject this_ReferenceCall_4 = null;

        EObject this_FunctionCall_5 = null;

        EObject this_RandomCall_6 = null;

        EObject this_RandomizeCall_7 = null;

        EObject this_ValuedObjectTestExpression_8 = null;

        EObject this_TextExpression_9 = null;



        	enterRule();

        try {
            // InternalSCL.g:10456:2: ( (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_FunctionCall_5= ruleFunctionCall | this_RandomCall_6= ruleRandomCall | this_RandomizeCall_7= ruleRandomizeCall | this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression | this_TextExpression_9= ruleTextExpression ) )
            // InternalSCL.g:10457:2: (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_FunctionCall_5= ruleFunctionCall | this_RandomCall_6= ruleRandomCall | this_RandomizeCall_7= ruleRandomizeCall | this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression | this_TextExpression_9= ruleTextExpression )
            {
            // InternalSCL.g:10457:2: (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_FunctionCall_5= ruleFunctionCall | this_RandomCall_6= ruleRandomCall | this_RandomizeCall_7= ruleRandomizeCall | this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression | this_TextExpression_9= ruleTextExpression )
            int alt284=8;
            alt284 = dfa284.predict(input);
            switch (alt284) {
                case 1 :
                    // InternalSCL.g:10458:3: this_BoolValue_0= ruleBoolValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getBoolValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolValue_0=ruleBoolValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCL.g:10470:3: (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' )
                    {
                    // InternalSCL.g:10470:3: (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' )
                    // InternalSCL.g:10471:4: otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,34,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAtomicExpressionAccess().getBoolExpressionParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_87);
                    this_BoolExpression_2=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_BoolExpression_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_3=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCL.g:10492:3: this_ReferenceCall_4= ruleReferenceCall
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getReferenceCallParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceCall_4=ruleReferenceCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceCall_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCL.g:10504:3: this_FunctionCall_5= ruleFunctionCall
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getFunctionCallParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FunctionCall_5=ruleFunctionCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionCall_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCL.g:10516:3: this_RandomCall_6= ruleRandomCall
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getRandomCallParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RandomCall_6=ruleRandomCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RandomCall_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalSCL.g:10528:3: this_RandomizeCall_7= ruleRandomizeCall
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getRandomizeCallParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RandomizeCall_7=ruleRandomizeCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RandomizeCall_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalSCL.g:10540:3: this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getValuedObjectTestExpressionParserRuleCall_6());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedObjectTestExpression_8=ruleValuedObjectTestExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedObjectTestExpression_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalSCL.g:10552:3: this_TextExpression_9= ruleTextExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getTextExpressionParserRuleCall_7());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TextExpression_9=ruleTextExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TextExpression_9;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtomicExpression"


    // $ANTLR start "entryRuleAtomicValuedExpression"
    // InternalSCL.g:10567:1: entryRuleAtomicValuedExpression returns [EObject current=null] : iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF ;
    public final EObject entryRuleAtomicValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtomicValuedExpression = null;


        try {
            // InternalSCL.g:10567:63: (iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF )
            // InternalSCL.g:10568:2: iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomicValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAtomicValuedExpression=ruleAtomicValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtomicValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtomicValuedExpression"


    // $ANTLR start "ruleAtomicValuedExpression"
    // InternalSCL.g:10574:1: ruleAtomicValuedExpression returns [EObject current=null] : (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression ) ;
    public final EObject ruleAtomicValuedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject this_IntValue_0 = null;

        EObject this_FloatValue_1 = null;

        EObject this_StringValue_2 = null;

        EObject this_VectorValue_3 = null;

        EObject this_ValuedExpression_5 = null;

        EObject this_AtomicExpression_7 = null;



        	enterRule();

        try {
            // InternalSCL.g:10580:2: ( (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression ) )
            // InternalSCL.g:10581:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression )
            {
            // InternalSCL.g:10581:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression )
            int alt285=6;
            alt285 = dfa285.predict(input);
            switch (alt285) {
                case 1 :
                    // InternalSCL.g:10582:3: this_IntValue_0= ruleIntValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getIntValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IntValue_0=ruleIntValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IntValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCL.g:10594:3: this_FloatValue_1= ruleFloatValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getFloatValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FloatValue_1=ruleFloatValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FloatValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCL.g:10606:3: this_StringValue_2= ruleStringValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getStringValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringValue_2=ruleStringValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCL.g:10618:3: this_VectorValue_3= ruleVectorValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getVectorValueParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VectorValue_3=ruleVectorValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VectorValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCL.g:10630:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
                    {
                    // InternalSCL.g:10630:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
                    // InternalSCL.g:10631:4: otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')'
                    {
                    otherlv_4=(Token)match(input,34,FollowSets000.FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_4_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getValuedExpressionParserRuleCall_4_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_87);
                    this_ValuedExpression_5=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ValuedExpression_5;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_6=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getAtomicValuedExpressionAccess().getRightParenthesisKeyword_4_2());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCL.g:10652:3: this_AtomicExpression_7= ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getAtomicExpressionParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicExpression_7=ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtomicValuedExpression"


    // $ANTLR start "entryRuleValuedObjectTestExpression"
    // InternalSCL.g:10667:1: entryRuleValuedObjectTestExpression returns [EObject current=null] : iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF ;
    public final EObject entryRuleValuedObjectTestExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectTestExpression = null;


        try {
            // InternalSCL.g:10667:67: (iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF )
            // InternalSCL.g:10668:2: iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectTestExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectTestExpression=ruleValuedObjectTestExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectTestExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectTestExpression"


    // $ANTLR start "ruleValuedObjectTestExpression"
    // InternalSCL.g:10674:1: ruleValuedObjectTestExpression returns [EObject current=null] : ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' ) | this_ValuedObjectReference_5= ruleValuedObjectReference ) ;
    public final EObject ruleValuedObjectTestExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Enumerator lv_operator_1_1 = null;

        Enumerator lv_operator_1_2 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject this_ValuedObjectReference_5 = null;



        	enterRule();

        try {
            // InternalSCL.g:10680:2: ( ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' ) | this_ValuedObjectReference_5= ruleValuedObjectReference ) )
            // InternalSCL.g:10681:2: ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' ) | this_ValuedObjectReference_5= ruleValuedObjectReference )
            {
            // InternalSCL.g:10681:2: ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' ) | this_ValuedObjectReference_5= ruleValuedObjectReference )
            int alt287=2;
            int LA287_0 = input.LA(1);

            if ( (LA287_0==100||LA287_0==102) ) {
                alt287=1;
            }
            else if ( (LA287_0==RULE_ID) ) {
                alt287=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 287, 0, input);

                throw nvae;
            }
            switch (alt287) {
                case 1 :
                    // InternalSCL.g:10682:3: ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' )
                    {
                    // InternalSCL.g:10682:3: ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')' )
                    // InternalSCL.g:10683:4: () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) otherlv_4= ')'
                    {
                    // InternalSCL.g:10683:4: ()
                    // InternalSCL.g:10684:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalSCL.g:10693:4: ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) )
                    // InternalSCL.g:10694:5: ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) )
                    {
                    // InternalSCL.g:10694:5: ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) )
                    // InternalSCL.g:10695:6: (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator )
                    {
                    // InternalSCL.g:10695:6: (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator )
                    int alt286=2;
                    int LA286_0 = input.LA(1);

                    if ( (LA286_0==100) ) {
                        alt286=1;
                    }
                    else if ( (LA286_0==102) ) {
                        alt286=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 286, 0, input);

                        throw nvae;
                    }
                    switch (alt286) {
                        case 1 :
                            // InternalSCL.g:10696:7: lv_operator_1_1= rulePreOperator
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_86);
                            lv_operator_1_1=rulePreOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                              							}
                              							set(
                              								current,
                              								"operator",
                              								lv_operator_1_1,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.PreOperator");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalSCL.g:10712:7: lv_operator_1_2= ruleValOperator
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorValOperatorEnumRuleCall_0_1_0_1());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_86);
                            lv_operator_1_2=ruleValOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                              							}
                              							set(
                              								current,
                              								"operator",
                              								lv_operator_1_2,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.ValOperator");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    otherlv_2=(Token)match(input,34,FollowSets000.FOLLOW_119); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getValuedObjectTestExpressionAccess().getLeftParenthesisKeyword_0_2());
                      			
                    }
                    // InternalSCL.g:10734:4: ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) )
                    // InternalSCL.g:10735:5: (lv_subExpressions_3_0= ruleValuedObjectTestExpression )
                    {
                    // InternalSCL.g:10735:5: (lv_subExpressions_3_0= ruleValuedObjectTestExpression )
                    // InternalSCL.g:10736:6: lv_subExpressions_3_0= ruleValuedObjectTestExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectTestExpressionParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_87);
                    lv_subExpressions_3_0=ruleValuedObjectTestExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectTestExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getValuedObjectTestExpressionAccess().getRightParenthesisKeyword_0_4());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:10759:3: this_ValuedObjectReference_5= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getValuedObjectReferenceParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedObjectReference_5=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedObjectReference_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectTestExpression"


    // $ANTLR start "entryRulePrimeID"
    // InternalSCL.g:10774:1: entryRulePrimeID returns [String current=null] : iv_rulePrimeID= rulePrimeID EOF ;
    public final String entryRulePrimeID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePrimeID = null;


        try {
            // InternalSCL.g:10774:47: (iv_rulePrimeID= rulePrimeID EOF )
            // InternalSCL.g:10775:2: iv_rulePrimeID= rulePrimeID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimeIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimeID=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimeID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimeID"


    // $ANTLR start "rulePrimeID"
    // InternalSCL.g:10781:1: rulePrimeID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (kw= '\\'' )* ) ;
    public final AntlrDatatypeRuleToken rulePrimeID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;


        	enterRule();

        try {
            // InternalSCL.g:10787:2: ( (this_ID_0= RULE_ID (kw= '\\'' )* ) )
            // InternalSCL.g:10788:2: (this_ID_0= RULE_ID (kw= '\\'' )* )
            {
            // InternalSCL.g:10788:2: (this_ID_0= RULE_ID (kw= '\\'' )* )
            // InternalSCL.g:10789:3: this_ID_0= RULE_ID (kw= '\\'' )*
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_120); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_ID_0, grammarAccess.getPrimeIDAccess().getIDTerminalRuleCall_0());
              		
            }
            // InternalSCL.g:10796:3: (kw= '\\'' )*
            loop288:
            do {
                int alt288=2;
                int LA288_0 = input.LA(1);

                if ( (LA288_0==71) ) {
                    alt288=1;
                }


                switch (alt288) {
            	case 1 :
            	    // InternalSCL.g:10797:4: kw= '\\''
            	    {
            	    kw=(Token)match(input,71,FollowSets000.FOLLOW_120); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getPrimeIDAccess().getApostropheKeyword_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop288;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimeID"


    // $ANTLR start "entryRuleValuedObjectReference"
    // InternalSCL.g:10807:1: entryRuleValuedObjectReference returns [EObject current=null] : iv_ruleValuedObjectReference= ruleValuedObjectReference EOF ;
    public final EObject entryRuleValuedObjectReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectReference = null;


        try {
            // InternalSCL.g:10807:62: (iv_ruleValuedObjectReference= ruleValuedObjectReference EOF )
            // InternalSCL.g:10808:2: iv_ruleValuedObjectReference= ruleValuedObjectReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectReference=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectReference"


    // $ANTLR start "ruleValuedObjectReference"
    // InternalSCL.g:10814:1: ruleValuedObjectReference returns [EObject current=null] : ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ) ;
    public final EObject ruleValuedObjectReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_indices_2_0 = null;

        EObject lv_subReference_5_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:10820:2: ( ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ) )
            // InternalSCL.g:10821:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? )
            {
            // InternalSCL.g:10821:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? )
            // InternalSCL.g:10822:3: ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            {
            // InternalSCL.g:10822:3: ( ( rulePrimeID ) )
            // InternalSCL.g:10823:4: ( rulePrimeID )
            {
            // InternalSCL.g:10823:4: ( rulePrimeID )
            // InternalSCL.g:10824:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getValuedObjectReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_121);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:10841:3: (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )*
            loop289:
            do {
                int alt289=2;
                int LA289_0 = input.LA(1);

                if ( (LA289_0==41) ) {
                    alt289=1;
                }


                switch (alt289) {
            	case 1 :
            	    // InternalSCL.g:10842:4: otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']'
            	    {
            	    otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getValuedObjectReferenceAccess().getLeftSquareBracketKeyword_1_0());
            	      			
            	    }
            	    // InternalSCL.g:10846:4: ( (lv_indices_2_0= ruleExpression ) )
            	    // InternalSCL.g:10847:5: (lv_indices_2_0= ruleExpression )
            	    {
            	    // InternalSCL.g:10847:5: (lv_indices_2_0= ruleExpression )
            	    // InternalSCL.g:10848:6: lv_indices_2_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getIndicesExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_41);
            	    lv_indices_2_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getValuedObjectReferenceRule());
            	      						}
            	      						add(
            	      							current,
            	      							"indices",
            	      							lv_indices_2_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,42,FollowSets000.FOLLOW_121); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getValuedObjectReferenceAccess().getRightSquareBracketKeyword_1_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop289;
                }
            } while (true);

            // InternalSCL.g:10870:3: (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            int alt290=2;
            int LA290_0 = input.LA(1);

            if ( (LA290_0==56) ) {
                alt290=1;
            }
            switch (alt290) {
                case 1 :
                    // InternalSCL.g:10871:4: otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    {
                    otherlv_4=(Token)match(input,56,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getValuedObjectReferenceAccess().getFullStopKeyword_2_0());
                      			
                    }
                    // InternalSCL.g:10875:4: ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    // InternalSCL.g:10876:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    {
                    // InternalSCL.g:10876:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    // InternalSCL.g:10877:6: lv_subReference_5_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subReference_5_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectReferenceRule());
                      						}
                      						set(
                      							current,
                      							"subReference",
                      							lv_subReference_5_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectReference"


    // $ANTLR start "entryRuleScheduleObjectReference"
    // InternalSCL.g:10899:1: entryRuleScheduleObjectReference returns [EObject current=null] : iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF ;
    public final EObject entryRuleScheduleObjectReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleObjectReference = null;


        try {
            // InternalSCL.g:10899:64: (iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF )
            // InternalSCL.g:10900:2: iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleObjectReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleObjectReference=ruleScheduleObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleObjectReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleObjectReference"


    // $ANTLR start "ruleScheduleObjectReference"
    // InternalSCL.g:10906:1: ruleScheduleObjectReference returns [EObject current=null] : ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) ) ;
    public final EObject ruleScheduleObjectReference() throws RecognitionException {
        EObject current = null;

        Token lv_priority_1_0=null;


        	enterRule();

        try {
            // InternalSCL.g:10912:2: ( ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) ) )
            // InternalSCL.g:10913:2: ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) )
            {
            // InternalSCL.g:10913:2: ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) )
            // InternalSCL.g:10914:3: ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) )
            {
            // InternalSCL.g:10914:3: ( ( rulePrimeID ) )
            // InternalSCL.g:10915:4: ( rulePrimeID )
            {
            // InternalSCL.g:10915:4: ( rulePrimeID )
            // InternalSCL.g:10916:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getScheduleObjectReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScheduleObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_122);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:10933:3: ( (lv_priority_1_0= RULE_INT ) )
            // InternalSCL.g:10934:4: (lv_priority_1_0= RULE_INT )
            {
            // InternalSCL.g:10934:4: (lv_priority_1_0= RULE_INT )
            // InternalSCL.g:10935:5: lv_priority_1_0= RULE_INT
            {
            lv_priority_1_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_priority_1_0, grammarAccess.getScheduleObjectReferenceAccess().getPriorityINTTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getScheduleObjectReferenceRule());
              					}
              					setWithLastConsumed(
              						current,
              						"priority",
              						lv_priority_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.INT");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleObjectReference"


    // $ANTLR start "entryRuleReferenceCall"
    // InternalSCL.g:10955:1: entryRuleReferenceCall returns [EObject current=null] : iv_ruleReferenceCall= ruleReferenceCall EOF ;
    public final EObject entryRuleReferenceCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceCall = null;


        try {
            // InternalSCL.g:10955:54: (iv_ruleReferenceCall= ruleReferenceCall EOF )
            // InternalSCL.g:10956:2: iv_ruleReferenceCall= ruleReferenceCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceCall=ruleReferenceCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceCall"


    // $ANTLR start "ruleReferenceCall"
    // InternalSCL.g:10962:1: ruleReferenceCall returns [EObject current=null] : ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) ) ;
    public final EObject ruleReferenceCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_indices_2_0 = null;

        EObject lv_subReference_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:10968:2: ( ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) ) )
            // InternalSCL.g:10969:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) )
            {
            // InternalSCL.g:10969:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) )
            // InternalSCL.g:10970:3: ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' )
            {
            // InternalSCL.g:10970:3: ( ( rulePrimeID ) )
            // InternalSCL.g:10971:4: ( rulePrimeID )
            {
            // InternalSCL.g:10971:4: ( rulePrimeID )
            // InternalSCL.g:10972:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getReferenceCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceCallAccess().getValuedObjectValuedObjectCrossReference_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_123);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:10989:3: (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )*
            loop291:
            do {
                int alt291=2;
                int LA291_0 = input.LA(1);

                if ( (LA291_0==41) ) {
                    alt291=1;
                }


                switch (alt291) {
            	case 1 :
            	    // InternalSCL.g:10990:4: otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']'
            	    {
            	    otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_16); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getReferenceCallAccess().getLeftSquareBracketKeyword_1_0());
            	      			
            	    }
            	    // InternalSCL.g:10994:4: ( (lv_indices_2_0= ruleExpression ) )
            	    // InternalSCL.g:10995:5: (lv_indices_2_0= ruleExpression )
            	    {
            	    // InternalSCL.g:10995:5: (lv_indices_2_0= ruleExpression )
            	    // InternalSCL.g:10996:6: lv_indices_2_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getReferenceCallAccess().getIndicesExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_41);
            	    lv_indices_2_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getReferenceCallRule());
            	      						}
            	      						add(
            	      							current,
            	      							"indices",
            	      							lv_indices_2_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,42,FollowSets000.FOLLOW_123); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getReferenceCallAccess().getRightSquareBracketKeyword_1_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop291;
                }
            } while (true);

            // InternalSCL.g:11018:3: (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            int alt292=2;
            int LA292_0 = input.LA(1);

            if ( (LA292_0==56) ) {
                alt292=1;
            }
            switch (alt292) {
                case 1 :
                    // InternalSCL.g:11019:4: otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    {
                    otherlv_4=(Token)match(input,56,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getReferenceCallAccess().getFullStopKeyword_2_0());
                      			
                    }
                    // InternalSCL.g:11023:4: ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    // InternalSCL.g:11024:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    {
                    // InternalSCL.g:11024:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    // InternalSCL.g:11025:6: lv_subReference_5_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getReferenceCallAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_43);
                    lv_subReference_5_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getReferenceCallRule());
                      						}
                      						set(
                      							current,
                      							"subReference",
                      							lv_subReference_5_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCL.g:11043:3: ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' )
            int alt294=2;
            int LA294_0 = input.LA(1);

            if ( (LA294_0==34) ) {
                alt294=1;
            }
            else if ( (LA294_0==37) ) {
                alt294=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 294, 0, input);

                throw nvae;
            }
            switch (alt294) {
                case 1 :
                    // InternalSCL.g:11044:4: (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' )
                    {
                    // InternalSCL.g:11044:4: (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' )
                    // InternalSCL.g:11045:5: otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')'
                    {
                    otherlv_6=(Token)match(input,34,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getReferenceCallAccess().getLeftParenthesisKeyword_3_0_0());
                      				
                    }
                    // InternalSCL.g:11049:5: ( (lv_parameters_7_0= ruleParameter ) )
                    // InternalSCL.g:11050:6: (lv_parameters_7_0= ruleParameter )
                    {
                    // InternalSCL.g:11050:6: (lv_parameters_7_0= ruleParameter )
                    // InternalSCL.g:11051:7: lv_parameters_7_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_37);
                    lv_parameters_7_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceCallRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_7_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCL.g:11068:5: (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )*
                    loop293:
                    do {
                        int alt293=2;
                        int LA293_0 = input.LA(1);

                        if ( (LA293_0==35) ) {
                            alt293=1;
                        }


                        switch (alt293) {
                    	case 1 :
                    	    // InternalSCL.g:11069:6: otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) )
                    	    {
                    	    otherlv_8=(Token)match(input,35,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_8, grammarAccess.getReferenceCallAccess().getCommaKeyword_3_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:11073:6: ( (lv_parameters_9_0= ruleParameter ) )
                    	    // InternalSCL.g:11074:7: (lv_parameters_9_0= ruleParameter )
                    	    {
                    	    // InternalSCL.g:11074:7: (lv_parameters_9_0= ruleParameter )
                    	    // InternalSCL.g:11075:8: lv_parameters_9_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_3_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_37);
                    	    lv_parameters_9_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceCallRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_9_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop293;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_10, grammarAccess.getReferenceCallAccess().getRightParenthesisKeyword_3_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:11099:4: otherlv_11= '()'
                    {
                    otherlv_11=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getReferenceCallAccess().getLeftParenthesisRightParenthesisKeyword_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceCall"


    // $ANTLR start "entryRuleRandomCall"
    // InternalSCL.g:11108:1: entryRuleRandomCall returns [EObject current=null] : iv_ruleRandomCall= ruleRandomCall EOF ;
    public final EObject entryRuleRandomCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRandomCall = null;


        try {
            // InternalSCL.g:11108:51: (iv_ruleRandomCall= ruleRandomCall EOF )
            // InternalSCL.g:11109:2: iv_ruleRandomCall= ruleRandomCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRandomCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRandomCall=ruleRandomCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRandomCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRandomCall"


    // $ANTLR start "ruleRandomCall"
    // InternalSCL.g:11115:1: ruleRandomCall returns [EObject current=null] : ( () otherlv_1= 'random' (otherlv_2= '()' )? ) ;
    public final EObject ruleRandomCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalSCL.g:11121:2: ( ( () otherlv_1= 'random' (otherlv_2= '()' )? ) )
            // InternalSCL.g:11122:2: ( () otherlv_1= 'random' (otherlv_2= '()' )? )
            {
            // InternalSCL.g:11122:2: ( () otherlv_1= 'random' (otherlv_2= '()' )? )
            // InternalSCL.g:11123:3: () otherlv_1= 'random' (otherlv_2= '()' )?
            {
            // InternalSCL.g:11123:3: ()
            // InternalSCL.g:11124:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRandomCallAccess().getRandomCallAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,72,FollowSets000.FOLLOW_124); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRandomCallAccess().getRandomKeyword_1());
              		
            }
            // InternalSCL.g:11137:3: (otherlv_2= '()' )?
            int alt295=2;
            int LA295_0 = input.LA(1);

            if ( (LA295_0==37) ) {
                alt295=1;
            }
            switch (alt295) {
                case 1 :
                    // InternalSCL.g:11138:4: otherlv_2= '()'
                    {
                    otherlv_2=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getRandomCallAccess().getLeftParenthesisRightParenthesisKeyword_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRandomCall"


    // $ANTLR start "entryRuleRandomizeCall"
    // InternalSCL.g:11147:1: entryRuleRandomizeCall returns [EObject current=null] : iv_ruleRandomizeCall= ruleRandomizeCall EOF ;
    public final EObject entryRuleRandomizeCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRandomizeCall = null;


        try {
            // InternalSCL.g:11147:54: (iv_ruleRandomizeCall= ruleRandomizeCall EOF )
            // InternalSCL.g:11148:2: iv_ruleRandomizeCall= ruleRandomizeCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRandomizeCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRandomizeCall=ruleRandomizeCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRandomizeCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRandomizeCall"


    // $ANTLR start "ruleRandomizeCall"
    // InternalSCL.g:11154:1: ruleRandomizeCall returns [EObject current=null] : ( () otherlv_1= 'randomize' (otherlv_2= '()' )? ) ;
    public final EObject ruleRandomizeCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalSCL.g:11160:2: ( ( () otherlv_1= 'randomize' (otherlv_2= '()' )? ) )
            // InternalSCL.g:11161:2: ( () otherlv_1= 'randomize' (otherlv_2= '()' )? )
            {
            // InternalSCL.g:11161:2: ( () otherlv_1= 'randomize' (otherlv_2= '()' )? )
            // InternalSCL.g:11162:3: () otherlv_1= 'randomize' (otherlv_2= '()' )?
            {
            // InternalSCL.g:11162:3: ()
            // InternalSCL.g:11163:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRandomizeCallAccess().getRandomizeCallAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,58,FollowSets000.FOLLOW_124); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getRandomizeCallAccess().getRandomizeKeyword_1());
              		
            }
            // InternalSCL.g:11176:3: (otherlv_2= '()' )?
            int alt296=2;
            int LA296_0 = input.LA(1);

            if ( (LA296_0==37) ) {
                alt296=1;
            }
            switch (alt296) {
                case 1 :
                    // InternalSCL.g:11177:4: otherlv_2= '()'
                    {
                    otherlv_2=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getRandomizeCallAccess().getLeftParenthesisRightParenthesisKeyword_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRandomizeCall"


    // $ANTLR start "entryRuleFunctionCall"
    // InternalSCL.g:11186:1: entryRuleFunctionCall returns [EObject current=null] : iv_ruleFunctionCall= ruleFunctionCall EOF ;
    public final EObject entryRuleFunctionCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionCall = null;


        try {
            // InternalSCL.g:11186:53: (iv_ruleFunctionCall= ruleFunctionCall EOF )
            // InternalSCL.g:11187:2: iv_ruleFunctionCall= ruleFunctionCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionCall=ruleFunctionCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionCall"


    // $ANTLR start "ruleFunctionCall"
    // InternalSCL.g:11193:1: ruleFunctionCall returns [EObject current=null] : (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) ;
    public final EObject ruleFunctionCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_functionName_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:11199:2: ( (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) ) )
            // InternalSCL.g:11200:2: (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
            {
            // InternalSCL.g:11200:2: (otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' ) )
            // InternalSCL.g:11201:3: otherlv_0= 'extern' ( (lv_functionName_1_0= RULE_ID ) ) ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
            {
            otherlv_0=(Token)match(input,53,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getFunctionCallAccess().getExternKeyword_0());
              		
            }
            // InternalSCL.g:11205:3: ( (lv_functionName_1_0= RULE_ID ) )
            // InternalSCL.g:11206:4: (lv_functionName_1_0= RULE_ID )
            {
            // InternalSCL.g:11206:4: (lv_functionName_1_0= RULE_ID )
            // InternalSCL.g:11207:5: lv_functionName_1_0= RULE_ID
            {
            lv_functionName_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_functionName_1_0, grammarAccess.getFunctionCallAccess().getFunctionNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFunctionCallRule());
              					}
              					setWithLastConsumed(
              						current,
              						"functionName",
              						lv_functionName_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalSCL.g:11223:3: ( (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) | otherlv_7= '()' )
            int alt298=2;
            int LA298_0 = input.LA(1);

            if ( (LA298_0==34) ) {
                alt298=1;
            }
            else if ( (LA298_0==37) ) {
                alt298=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 298, 0, input);

                throw nvae;
            }
            switch (alt298) {
                case 1 :
                    // InternalSCL.g:11224:4: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                    {
                    // InternalSCL.g:11224:4: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
                    // InternalSCL.g:11225:5: otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')'
                    {
                    otherlv_2=(Token)match(input,34,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_2_0_0());
                      				
                    }
                    // InternalSCL.g:11229:5: ( (lv_parameters_3_0= ruleParameter ) )
                    // InternalSCL.g:11230:6: (lv_parameters_3_0= ruleParameter )
                    {
                    // InternalSCL.g:11230:6: (lv_parameters_3_0= ruleParameter )
                    // InternalSCL.g:11231:7: lv_parameters_3_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_2_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_37);
                    lv_parameters_3_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFunctionCallRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalSCL.g:11248:5: (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )*
                    loop297:
                    do {
                        int alt297=2;
                        int LA297_0 = input.LA(1);

                        if ( (LA297_0==35) ) {
                            alt297=1;
                        }


                        switch (alt297) {
                    	case 1 :
                    	    // InternalSCL.g:11249:6: otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) )
                    	    {
                    	    otherlv_4=(Token)match(input,35,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getFunctionCallAccess().getCommaKeyword_2_0_2_0());
                    	      					
                    	    }
                    	    // InternalSCL.g:11253:6: ( (lv_parameters_5_0= ruleParameter ) )
                    	    // InternalSCL.g:11254:7: (lv_parameters_5_0= ruleParameter )
                    	    {
                    	    // InternalSCL.g:11254:7: (lv_parameters_5_0= ruleParameter )
                    	    // InternalSCL.g:11255:8: lv_parameters_5_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_2_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_37);
                    	    lv_parameters_5_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getFunctionCallRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_5_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop297;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_2_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:11279:4: otherlv_7= '()'
                    {
                    otherlv_7=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionCall"


    // $ANTLR start "entryRuleParameter"
    // InternalSCL.g:11288:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
    public final EObject entryRuleParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameter = null;


        try {
            // InternalSCL.g:11288:50: (iv_ruleParameter= ruleParameter EOF )
            // InternalSCL.g:11289:2: iv_ruleParameter= ruleParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleParameter=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
    // InternalSCL.g:11295:1: ruleParameter returns [EObject current=null] : ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleParameter() throws RecognitionException {
        EObject current = null;

        Token lv_pureOutput_0_0=null;
        Token lv_callByReference_1_0=null;
        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:11301:2: ( ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalSCL.g:11302:2: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalSCL.g:11302:2: ( ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalSCL.g:11303:3: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )? ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalSCL.g:11303:3: ( ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) ) )?
            int alt300=2;
            int LA300_0 = input.LA(1);

            if ( (LA300_0==38) ) {
                int LA300_1 = input.LA(2);

                if ( (LA300_1==39) ) {
                    alt300=1;
                }
            }
            else if ( (LA300_0==39) ) {
                alt300=1;
            }
            switch (alt300) {
                case 1 :
                    // InternalSCL.g:11304:4: ( (lv_pureOutput_0_0= '!' ) )? ( (lv_callByReference_1_0= '&' ) )
                    {
                    // InternalSCL.g:11304:4: ( (lv_pureOutput_0_0= '!' ) )?
                    int alt299=2;
                    int LA299_0 = input.LA(1);

                    if ( (LA299_0==38) ) {
                        alt299=1;
                    }
                    switch (alt299) {
                        case 1 :
                            // InternalSCL.g:11305:5: (lv_pureOutput_0_0= '!' )
                            {
                            // InternalSCL.g:11305:5: (lv_pureOutput_0_0= '!' )
                            // InternalSCL.g:11306:6: lv_pureOutput_0_0= '!'
                            {
                            lv_pureOutput_0_0=(Token)match(input,38,FollowSets000.FOLLOW_38); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_pureOutput_0_0, grammarAccess.getParameterAccess().getPureOutputExclamationMarkKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getParameterRule());
                              						}
                              						setWithLastConsumed(current, "pureOutput", true, "!");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalSCL.g:11318:4: ( (lv_callByReference_1_0= '&' ) )
                    // InternalSCL.g:11319:5: (lv_callByReference_1_0= '&' )
                    {
                    // InternalSCL.g:11319:5: (lv_callByReference_1_0= '&' )
                    // InternalSCL.g:11320:6: lv_callByReference_1_0= '&'
                    {
                    lv_callByReference_1_0=(Token)match(input,39,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_callByReference_1_0, grammarAccess.getParameterAccess().getCallByReferenceAmpersandKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getParameterRule());
                      						}
                      						setWithLastConsumed(current, "callByReference", true, "&");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalSCL.g:11333:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalSCL.g:11334:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalSCL.g:11334:4: (lv_expression_2_0= ruleExpression )
            // InternalSCL.g:11335:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameterAccess().getExpressionExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameterRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleTextExpression"
    // InternalSCL.g:11356:1: entryRuleTextExpression returns [EObject current=null] : iv_ruleTextExpression= ruleTextExpression EOF ;
    public final EObject entryRuleTextExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTextExpression = null;


        try {
            // InternalSCL.g:11356:55: (iv_ruleTextExpression= ruleTextExpression EOF )
            // InternalSCL.g:11357:2: iv_ruleTextExpression= ruleTextExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTextExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTextExpression=ruleTextExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTextExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTextExpression"


    // $ANTLR start "ruleTextExpression"
    // InternalSCL.g:11363:1: ruleTextExpression returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) ;
    public final EObject ruleTextExpression() throws RecognitionException {
        EObject current = null;

        Token lv_text_1_0=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:11369:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) )
            // InternalSCL.g:11370:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            {
            // InternalSCL.g:11370:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            // InternalSCL.g:11371:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) )
            {
            // InternalSCL.g:11371:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop301:
            do {
                int alt301=2;
                int LA301_0 = input.LA(1);

                if ( (LA301_0==RULE_COMMENT_ANNOTATION||LA301_0==76) ) {
                    alt301=1;
                }


                switch (alt301) {
            	case 1 :
            	    // InternalSCL.g:11372:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalSCL.g:11372:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalSCL.g:11373:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getTextExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_88);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getTextExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop301;
                }
            } while (true);

            // InternalSCL.g:11390:3: ( (lv_text_1_0= RULE_HOSTCODE ) )
            // InternalSCL.g:11391:4: (lv_text_1_0= RULE_HOSTCODE )
            {
            // InternalSCL.g:11391:4: (lv_text_1_0= RULE_HOSTCODE )
            // InternalSCL.g:11392:5: lv_text_1_0= RULE_HOSTCODE
            {
            lv_text_1_0=(Token)match(input,RULE_HOSTCODE,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_text_1_0, grammarAccess.getTextExpressionAccess().getTextHOSTCODETerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTextExpressionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"text",
              						lv_text_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.HOSTCODE");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTextExpression"


    // $ANTLR start "entryRuleIntValue"
    // InternalSCL.g:11412:1: entryRuleIntValue returns [EObject current=null] : iv_ruleIntValue= ruleIntValue EOF ;
    public final EObject entryRuleIntValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntValue = null;


        try {
            // InternalSCL.g:11412:49: (iv_ruleIntValue= ruleIntValue EOF )
            // InternalSCL.g:11413:2: iv_ruleIntValue= ruleIntValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIntValue=ruleIntValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntValue"


    // $ANTLR start "ruleIntValue"
    // InternalSCL.g:11419:1: ruleIntValue returns [EObject current=null] : ( (lv_value_0_0= RULE_INT ) ) ;
    public final EObject ruleIntValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalSCL.g:11425:2: ( ( (lv_value_0_0= RULE_INT ) ) )
            // InternalSCL.g:11426:2: ( (lv_value_0_0= RULE_INT ) )
            {
            // InternalSCL.g:11426:2: ( (lv_value_0_0= RULE_INT ) )
            // InternalSCL.g:11427:3: (lv_value_0_0= RULE_INT )
            {
            // InternalSCL.g:11427:3: (lv_value_0_0= RULE_INT )
            // InternalSCL.g:11428:4: lv_value_0_0= RULE_INT
            {
            lv_value_0_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getIntValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.INT");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntValue"


    // $ANTLR start "entryRuleFloatValue"
    // InternalSCL.g:11447:1: entryRuleFloatValue returns [EObject current=null] : iv_ruleFloatValue= ruleFloatValue EOF ;
    public final EObject entryRuleFloatValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFloatValue = null;


        try {
            // InternalSCL.g:11447:51: (iv_ruleFloatValue= ruleFloatValue EOF )
            // InternalSCL.g:11448:2: iv_ruleFloatValue= ruleFloatValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFloatValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFloatValue=ruleFloatValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFloatValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFloatValue"


    // $ANTLR start "ruleFloatValue"
    // InternalSCL.g:11454:1: ruleFloatValue returns [EObject current=null] : ( (lv_value_0_0= RULE_FLOAT ) ) ;
    public final EObject ruleFloatValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalSCL.g:11460:2: ( ( (lv_value_0_0= RULE_FLOAT ) ) )
            // InternalSCL.g:11461:2: ( (lv_value_0_0= RULE_FLOAT ) )
            {
            // InternalSCL.g:11461:2: ( (lv_value_0_0= RULE_FLOAT ) )
            // InternalSCL.g:11462:3: (lv_value_0_0= RULE_FLOAT )
            {
            // InternalSCL.g:11462:3: (lv_value_0_0= RULE_FLOAT )
            // InternalSCL.g:11463:4: lv_value_0_0= RULE_FLOAT
            {
            lv_value_0_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getFloatValueAccess().getValueFLOATTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFloatValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.FLOAT");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFloatValue"


    // $ANTLR start "entryRuleBoolValue"
    // InternalSCL.g:11482:1: entryRuleBoolValue returns [EObject current=null] : iv_ruleBoolValue= ruleBoolValue EOF ;
    public final EObject entryRuleBoolValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoolValue = null;


        try {
            // InternalSCL.g:11482:50: (iv_ruleBoolValue= ruleBoolValue EOF )
            // InternalSCL.g:11483:2: iv_ruleBoolValue= ruleBoolValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBoolValue=ruleBoolValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolValue"


    // $ANTLR start "ruleBoolValue"
    // InternalSCL.g:11489:1: ruleBoolValue returns [EObject current=null] : ( (lv_value_0_0= RULE_BOOLEAN ) ) ;
    public final EObject ruleBoolValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalSCL.g:11495:2: ( ( (lv_value_0_0= RULE_BOOLEAN ) ) )
            // InternalSCL.g:11496:2: ( (lv_value_0_0= RULE_BOOLEAN ) )
            {
            // InternalSCL.g:11496:2: ( (lv_value_0_0= RULE_BOOLEAN ) )
            // InternalSCL.g:11497:3: (lv_value_0_0= RULE_BOOLEAN )
            {
            // InternalSCL.g:11497:3: (lv_value_0_0= RULE_BOOLEAN )
            // InternalSCL.g:11498:4: lv_value_0_0= RULE_BOOLEAN
            {
            lv_value_0_0=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getBoolValueAccess().getValueBOOLEANTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getBoolValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.BOOLEAN");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoolValue"


    // $ANTLR start "entryRuleStringValue"
    // InternalSCL.g:11517:1: entryRuleStringValue returns [EObject current=null] : iv_ruleStringValue= ruleStringValue EOF ;
    public final EObject entryRuleStringValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringValue = null;


        try {
            // InternalSCL.g:11517:52: (iv_ruleStringValue= ruleStringValue EOF )
            // InternalSCL.g:11518:2: iv_ruleStringValue= ruleStringValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringValue=ruleStringValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringValue"


    // $ANTLR start "ruleStringValue"
    // InternalSCL.g:11524:1: ruleStringValue returns [EObject current=null] : ( (lv_value_0_0= RULE_STRING ) ) ;
    public final EObject ruleStringValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalSCL.g:11530:2: ( ( (lv_value_0_0= RULE_STRING ) ) )
            // InternalSCL.g:11531:2: ( (lv_value_0_0= RULE_STRING ) )
            {
            // InternalSCL.g:11531:2: ( (lv_value_0_0= RULE_STRING ) )
            // InternalSCL.g:11532:3: (lv_value_0_0= RULE_STRING )
            {
            // InternalSCL.g:11532:3: (lv_value_0_0= RULE_STRING )
            // InternalSCL.g:11533:4: lv_value_0_0= RULE_STRING
            {
            lv_value_0_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getStringValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.STRING");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringValue"


    // $ANTLR start "entryRuleVectorValue"
    // InternalSCL.g:11552:1: entryRuleVectorValue returns [EObject current=null] : iv_ruleVectorValue= ruleVectorValue EOF ;
    public final EObject entryRuleVectorValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVectorValue = null;


        try {
            // InternalSCL.g:11552:52: (iv_ruleVectorValue= ruleVectorValue EOF )
            // InternalSCL.g:11553:2: iv_ruleVectorValue= ruleVectorValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVectorValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVectorValue=ruleVectorValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVectorValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVectorValue"


    // $ANTLR start "ruleVectorValue"
    // InternalSCL.g:11559:1: ruleVectorValue returns [EObject current=null] : (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' ) ;
    public final EObject ruleVectorValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_values_1_0 = null;

        EObject lv_values_3_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:11565:2: ( (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' ) )
            // InternalSCL.g:11566:2: (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' )
            {
            // InternalSCL.g:11566:2: (otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}' )
            // InternalSCL.g:11567:3: otherlv_0= '{' ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* otherlv_4= '}'
            {
            otherlv_0=(Token)match(input,25,FollowSets000.FOLLOW_125); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getVectorValueAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            // InternalSCL.g:11571:3: ( (lv_values_1_0= ruleVectorValueMember ) )
            // InternalSCL.g:11572:4: (lv_values_1_0= ruleVectorValueMember )
            {
            // InternalSCL.g:11572:4: (lv_values_1_0= ruleVectorValueMember )
            // InternalSCL.g:11573:5: lv_values_1_0= ruleVectorValueMember
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVectorValueAccess().getValuesVectorValueMemberParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_80);
            lv_values_1_0=ruleVectorValueMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVectorValueRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.VectorValueMember");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:11590:3: (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )*
            loop302:
            do {
                int alt302=2;
                int LA302_0 = input.LA(1);

                if ( (LA302_0==35) ) {
                    alt302=1;
                }


                switch (alt302) {
            	case 1 :
            	    // InternalSCL.g:11591:4: otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) )
            	    {
            	    otherlv_2=(Token)match(input,35,FollowSets000.FOLLOW_125); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getVectorValueAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalSCL.g:11595:4: ( (lv_values_3_0= ruleVectorValueMember ) )
            	    // InternalSCL.g:11596:5: (lv_values_3_0= ruleVectorValueMember )
            	    {
            	    // InternalSCL.g:11596:5: (lv_values_3_0= ruleVectorValueMember )
            	    // InternalSCL.g:11597:6: lv_values_3_0= ruleVectorValueMember
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getVectorValueAccess().getValuesVectorValueMemberParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_80);
            	    lv_values_3_0=ruleVectorValueMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getVectorValueRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_3_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.VectorValueMember");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop302;
                }
            } while (true);

            otherlv_4=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getVectorValueAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVectorValue"


    // $ANTLR start "entryRuleVectorValueMember"
    // InternalSCL.g:11623:1: entryRuleVectorValueMember returns [EObject current=null] : iv_ruleVectorValueMember= ruleVectorValueMember EOF ;
    public final EObject entryRuleVectorValueMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVectorValueMember = null;


        try {
            // InternalSCL.g:11623:58: (iv_ruleVectorValueMember= ruleVectorValueMember EOF )
            // InternalSCL.g:11624:2: iv_ruleVectorValueMember= ruleVectorValueMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVectorValueMemberRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVectorValueMember=ruleVectorValueMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVectorValueMember; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVectorValueMember"


    // $ANTLR start "ruleVectorValueMember"
    // InternalSCL.g:11630:1: ruleVectorValueMember returns [EObject current=null] : (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue ) ;
    public final EObject ruleVectorValueMember() throws RecognitionException {
        EObject current = null;

        EObject this_BoolExpression_0 = null;

        EObject this_ValuedExpression_1 = null;

        EObject this_IgnoreValue_2 = null;



        	enterRule();

        try {
            // InternalSCL.g:11636:2: ( (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue ) )
            // InternalSCL.g:11637:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue )
            {
            // InternalSCL.g:11637:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue )
            int alt303=3;
            alt303 = dfa303.predict(input);
            switch (alt303) {
                case 1 :
                    // InternalSCL.g:11638:3: this_BoolExpression_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVectorValueMemberAccess().getBoolExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolExpression_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCL.g:11650:3: this_ValuedExpression_1= ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVectorValueMemberAccess().getValuedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_1=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCL.g:11662:3: this_IgnoreValue_2= ruleIgnoreValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVectorValueMemberAccess().getIgnoreValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IgnoreValue_2=ruleIgnoreValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IgnoreValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVectorValueMember"


    // $ANTLR start "entryRuleIgnoreValue"
    // InternalSCL.g:11677:1: entryRuleIgnoreValue returns [EObject current=null] : iv_ruleIgnoreValue= ruleIgnoreValue EOF ;
    public final EObject entryRuleIgnoreValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIgnoreValue = null;


        try {
            // InternalSCL.g:11677:52: (iv_ruleIgnoreValue= ruleIgnoreValue EOF )
            // InternalSCL.g:11678:2: iv_ruleIgnoreValue= ruleIgnoreValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIgnoreValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIgnoreValue=ruleIgnoreValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIgnoreValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIgnoreValue"


    // $ANTLR start "ruleIgnoreValue"
    // InternalSCL.g:11684:1: ruleIgnoreValue returns [EObject current=null] : ( () otherlv_1= '_' ) ;
    public final EObject ruleIgnoreValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalSCL.g:11690:2: ( ( () otherlv_1= '_' ) )
            // InternalSCL.g:11691:2: ( () otherlv_1= '_' )
            {
            // InternalSCL.g:11691:2: ( () otherlv_1= '_' )
            // InternalSCL.g:11692:3: () otherlv_1= '_'
            {
            // InternalSCL.g:11692:3: ()
            // InternalSCL.g:11693:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getIgnoreValueAccess().getIgnoreValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,73,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getIgnoreValueAccess().get_Keyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIgnoreValue"


    // $ANTLR start "entryRuleAnyValue"
    // InternalSCL.g:11710:1: entryRuleAnyValue returns [EObject current=null] : iv_ruleAnyValue= ruleAnyValue EOF ;
    public final EObject entryRuleAnyValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnyValue = null;


        try {
            // InternalSCL.g:11710:49: (iv_ruleAnyValue= ruleAnyValue EOF )
            // InternalSCL.g:11711:2: iv_ruleAnyValue= ruleAnyValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnyValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnyValue=ruleAnyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnyValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnyValue"


    // $ANTLR start "ruleAnyValue"
    // InternalSCL.g:11717:1: ruleAnyValue returns [EObject current=null] : (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue ) ;
    public final EObject ruleAnyValue() throws RecognitionException {
        EObject current = null;

        EObject this_IntValue_0 = null;

        EObject this_FloatValue_1 = null;

        EObject this_BoolValue_2 = null;

        EObject this_StringValue_3 = null;



        	enterRule();

        try {
            // InternalSCL.g:11723:2: ( (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue ) )
            // InternalSCL.g:11724:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue )
            {
            // InternalSCL.g:11724:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue )
            int alt304=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt304=1;
                }
                break;
            case RULE_FLOAT:
                {
                alt304=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt304=3;
                }
                break;
            case RULE_STRING:
                {
                alt304=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 304, 0, input);

                throw nvae;
            }

            switch (alt304) {
                case 1 :
                    // InternalSCL.g:11725:3: this_IntValue_0= ruleIntValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getIntValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IntValue_0=ruleIntValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IntValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCL.g:11737:3: this_FloatValue_1= ruleFloatValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getFloatValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FloatValue_1=ruleFloatValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FloatValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCL.g:11749:3: this_BoolValue_2= ruleBoolValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getBoolValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolValue_2=ruleBoolValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCL.g:11761:3: this_StringValue_3= ruleStringValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getStringValueParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringValue_3=ruleStringValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnyValue"


    // $ANTLR start "entryRuleJsonObjectValue"
    // InternalSCL.g:11776:1: entryRuleJsonObjectValue returns [EObject current=null] : iv_ruleJsonObjectValue= ruleJsonObjectValue EOF ;
    public final EObject entryRuleJsonObjectValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonObjectValue = null;


        try {
            // InternalSCL.g:11776:56: (iv_ruleJsonObjectValue= ruleJsonObjectValue EOF )
            // InternalSCL.g:11777:2: iv_ruleJsonObjectValue= ruleJsonObjectValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonObjectValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonObjectValue=ruleJsonObjectValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonObjectValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonObjectValue"


    // $ANTLR start "ruleJsonObjectValue"
    // InternalSCL.g:11783:1: ruleJsonObjectValue returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleJsonObjectValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_members_2_0 = null;

        EObject lv_members_4_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:11789:2: ( ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' ) )
            // InternalSCL.g:11790:2: ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' )
            {
            // InternalSCL.g:11790:2: ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' )
            // InternalSCL.g:11791:3: () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}'
            {
            // InternalSCL.g:11791:3: ()
            // InternalSCL.g:11792:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJsonObjectValueAccess().getJsonObjectValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,25,FollowSets000.FOLLOW_126); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJsonObjectValueAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalSCL.g:11805:3: ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )?
            int alt306=2;
            int LA306_0 = input.LA(1);

            if ( (LA306_0==RULE_STRING) ) {
                alt306=1;
            }
            switch (alt306) {
                case 1 :
                    // InternalSCL.g:11806:4: ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )*
                    {
                    // InternalSCL.g:11806:4: ( (lv_members_2_0= ruleJsonObjectMember ) )
                    // InternalSCL.g:11807:5: (lv_members_2_0= ruleJsonObjectMember )
                    {
                    // InternalSCL.g:11807:5: (lv_members_2_0= ruleJsonObjectMember )
                    // InternalSCL.g:11808:6: lv_members_2_0= ruleJsonObjectMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJsonObjectValueAccess().getMembersJsonObjectMemberParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_80);
                    lv_members_2_0=ruleJsonObjectMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJsonObjectValueRule());
                      						}
                      						add(
                      							current,
                      							"members",
                      							lv_members_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCL.g:11825:4: (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )*
                    loop305:
                    do {
                        int alt305=2;
                        int LA305_0 = input.LA(1);

                        if ( (LA305_0==35) ) {
                            alt305=1;
                        }


                        switch (alt305) {
                    	case 1 :
                    	    // InternalSCL.g:11826:5: otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) )
                    	    {
                    	    otherlv_3=(Token)match(input,35,FollowSets000.FOLLOW_60); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getJsonObjectValueAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalSCL.g:11830:5: ( (lv_members_4_0= ruleJsonObjectMember ) )
                    	    // InternalSCL.g:11831:6: (lv_members_4_0= ruleJsonObjectMember )
                    	    {
                    	    // InternalSCL.g:11831:6: (lv_members_4_0= ruleJsonObjectMember )
                    	    // InternalSCL.g:11832:7: lv_members_4_0= ruleJsonObjectMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJsonObjectValueAccess().getMembersJsonObjectMemberParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_80);
                    	    lv_members_4_0=ruleJsonObjectMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJsonObjectValueRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"members",
                    	      								lv_members_4_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop305;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getJsonObjectValueAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonObjectValue"


    // $ANTLR start "entryRuleJsonObjectMember"
    // InternalSCL.g:11859:1: entryRuleJsonObjectMember returns [EObject current=null] : iv_ruleJsonObjectMember= ruleJsonObjectMember EOF ;
    public final EObject entryRuleJsonObjectMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonObjectMember = null;


        try {
            // InternalSCL.g:11859:57: (iv_ruleJsonObjectMember= ruleJsonObjectMember EOF )
            // InternalSCL.g:11860:2: iv_ruleJsonObjectMember= ruleJsonObjectMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonObjectMemberRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonObjectMember=ruleJsonObjectMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonObjectMember; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonObjectMember"


    // $ANTLR start "ruleJsonObjectMember"
    // InternalSCL.g:11866:1: ruleJsonObjectMember returns [EObject current=null] : ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) ) ;
    public final EObject ruleJsonObjectMember() throws RecognitionException {
        EObject current = null;

        Token lv_key_0_0=null;
        Token otherlv_1=null;
        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:11872:2: ( ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) ) )
            // InternalSCL.g:11873:2: ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) )
            {
            // InternalSCL.g:11873:2: ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) )
            // InternalSCL.g:11874:3: ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) )
            {
            // InternalSCL.g:11874:3: ( (lv_key_0_0= RULE_STRING ) )
            // InternalSCL.g:11875:4: (lv_key_0_0= RULE_STRING )
            {
            // InternalSCL.g:11875:4: (lv_key_0_0= RULE_STRING )
            // InternalSCL.g:11876:5: lv_key_0_0= RULE_STRING
            {
            lv_key_0_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_key_0_0, grammarAccess.getJsonObjectMemberAccess().getKeySTRINGTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getJsonObjectMemberRule());
              					}
              					setWithLastConsumed(
              						current,
              						"key",
              						lv_key_0_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,18,FollowSets000.FOLLOW_127); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJsonObjectMemberAccess().getColonKeyword_1());
              		
            }
            // InternalSCL.g:11896:3: ( (lv_value_2_0= ruleJsonValue ) )
            // InternalSCL.g:11897:4: (lv_value_2_0= ruleJsonValue )
            {
            // InternalSCL.g:11897:4: (lv_value_2_0= ruleJsonValue )
            // InternalSCL.g:11898:5: lv_value_2_0= ruleJsonValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonObjectMemberAccess().getValueJsonValueParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_value_2_0=ruleJsonValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonObjectMemberRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.JsonValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonObjectMember"


    // $ANTLR start "entryRuleJsonArrayValue"
    // InternalSCL.g:11919:1: entryRuleJsonArrayValue returns [EObject current=null] : iv_ruleJsonArrayValue= ruleJsonArrayValue EOF ;
    public final EObject entryRuleJsonArrayValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonArrayValue = null;


        try {
            // InternalSCL.g:11919:55: (iv_ruleJsonArrayValue= ruleJsonArrayValue EOF )
            // InternalSCL.g:11920:2: iv_ruleJsonArrayValue= ruleJsonArrayValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonArrayValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonArrayValue=ruleJsonArrayValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonArrayValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonArrayValue"


    // $ANTLR start "ruleJsonArrayValue"
    // InternalSCL.g:11926:1: ruleJsonArrayValue returns [EObject current=null] : ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' ) ;
    public final EObject ruleJsonArrayValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_4_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:11932:2: ( ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' ) )
            // InternalSCL.g:11933:2: ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' )
            {
            // InternalSCL.g:11933:2: ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' )
            // InternalSCL.g:11934:3: () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']'
            {
            // InternalSCL.g:11934:3: ()
            // InternalSCL.g:11935:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJsonArrayValueAccess().getJsonArrayValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,41,FollowSets000.FOLLOW_128); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJsonArrayValueAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalSCL.g:11948:3: ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )?
            int alt308=2;
            int LA308_0 = input.LA(1);

            if ( (LA308_0==RULE_STRING||(LA308_0>=RULE_INT && LA308_0<=RULE_BOOLEAN)||LA308_0==25||LA308_0==41||LA308_0==74) ) {
                alt308=1;
            }
            switch (alt308) {
                case 1 :
                    // InternalSCL.g:11949:4: ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )*
                    {
                    // InternalSCL.g:11949:4: ( (lv_elements_2_0= ruleJsonValue ) )
                    // InternalSCL.g:11950:5: (lv_elements_2_0= ruleJsonValue )
                    {
                    // InternalSCL.g:11950:5: (lv_elements_2_0= ruleJsonValue )
                    // InternalSCL.g:11951:6: lv_elements_2_0= ruleJsonValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJsonArrayValueAccess().getElementsJsonValueParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_129);
                    lv_elements_2_0=ruleJsonValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJsonArrayValueRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.JsonValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalSCL.g:11968:4: (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )*
                    loop307:
                    do {
                        int alt307=2;
                        int LA307_0 = input.LA(1);

                        if ( (LA307_0==35) ) {
                            alt307=1;
                        }


                        switch (alt307) {
                    	case 1 :
                    	    // InternalSCL.g:11969:5: otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) )
                    	    {
                    	    otherlv_3=(Token)match(input,35,FollowSets000.FOLLOW_127); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getJsonArrayValueAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalSCL.g:11973:5: ( (lv_elements_4_0= ruleJsonValue ) )
                    	    // InternalSCL.g:11974:6: (lv_elements_4_0= ruleJsonValue )
                    	    {
                    	    // InternalSCL.g:11974:6: (lv_elements_4_0= ruleJsonValue )
                    	    // InternalSCL.g:11975:7: lv_elements_4_0= ruleJsonValue
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJsonArrayValueAccess().getElementsJsonValueParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_129);
                    	    lv_elements_4_0=ruleJsonValue();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJsonArrayValueRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_4_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.JsonValue");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop307;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,42,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getJsonArrayValueAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonArrayValue"


    // $ANTLR start "entryRuleJsonValue"
    // InternalSCL.g:12002:1: entryRuleJsonValue returns [EObject current=null] : iv_ruleJsonValue= ruleJsonValue EOF ;
    public final EObject entryRuleJsonValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonValue = null;


        try {
            // InternalSCL.g:12002:50: (iv_ruleJsonValue= ruleJsonValue EOF )
            // InternalSCL.g:12003:2: iv_ruleJsonValue= ruleJsonValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonValue=ruleJsonValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonValue"


    // $ANTLR start "ruleJsonValue"
    // InternalSCL.g:12009:1: ruleJsonValue returns [EObject current=null] : (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue ) ;
    public final EObject ruleJsonValue() throws RecognitionException {
        EObject current = null;

        EObject this_JsonObjectValue_0 = null;

        EObject this_JsonArrayValue_1 = null;

        EObject this_NullValue_2 = null;

        EObject this_AnyValue_3 = null;



        	enterRule();

        try {
            // InternalSCL.g:12015:2: ( (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue ) )
            // InternalSCL.g:12016:2: (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue )
            {
            // InternalSCL.g:12016:2: (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue )
            int alt309=4;
            switch ( input.LA(1) ) {
            case 25:
                {
                alt309=1;
                }
                break;
            case 41:
                {
                alt309=2;
                }
                break;
            case 74:
                {
                alt309=3;
                }
                break;
            case RULE_STRING:
            case RULE_INT:
            case RULE_FLOAT:
            case RULE_BOOLEAN:
                {
                alt309=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 309, 0, input);

                throw nvae;
            }

            switch (alt309) {
                case 1 :
                    // InternalSCL.g:12017:3: this_JsonObjectValue_0= ruleJsonObjectValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getJsonObjectValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonObjectValue_0=ruleJsonObjectValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonObjectValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCL.g:12029:3: this_JsonArrayValue_1= ruleJsonArrayValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getJsonArrayValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonArrayValue_1=ruleJsonArrayValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonArrayValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCL.g:12041:3: this_NullValue_2= ruleNullValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getNullValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NullValue_2=ruleNullValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NullValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCL.g:12053:3: this_AnyValue_3= ruleAnyValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getAnyValueParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AnyValue_3=ruleAnyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AnyValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonValue"


    // $ANTLR start "entryRuleNullValue"
    // InternalSCL.g:12068:1: entryRuleNullValue returns [EObject current=null] : iv_ruleNullValue= ruleNullValue EOF ;
    public final EObject entryRuleNullValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNullValue = null;


        try {
            // InternalSCL.g:12068:50: (iv_ruleNullValue= ruleNullValue EOF )
            // InternalSCL.g:12069:2: iv_ruleNullValue= ruleNullValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNullValue=ruleNullValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNullValue"


    // $ANTLR start "ruleNullValue"
    // InternalSCL.g:12075:1: ruleNullValue returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
    public final EObject ruleNullValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalSCL.g:12081:2: ( ( () otherlv_1= 'null' ) )
            // InternalSCL.g:12082:2: ( () otherlv_1= 'null' )
            {
            // InternalSCL.g:12082:2: ( () otherlv_1= 'null' )
            // InternalSCL.g:12083:3: () otherlv_1= 'null'
            {
            // InternalSCL.g:12083:3: ()
            // InternalSCL.g:12084:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getNullValueAccess().getNullValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNullValueAccess().getNullKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNullValue"


    // $ANTLR start "entryRuleJsonPragma"
    // InternalSCL.g:12101:1: entryRuleJsonPragma returns [EObject current=null] : iv_ruleJsonPragma= ruleJsonPragma EOF ;
    public final EObject entryRuleJsonPragma() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonPragma = null;


        try {
            // InternalSCL.g:12101:51: (iv_ruleJsonPragma= ruleJsonPragma EOF )
            // InternalSCL.g:12102:2: iv_ruleJsonPragma= ruleJsonPragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonPragma=ruleJsonPragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonPragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonPragma"


    // $ANTLR start "ruleJsonPragma"
    // InternalSCL.g:12108:1: ruleJsonPragma returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) ;
    public final EObject ruleJsonPragma() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:12114:2: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) )
            // InternalSCL.g:12115:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            {
            // InternalSCL.g:12115:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            // InternalSCL.g:12116:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) )
            {
            otherlv_0=(Token)match(input,75,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJsonPragmaAccess().getNumberSignKeyword_0());
              		
            }
            // InternalSCL.g:12120:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCL.g:12121:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCL.g:12121:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCL.g:12122:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonPragmaAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_23);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonPragmaRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:12139:3: ( (lv_value_2_0= ruleJsonObjectValue ) )
            // InternalSCL.g:12140:4: (lv_value_2_0= ruleJsonObjectValue )
            {
            // InternalSCL.g:12140:4: (lv_value_2_0= ruleJsonObjectValue )
            // InternalSCL.g:12141:5: lv_value_2_0= ruleJsonObjectValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonPragmaAccess().getValueJsonObjectValueParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_value_2_0=ruleJsonObjectValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonPragmaRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonPragma"


    // $ANTLR start "entryRuleJsonAnnotation"
    // InternalSCL.g:12162:1: entryRuleJsonAnnotation returns [EObject current=null] : iv_ruleJsonAnnotation= ruleJsonAnnotation EOF ;
    public final EObject entryRuleJsonAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonAnnotation = null;


        try {
            // InternalSCL.g:12162:55: (iv_ruleJsonAnnotation= ruleJsonAnnotation EOF )
            // InternalSCL.g:12163:2: iv_ruleJsonAnnotation= ruleJsonAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonAnnotation=ruleJsonAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonAnnotation"


    // $ANTLR start "ruleJsonAnnotation"
    // InternalSCL.g:12169:1: ruleJsonAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) ;
    public final EObject ruleJsonAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:12175:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) )
            // InternalSCL.g:12176:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            {
            // InternalSCL.g:12176:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            // InternalSCL.g:12177:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) )
            {
            otherlv_0=(Token)match(input,76,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJsonAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCL.g:12181:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCL.g:12182:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCL.g:12182:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCL.g:12183:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_23);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:12200:3: ( (lv_value_2_0= ruleJsonObjectValue ) )
            // InternalSCL.g:12201:4: (lv_value_2_0= ruleJsonObjectValue )
            {
            // InternalSCL.g:12201:4: (lv_value_2_0= ruleJsonObjectValue )
            // InternalSCL.g:12202:5: lv_value_2_0= ruleJsonObjectValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonAnnotationAccess().getValueJsonObjectValueParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_value_2_0=ruleJsonObjectValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonAnnotationRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonAnnotation"


    // $ANTLR start "entryRulePragma"
    // InternalSCL.g:12223:1: entryRulePragma returns [EObject current=null] : iv_rulePragma= rulePragma EOF ;
    public final EObject entryRulePragma() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePragma = null;


        try {
            // InternalSCL.g:12223:47: (iv_rulePragma= rulePragma EOF )
            // InternalSCL.g:12224:2: iv_rulePragma= rulePragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePragma=rulePragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePragma"


    // $ANTLR start "rulePragma"
    // InternalSCL.g:12230:1: rulePragma returns [EObject current=null] : (this_Pragma_0= superPragma | this_JsonPragma_1= ruleJsonPragma ) ;
    public final EObject rulePragma() throws RecognitionException {
        EObject current = null;

        EObject this_Pragma_0 = null;

        EObject this_JsonPragma_1 = null;



        	enterRule();

        try {
            // InternalSCL.g:12236:2: ( (this_Pragma_0= superPragma | this_JsonPragma_1= ruleJsonPragma ) )
            // InternalSCL.g:12237:2: (this_Pragma_0= superPragma | this_JsonPragma_1= ruleJsonPragma )
            {
            // InternalSCL.g:12237:2: (this_Pragma_0= superPragma | this_JsonPragma_1= ruleJsonPragma )
            int alt310=2;
            alt310 = dfa310.predict(input);
            switch (alt310) {
                case 1 :
                    // InternalSCL.g:12238:3: this_Pragma_0= superPragma
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPragmaAccess().getPragmaParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Pragma_0=superPragma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Pragma_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCL.g:12250:3: this_JsonPragma_1= ruleJsonPragma
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPragmaAccess().getJsonPragmaParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonPragma_1=ruleJsonPragma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonPragma_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePragma"


    // $ANTLR start "entryRuleAnnotation"
    // InternalSCL.g:12265:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            // InternalSCL.g:12265:51: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalSCL.g:12266:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalSCL.g:12272:1: ruleAnnotation returns [EObject current=null] : (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_Annotation_0 = null;

        EObject this_JsonAnnotation_1 = null;



        	enterRule();

        try {
            // InternalSCL.g:12278:2: ( (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) )
            // InternalSCL.g:12279:2: (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            {
            // InternalSCL.g:12279:2: (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            int alt311=2;
            alt311 = dfa311.predict(input);
            switch (alt311) {
                case 1 :
                    // InternalSCL.g:12280:3: this_Annotation_0= superAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationAccess().getAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Annotation_0=superAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Annotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCL.g:12292:3: this_JsonAnnotation_1= ruleJsonAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationAccess().getJsonAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonAnnotation_1=ruleJsonAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRuleQuotedStringAnnotation"
    // InternalSCL.g:12307:1: entryRuleQuotedStringAnnotation returns [EObject current=null] : iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF ;
    public final EObject entryRuleQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedStringAnnotation = null;


        try {
            // InternalSCL.g:12307:63: (iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF )
            // InternalSCL.g:12308:2: iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedStringAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedStringAnnotation=ruleQuotedStringAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedStringAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedStringAnnotation"


    // $ANTLR start "ruleQuotedStringAnnotation"
    // InternalSCL.g:12314:1: ruleQuotedStringAnnotation returns [EObject current=null] : (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) ;
    public final EObject ruleQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_QuotedStringAnnotation_0 = null;

        EObject this_JsonAnnotation_1 = null;



        	enterRule();

        try {
            // InternalSCL.g:12320:2: ( (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) )
            // InternalSCL.g:12321:2: (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            {
            // InternalSCL.g:12321:2: (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            int alt312=2;
            alt312 = dfa312.predict(input);
            switch (alt312) {
                case 1 :
                    // InternalSCL.g:12322:3: this_QuotedStringAnnotation_0= superQuotedStringAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getQuotedStringAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedStringAnnotation_0=superQuotedStringAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_QuotedStringAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCL.g:12334:3: this_JsonAnnotation_1= ruleJsonAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getJsonAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonAnnotation_1=ruleJsonAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedStringAnnotation"


    // $ANTLR start "entrySuperAnnotation"
    // InternalSCL.g:12349:1: entrySuperAnnotation returns [EObject current=null] : iv_superAnnotation= superAnnotation EOF ;
    public final EObject entrySuperAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_superAnnotation = null;


        try {
            // InternalSCL.g:12349:52: (iv_superAnnotation= superAnnotation EOF )
            // InternalSCL.g:12350:2: iv_superAnnotation= superAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationsAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superAnnotation=superAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperAnnotation"


    // $ANTLR start "superAnnotation"
    // InternalSCL.g:12356:1: superAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
    public final EObject superAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_KeyStringValueAnnotation_1 = null;

        EObject this_TypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;



        	enterRule();

        try {
            // InternalSCL.g:12362:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalSCL.g:12363:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalSCL.g:12363:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt313=4;
            alt313 = dfa313.predict(input);
            switch (alt313) {
                case 1 :
                    // InternalSCL.g:12364:3: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getCommentAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CommentAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCL.g:12376:3: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_KeyStringValueAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCL.g:12388:3: this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypedKeyStringValueAnnotation_2=ruleTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypedKeyStringValueAnnotation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCL.g:12400:3: this_TagAnnotation_3= ruleTagAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getTagAnnotationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TagAnnotation_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superAnnotation"


    // $ANTLR start "entrySuperPragma"
    // InternalSCL.g:12415:1: entrySuperPragma returns [EObject current=null] : iv_superPragma= superPragma EOF ;
    public final EObject entrySuperPragma() throws RecognitionException {
        EObject current = null;

        EObject iv_superPragma = null;


        try {
            // InternalSCL.g:12415:48: (iv_superPragma= superPragma EOF )
            // InternalSCL.g:12416:2: iv_superPragma= superPragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationsPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superPragma=superPragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superPragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperPragma"


    // $ANTLR start "superPragma"
    // InternalSCL.g:12422:1: superPragma returns [EObject current=null] : (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag ) ;
    public final EObject superPragma() throws RecognitionException {
        EObject current = null;

        EObject this_StringPragma_0 = null;

        EObject this_PragmaTag_1 = null;



        	enterRule();

        try {
            // InternalSCL.g:12428:2: ( (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag ) )
            // InternalSCL.g:12429:2: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )
            {
            // InternalSCL.g:12429:2: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )
            int alt314=2;
            alt314 = dfa314.predict(input);
            switch (alt314) {
                case 1 :
                    // InternalSCL.g:12430:3: this_StringPragma_0= ruleStringPragma
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsPragmaAccess().getStringPragmaParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringPragma_0=ruleStringPragma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringPragma_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCL.g:12442:3: this_PragmaTag_1= rulePragmaTag
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsPragmaAccess().getPragmaTagParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PragmaTag_1=rulePragmaTag();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PragmaTag_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superPragma"


    // $ANTLR start "entrySuperValuedAnnotation"
    // InternalSCL.g:12457:1: entrySuperValuedAnnotation returns [EObject current=null] : iv_superValuedAnnotation= superValuedAnnotation EOF ;
    public final EObject entrySuperValuedAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_superValuedAnnotation = null;


        try {
            // InternalSCL.g:12457:58: (iv_superValuedAnnotation= superValuedAnnotation EOF )
            // InternalSCL.g:12458:2: iv_superValuedAnnotation= superValuedAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superValuedAnnotation=superValuedAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superValuedAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperValuedAnnotation"


    // $ANTLR start "superValuedAnnotation"
    // InternalSCL.g:12464:1: superValuedAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation ) ;
    public final EObject superValuedAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_KeyStringValueAnnotation_1 = null;

        EObject this_TypedKeyStringValueAnnotation_2 = null;



        	enterRule();

        try {
            // InternalSCL.g:12470:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation ) )
            // InternalSCL.g:12471:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation )
            {
            // InternalSCL.g:12471:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation )
            int alt315=3;
            alt315 = dfa315.predict(input);
            switch (alt315) {
                case 1 :
                    // InternalSCL.g:12472:3: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationAccess().getCommentAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CommentAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCL.g:12484:3: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_KeyStringValueAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCL.g:12496:3: this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypedKeyStringValueAnnotation_2=ruleTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypedKeyStringValueAnnotation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superValuedAnnotation"


    // $ANTLR start "entrySuperQuotedStringAnnotation"
    // InternalSCL.g:12511:1: entrySuperQuotedStringAnnotation returns [EObject current=null] : iv_superQuotedStringAnnotation= superQuotedStringAnnotation EOF ;
    public final EObject entrySuperQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_superQuotedStringAnnotation = null;


        try {
            // InternalSCL.g:12511:64: (iv_superQuotedStringAnnotation= superQuotedStringAnnotation EOF )
            // InternalSCL.g:12512:2: iv_superQuotedStringAnnotation= superQuotedStringAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superQuotedStringAnnotation=superQuotedStringAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superQuotedStringAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperQuotedStringAnnotation"


    // $ANTLR start "superQuotedStringAnnotation"
    // InternalSCL.g:12518:1: superQuotedStringAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
    public final EObject superQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_QuotedKeyStringValueAnnotation_1 = null;

        EObject this_QuotedTypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;



        	enterRule();

        try {
            // InternalSCL.g:12524:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalSCL.g:12525:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalSCL.g:12525:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt316=4;
            alt316 = dfa316.predict(input);
            switch (alt316) {
                case 1 :
                    // InternalSCL.g:12526:3: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getCommentAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CommentAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCL.g:12538:3: this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getQuotedKeyStringValueAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedKeyStringValueAnnotation_1=ruleQuotedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_QuotedKeyStringValueAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCL.g:12550:3: this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getQuotedTypedKeyStringValueAnnotationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedTypedKeyStringValueAnnotation_2=ruleQuotedTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_QuotedTypedKeyStringValueAnnotation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCL.g:12562:3: this_TagAnnotation_3= ruleTagAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getTagAnnotationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TagAnnotation_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superQuotedStringAnnotation"


    // $ANTLR start "entryRuleCommentAnnotation"
    // InternalSCL.g:12577:1: entryRuleCommentAnnotation returns [EObject current=null] : iv_ruleCommentAnnotation= ruleCommentAnnotation EOF ;
    public final EObject entryRuleCommentAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommentAnnotation = null;


        try {
            // InternalSCL.g:12577:58: (iv_ruleCommentAnnotation= ruleCommentAnnotation EOF )
            // InternalSCL.g:12578:2: iv_ruleCommentAnnotation= ruleCommentAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCommentAnnotation=ruleCommentAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommentAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommentAnnotation"


    // $ANTLR start "ruleCommentAnnotation"
    // InternalSCL.g:12584:1: ruleCommentAnnotation returns [EObject current=null] : ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) ) ;
    public final EObject ruleCommentAnnotation() throws RecognitionException {
        EObject current = null;

        Token lv_values_0_0=null;


        	enterRule();

        try {
            // InternalSCL.g:12590:2: ( ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) ) )
            // InternalSCL.g:12591:2: ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) )
            {
            // InternalSCL.g:12591:2: ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) )
            // InternalSCL.g:12592:3: (lv_values_0_0= RULE_COMMENT_ANNOTATION )
            {
            // InternalSCL.g:12592:3: (lv_values_0_0= RULE_COMMENT_ANNOTATION )
            // InternalSCL.g:12593:4: lv_values_0_0= RULE_COMMENT_ANNOTATION
            {
            lv_values_0_0=(Token)match(input,RULE_COMMENT_ANNOTATION,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_values_0_0, grammarAccess.getCommentAnnotationAccess().getValuesCOMMENT_ANNOTATIONTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getCommentAnnotationRule());
              				}
              				addWithLastConsumed(
              					current,
              					"values",
              					lv_values_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.COMMENT_ANNOTATION");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommentAnnotation"


    // $ANTLR start "entryRuleCommentAnnotatonSL"
    // InternalSCL.g:12612:1: entryRuleCommentAnnotatonSL returns [EObject current=null] : iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF ;
    public final EObject entryRuleCommentAnnotatonSL() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommentAnnotatonSL = null;


        try {
            // InternalSCL.g:12612:59: (iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF )
            // InternalSCL.g:12613:2: iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentAnnotatonSLRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCommentAnnotatonSL=ruleCommentAnnotatonSL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommentAnnotatonSL; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommentAnnotatonSL"


    // $ANTLR start "ruleCommentAnnotatonSL"
    // InternalSCL.g:12619:1: ruleCommentAnnotatonSL returns [EObject current=null] : ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) ) ;
    public final EObject ruleCommentAnnotatonSL() throws RecognitionException {
        EObject current = null;

        Token lv_values_0_0=null;


        	enterRule();

        try {
            // InternalSCL.g:12625:2: ( ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) ) )
            // InternalSCL.g:12626:2: ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) )
            {
            // InternalSCL.g:12626:2: ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) )
            // InternalSCL.g:12627:3: (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION )
            {
            // InternalSCL.g:12627:3: (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION )
            // InternalSCL.g:12628:4: lv_values_0_0= RULE_SL_COMMENT_ANNOTATION
            {
            lv_values_0_0=(Token)match(input,RULE_SL_COMMENT_ANNOTATION,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_values_0_0, grammarAccess.getCommentAnnotatonSLAccess().getValuesSL_COMMENT_ANNOTATIONTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getCommentAnnotatonSLRule());
              				}
              				addWithLastConsumed(
              					current,
              					"values",
              					lv_values_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.SL_COMMENT_ANNOTATION");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommentAnnotatonSL"


    // $ANTLR start "entryRuleTagAnnotation"
    // InternalSCL.g:12647:1: entryRuleTagAnnotation returns [EObject current=null] : iv_ruleTagAnnotation= ruleTagAnnotation EOF ;
    public final EObject entryRuleTagAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTagAnnotation = null;


        try {
            // InternalSCL.g:12647:54: (iv_ruleTagAnnotation= ruleTagAnnotation EOF )
            // InternalSCL.g:12648:2: iv_ruleTagAnnotation= ruleTagAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTagAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTagAnnotation=ruleTagAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTagAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTagAnnotation"


    // $ANTLR start "ruleTagAnnotation"
    // InternalSCL.g:12654:1: ruleTagAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ) ;
    public final EObject ruleTagAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:12660:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ) )
            // InternalSCL.g:12661:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) )
            {
            // InternalSCL.g:12661:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) )
            // InternalSCL.g:12662:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) )
            {
            otherlv_0=(Token)match(input,76,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTagAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCL.g:12666:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCL.g:12667:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCL.g:12667:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCL.g:12668:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTagAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTagAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTagAnnotation"


    // $ANTLR start "entryRulePragmaTag"
    // InternalSCL.g:12689:1: entryRulePragmaTag returns [EObject current=null] : iv_rulePragmaTag= rulePragmaTag EOF ;
    public final EObject entryRulePragmaTag() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePragmaTag = null;


        try {
            // InternalSCL.g:12689:50: (iv_rulePragmaTag= rulePragmaTag EOF )
            // InternalSCL.g:12690:2: iv_rulePragmaTag= rulePragmaTag EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPragmaTagRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePragmaTag=rulePragmaTag();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePragmaTag; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePragmaTag"


    // $ANTLR start "rulePragmaTag"
    // InternalSCL.g:12696:1: rulePragmaTag returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ) ;
    public final EObject rulePragmaTag() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:12702:2: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ) )
            // InternalSCL.g:12703:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) )
            {
            // InternalSCL.g:12703:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) )
            // InternalSCL.g:12704:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) )
            {
            otherlv_0=(Token)match(input,75,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPragmaTagAccess().getNumberSignKeyword_0());
              		
            }
            // InternalSCL.g:12708:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCL.g:12709:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCL.g:12709:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCL.g:12710:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPragmaTagAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPragmaTagRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePragmaTag"


    // $ANTLR start "entryRuleKeyStringValueAnnotation"
    // InternalSCL.g:12731:1: entryRuleKeyStringValueAnnotation returns [EObject current=null] : iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF ;
    public final EObject entryRuleKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyStringValueAnnotation = null;


        try {
            // InternalSCL.g:12731:65: (iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF )
            // InternalSCL.g:12732:2: iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleKeyStringValueAnnotation=ruleKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyStringValueAnnotation"


    // $ANTLR start "ruleKeyStringValueAnnotation"
    // InternalSCL.g:12738:1: ruleKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:12744:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) )
            // InternalSCL.g:12745:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalSCL.g:12745:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            // InternalSCL.g:12746:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,76,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCL.g:12750:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCL.g:12751:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCL.g:12751:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCL.g:12752:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_130);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:12769:3: ( (lv_values_2_0= ruleEStringAllTypes ) )
            // InternalSCL.g:12770:4: (lv_values_2_0= ruleEStringAllTypes )
            {
            // InternalSCL.g:12770:4: (lv_values_2_0= ruleEStringAllTypes )
            // InternalSCL.g:12771:5: lv_values_2_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_131);
            lv_values_2_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:12788:3: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            loop317:
            do {
                int alt317=2;
                int LA317_0 = input.LA(1);

                if ( (LA317_0==35) ) {
                    alt317=1;
                }


                switch (alt317) {
            	case 1 :
            	    // InternalSCL.g:12789:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_3=(Token)match(input,35,FollowSets000.FOLLOW_130); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCL.g:12793:4: ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    // InternalSCL.g:12794:5: (lv_values_4_0= ruleEStringAllTypes )
            	    {
            	    // InternalSCL.g:12794:5: (lv_values_4_0= ruleEStringAllTypes )
            	    // InternalSCL.g:12795:6: lv_values_4_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_131);
            	    lv_values_4_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop317;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyStringValueAnnotation"


    // $ANTLR start "entryRuleRestrictedKeyStringValueAnnotation"
    // InternalSCL.g:12817:1: entryRuleRestrictedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleRestrictedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedKeyStringValueAnnotation = null;


        try {
            // InternalSCL.g:12817:75: (iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF )
            // InternalSCL.g:12818:2: iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedKeyStringValueAnnotation=ruleRestrictedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedKeyStringValueAnnotation"


    // $ANTLR start "ruleRestrictedKeyStringValueAnnotation"
    // InternalSCL.g:12824:1: ruleRestrictedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* ) ;
    public final EObject ruleRestrictedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:12830:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* ) )
            // InternalSCL.g:12831:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* )
            {
            // InternalSCL.g:12831:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* )
            // InternalSCL.g:12832:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )*
            {
            otherlv_0=(Token)match(input,76,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCL.g:12836:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCL.g:12837:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCL.g:12837:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCL.g:12838:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_132);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:12855:3: ( (lv_values_2_0= ruleEStringBoolean ) )
            // InternalSCL.g:12856:4: (lv_values_2_0= ruleEStringBoolean )
            {
            // InternalSCL.g:12856:4: (lv_values_2_0= ruleEStringBoolean )
            // InternalSCL.g:12857:5: lv_values_2_0= ruleEStringBoolean
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_131);
            lv_values_2_0=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:12874:3: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )*
            loop318:
            do {
                int alt318=2;
                int LA318_0 = input.LA(1);

                if ( (LA318_0==35) ) {
                    alt318=1;
                }


                switch (alt318) {
            	case 1 :
            	    // InternalSCL.g:12875:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) )
            	    {
            	    otherlv_3=(Token)match(input,35,FollowSets000.FOLLOW_132); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCL.g:12879:4: ( (lv_values_4_0= ruleEStringBoolean ) )
            	    // InternalSCL.g:12880:5: (lv_values_4_0= ruleEStringBoolean )
            	    {
            	    // InternalSCL.g:12880:5: (lv_values_4_0= ruleEStringBoolean )
            	    // InternalSCL.g:12881:6: lv_values_4_0= ruleEStringBoolean
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_131);
            	    lv_values_4_0=ruleEStringBoolean();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop318;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleStringPragma"
    // InternalSCL.g:12903:1: entryRuleStringPragma returns [EObject current=null] : iv_ruleStringPragma= ruleStringPragma EOF ;
    public final EObject entryRuleStringPragma() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringPragma = null;


        try {
            // InternalSCL.g:12903:53: (iv_ruleStringPragma= ruleStringPragma EOF )
            // InternalSCL.g:12904:2: iv_ruleStringPragma= ruleStringPragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringPragma=ruleStringPragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringPragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringPragma"


    // $ANTLR start "ruleStringPragma"
    // InternalSCL.g:12910:1: ruleStringPragma returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleStringPragma() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:12916:2: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) )
            // InternalSCL.g:12917:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalSCL.g:12917:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            // InternalSCL.g:12918:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,75,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getStringPragmaAccess().getNumberSignKeyword_0());
              		
            }
            // InternalSCL.g:12922:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCL.g:12923:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCL.g:12923:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCL.g:12924:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStringPragmaAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_130);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStringPragmaRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:12941:3: ( (lv_values_2_0= ruleEStringAllTypes ) )
            // InternalSCL.g:12942:4: (lv_values_2_0= ruleEStringAllTypes )
            {
            // InternalSCL.g:12942:4: (lv_values_2_0= ruleEStringAllTypes )
            // InternalSCL.g:12943:5: lv_values_2_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_131);
            lv_values_2_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStringPragmaRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:12960:3: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            loop319:
            do {
                int alt319=2;
                int LA319_0 = input.LA(1);

                if ( (LA319_0==35) ) {
                    alt319=1;
                }


                switch (alt319) {
            	case 1 :
            	    // InternalSCL.g:12961:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_3=(Token)match(input,35,FollowSets000.FOLLOW_130); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getStringPragmaAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCL.g:12965:4: ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    // InternalSCL.g:12966:5: (lv_values_4_0= ruleEStringAllTypes )
            	    {
            	    // InternalSCL.g:12966:5: (lv_values_4_0= ruleEStringAllTypes )
            	    // InternalSCL.g:12967:6: lv_values_4_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_131);
            	    lv_values_4_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getStringPragmaRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop319;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringPragma"


    // $ANTLR start "entryRuleTypedKeyStringValueAnnotation"
    // InternalSCL.g:12989:1: entryRuleTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedKeyStringValueAnnotation = null;


        try {
            // InternalSCL.g:12989:70: (iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF )
            // InternalSCL.g:12990:2: iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypedKeyStringValueAnnotation=ruleTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleTypedKeyStringValueAnnotation"
    // InternalSCL.g:12996:1: ruleTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_values_5_0 = null;

        AntlrDatatypeRuleToken lv_values_7_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:13002:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* ) )
            // InternalSCL.g:13003:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalSCL.g:13003:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* )
            // InternalSCL.g:13004:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,76,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCL.g:13008:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCL.g:13009:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCL.g:13009:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCL.g:13010:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_133);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,41,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalSCL.g:13031:3: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalSCL.g:13032:4: (lv_type_3_0= ruleExtendedID )
            {
            // InternalSCL.g:13032:4: (lv_type_3_0= ruleExtendedID )
            // InternalSCL.g:13033:5: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_41);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,42,FollowSets000.FOLLOW_130); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
              		
            }
            // InternalSCL.g:13054:3: ( (lv_values_5_0= ruleEStringAllTypes ) )
            // InternalSCL.g:13055:4: (lv_values_5_0= ruleEStringAllTypes )
            {
            // InternalSCL.g:13055:4: (lv_values_5_0= ruleEStringAllTypes )
            // InternalSCL.g:13056:5: lv_values_5_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_131);
            lv_values_5_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_5_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:13073:3: (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )*
            loop320:
            do {
                int alt320=2;
                int LA320_0 = input.LA(1);

                if ( (LA320_0==35) ) {
                    alt320=1;
                }


                switch (alt320) {
            	case 1 :
            	    // InternalSCL.g:13074:4: otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_6=(Token)match(input,35,FollowSets000.FOLLOW_130); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	      			
            	    }
            	    // InternalSCL.g:13078:4: ( (lv_values_7_0= ruleEStringAllTypes ) )
            	    // InternalSCL.g:13079:5: (lv_values_7_0= ruleEStringAllTypes )
            	    {
            	    // InternalSCL.g:13079:5: (lv_values_7_0= ruleEStringAllTypes )
            	    // InternalSCL.g:13080:6: lv_values_7_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_6_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_131);
            	    lv_values_7_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_7_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop320;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleRestrictedTypedKeyStringValueAnnotation"
    // InternalSCL.g:13102:1: entryRuleRestrictedTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleRestrictedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedTypedKeyStringValueAnnotation = null;


        try {
            // InternalSCL.g:13102:80: (iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF )
            // InternalSCL.g:13103:2: iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedTypedKeyStringValueAnnotation=ruleRestrictedTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleRestrictedTypedKeyStringValueAnnotation"
    // InternalSCL.g:13109:1: ruleRestrictedTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* ) ;
    public final EObject ruleRestrictedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_values_5_0 = null;

        AntlrDatatypeRuleToken lv_values_7_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:13115:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* ) )
            // InternalSCL.g:13116:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* )
            {
            // InternalSCL.g:13116:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* )
            // InternalSCL.g:13117:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )*
            {
            otherlv_0=(Token)match(input,76,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCL.g:13121:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCL.g:13122:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCL.g:13122:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCL.g:13123:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_133);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,41,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalSCL.g:13144:3: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalSCL.g:13145:4: (lv_type_3_0= ruleExtendedID )
            {
            // InternalSCL.g:13145:4: (lv_type_3_0= ruleExtendedID )
            // InternalSCL.g:13146:5: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_41);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,42,FollowSets000.FOLLOW_132); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
              		
            }
            // InternalSCL.g:13167:3: ( (lv_values_5_0= ruleEStringBoolean ) )
            // InternalSCL.g:13168:4: (lv_values_5_0= ruleEStringBoolean )
            {
            // InternalSCL.g:13168:4: (lv_values_5_0= ruleEStringBoolean )
            // InternalSCL.g:13169:5: lv_values_5_0= ruleEStringBoolean
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_131);
            lv_values_5_0=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_5_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:13186:3: (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )*
            loop321:
            do {
                int alt321=2;
                int LA321_0 = input.LA(1);

                if ( (LA321_0==35) ) {
                    alt321=1;
                }


                switch (alt321) {
            	case 1 :
            	    // InternalSCL.g:13187:4: otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) )
            	    {
            	    otherlv_6=(Token)match(input,35,FollowSets000.FOLLOW_132); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	      			
            	    }
            	    // InternalSCL.g:13191:4: ( (lv_values_7_0= ruleEStringBoolean ) )
            	    // InternalSCL.g:13192:5: (lv_values_7_0= ruleEStringBoolean )
            	    {
            	    // InternalSCL.g:13192:5: (lv_values_7_0= ruleEStringBoolean )
            	    // InternalSCL.g:13193:6: lv_values_7_0= ruleEStringBoolean
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_6_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_131);
            	    lv_values_7_0=ruleEStringBoolean();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_7_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop321;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleQuotedKeyStringValueAnnotation"
    // InternalSCL.g:13215:1: entryRuleQuotedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleQuotedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedKeyStringValueAnnotation = null;


        try {
            // InternalSCL.g:13215:71: (iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF )
            // InternalSCL.g:13216:2: iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedKeyStringValueAnnotation=ruleQuotedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedKeyStringValueAnnotation"


    // $ANTLR start "ruleQuotedKeyStringValueAnnotation"
    // InternalSCL.g:13222:1: ruleQuotedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* ) ;
    public final EObject ruleQuotedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_values_2_0=null;
        Token otherlv_3=null;
        Token lv_values_4_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:13228:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* ) )
            // InternalSCL.g:13229:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* )
            {
            // InternalSCL.g:13229:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* )
            // InternalSCL.g:13230:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )*
            {
            otherlv_0=(Token)match(input,76,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCL.g:13234:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCL.g:13235:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCL.g:13235:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCL.g:13236:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_60);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuotedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalSCL.g:13253:3: ( (lv_values_2_0= RULE_STRING ) )
            // InternalSCL.g:13254:4: (lv_values_2_0= RULE_STRING )
            {
            // InternalSCL.g:13254:4: (lv_values_2_0= RULE_STRING )
            // InternalSCL.g:13255:5: lv_values_2_0= RULE_STRING
            {
            lv_values_2_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_131); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_values_2_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getQuotedKeyStringValueAnnotationRule());
              					}
              					addWithLastConsumed(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }

            // InternalSCL.g:13271:3: (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )*
            loop322:
            do {
                int alt322=2;
                int LA322_0 = input.LA(1);

                if ( (LA322_0==35) ) {
                    alt322=1;
                }


                switch (alt322) {
            	case 1 :
            	    // InternalSCL.g:13272:4: otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) )
            	    {
            	    otherlv_3=(Token)match(input,35,FollowSets000.FOLLOW_60); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalSCL.g:13276:4: ( (lv_values_4_0= RULE_STRING ) )
            	    // InternalSCL.g:13277:5: (lv_values_4_0= RULE_STRING )
            	    {
            	    // InternalSCL.g:13277:5: (lv_values_4_0= RULE_STRING )
            	    // InternalSCL.g:13278:6: lv_values_4_0= RULE_STRING
            	    {
            	    lv_values_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_131); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_values_4_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_3_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getQuotedKeyStringValueAnnotationRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.STRING");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop322;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleQuotedTypedKeyStringValueAnnotation"
    // InternalSCL.g:13299:1: entryRuleQuotedTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleQuotedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedTypedKeyStringValueAnnotation = null;


        try {
            // InternalSCL.g:13299:76: (iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF )
            // InternalSCL.g:13300:2: iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedTypedKeyStringValueAnnotation=ruleQuotedTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleQuotedTypedKeyStringValueAnnotation"
    // InternalSCL.g:13306:1: ruleQuotedTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* ) ;
    public final EObject ruleQuotedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_values_5_0=null;
        Token otherlv_6=null;
        Token lv_values_7_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;



        	enterRule();

        try {
            // InternalSCL.g:13312:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* ) )
            // InternalSCL.g:13313:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* )
            {
            // InternalSCL.g:13313:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* )
            // InternalSCL.g:13314:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )*
            {
            otherlv_0=(Token)match(input,76,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalSCL.g:13318:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalSCL.g:13319:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalSCL.g:13319:4: (lv_name_1_0= ruleExtendedID )
            // InternalSCL.g:13320:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_133);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,41,FollowSets000.FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalSCL.g:13341:3: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalSCL.g:13342:4: (lv_type_3_0= ruleExtendedID )
            {
            // InternalSCL.g:13342:4: (lv_type_3_0= ruleExtendedID )
            // InternalSCL.g:13343:5: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_41);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,42,FollowSets000.FOLLOW_60); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
              		
            }
            // InternalSCL.g:13364:3: ( (lv_values_5_0= RULE_STRING ) )
            // InternalSCL.g:13365:4: (lv_values_5_0= RULE_STRING )
            {
            // InternalSCL.g:13365:4: (lv_values_5_0= RULE_STRING )
            // InternalSCL.g:13366:5: lv_values_5_0= RULE_STRING
            {
            lv_values_5_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_131); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_values_5_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_5_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              					}
              					addWithLastConsumed(
              						current,
              						"values",
              						lv_values_5_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }

            // InternalSCL.g:13382:3: (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )*
            loop323:
            do {
                int alt323=2;
                int LA323_0 = input.LA(1);

                if ( (LA323_0==35) ) {
                    alt323=1;
                }


                switch (alt323) {
            	case 1 :
            	    // InternalSCL.g:13383:4: otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) )
            	    {
            	    otherlv_6=(Token)match(input,35,FollowSets000.FOLLOW_60); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	      			
            	    }
            	    // InternalSCL.g:13387:4: ( (lv_values_7_0= RULE_STRING ) )
            	    // InternalSCL.g:13388:5: (lv_values_7_0= RULE_STRING )
            	    {
            	    // InternalSCL.g:13388:5: (lv_values_7_0= RULE_STRING )
            	    // InternalSCL.g:13389:6: lv_values_7_0= RULE_STRING
            	    {
            	    lv_values_7_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_131); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_values_7_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_6_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"values",
            	      							lv_values_7_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.STRING");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop323;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleEStringBoolean"
    // InternalSCL.g:13410:1: entryRuleEStringBoolean returns [String current=null] : iv_ruleEStringBoolean= ruleEStringBoolean EOF ;
    public final String entryRuleEStringBoolean() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEStringBoolean = null;


        try {
            // InternalSCL.g:13410:54: (iv_ruleEStringBoolean= ruleEStringBoolean EOF )
            // InternalSCL.g:13411:2: iv_ruleEStringBoolean= ruleEStringBoolean EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringBooleanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEStringBoolean=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEStringBoolean.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEStringBoolean"


    // $ANTLR start "ruleEStringBoolean"
    // InternalSCL.g:13417:1: ruleEStringBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN ) ;
    public final AntlrDatatypeRuleToken ruleEStringBoolean() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_BOOLEAN_2=null;
        AntlrDatatypeRuleToken this_ExtendedID_1 = null;



        	enterRule();

        try {
            // InternalSCL.g:13423:2: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN ) )
            // InternalSCL.g:13424:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN )
            {
            // InternalSCL.g:13424:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN )
            int alt324=3;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt324=1;
                }
                break;
            case RULE_ID:
                {
                alt324=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt324=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 324, 0, input);

                throw nvae;
            }

            switch (alt324) {
                case 1 :
                    // InternalSCL.g:13425:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getEStringBooleanAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCL.g:13433:3: this_ExtendedID_1= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringBooleanAccess().getExtendedIDParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExtendedID_1=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ExtendedID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCL.g:13444:3: this_BOOLEAN_2= RULE_BOOLEAN
                    {
                    this_BOOLEAN_2=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_BOOLEAN_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_BOOLEAN_2, grammarAccess.getEStringBooleanAccess().getBOOLEANTerminalRuleCall_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEStringBoolean"


    // $ANTLR start "entryRuleEStringAllTypes"
    // InternalSCL.g:13455:1: entryRuleEStringAllTypes returns [String current=null] : iv_ruleEStringAllTypes= ruleEStringAllTypes EOF ;
    public final String entryRuleEStringAllTypes() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEStringAllTypes = null;


        try {
            // InternalSCL.g:13455:55: (iv_ruleEStringAllTypes= ruleEStringAllTypes EOF )
            // InternalSCL.g:13456:2: iv_ruleEStringAllTypes= ruleEStringAllTypes EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringAllTypesRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEStringAllTypes=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEStringAllTypes.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEStringAllTypes"


    // $ANTLR start "ruleEStringAllTypes"
    // InternalSCL.g:13462:1: ruleEStringAllTypes returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger ) ;
    public final AntlrDatatypeRuleToken ruleEStringAllTypes() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_BOOLEAN_2=null;
        AntlrDatatypeRuleToken this_ExtendedID_1 = null;

        AntlrDatatypeRuleToken this_Integer_3 = null;

        AntlrDatatypeRuleToken this_Floateger_4 = null;



        	enterRule();

        try {
            // InternalSCL.g:13468:2: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger ) )
            // InternalSCL.g:13469:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger )
            {
            // InternalSCL.g:13469:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger )
            int alt325=5;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt325=1;
                }
                break;
            case RULE_ID:
                {
                alt325=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt325=3;
                }
                break;
            case 67:
                {
                int LA325_4 = input.LA(2);

                if ( (LA325_4==RULE_INT) ) {
                    alt325=4;
                }
                else if ( (LA325_4==RULE_FLOAT) ) {
                    alt325=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 325, 4, input);

                    throw nvae;
                }
                }
                break;
            case RULE_INT:
                {
                alt325=4;
                }
                break;
            case RULE_FLOAT:
                {
                alt325=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 325, 0, input);

                throw nvae;
            }

            switch (alt325) {
                case 1 :
                    // InternalSCL.g:13470:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getEStringAllTypesAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalSCL.g:13478:3: this_ExtendedID_1= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAllTypesAccess().getExtendedIDParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExtendedID_1=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ExtendedID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalSCL.g:13489:3: this_BOOLEAN_2= RULE_BOOLEAN
                    {
                    this_BOOLEAN_2=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_BOOLEAN_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_BOOLEAN_2, grammarAccess.getEStringAllTypesAccess().getBOOLEANTerminalRuleCall_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalSCL.g:13497:3: this_Integer_3= ruleInteger
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAllTypesAccess().getIntegerParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Integer_3=ruleInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_Integer_3);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalSCL.g:13508:3: this_Floateger_4= ruleFloateger
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAllTypesAccess().getFloategerParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Floateger_4=ruleFloateger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_Floateger_4);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEStringAllTypes"


    // $ANTLR start "entryRuleExtendedID"
    // InternalSCL.g:13522:1: entryRuleExtendedID returns [String current=null] : iv_ruleExtendedID= ruleExtendedID EOF ;
    public final String entryRuleExtendedID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleExtendedID = null;


        try {
            // InternalSCL.g:13522:50: (iv_ruleExtendedID= ruleExtendedID EOF )
            // InternalSCL.g:13523:2: iv_ruleExtendedID= ruleExtendedID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendedIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExtendedID=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtendedID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtendedID"


    // $ANTLR start "ruleExtendedID"
    // InternalSCL.g:13529:1: ruleExtendedID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? ) ;
    public final AntlrDatatypeRuleToken ruleExtendedID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        Token this_ID_3=null;
        Token this_INT_5=null;


        	enterRule();

        try {
            // InternalSCL.g:13535:2: ( (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? ) )
            // InternalSCL.g:13536:2: (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? )
            {
            // InternalSCL.g:13536:2: (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? )
            // InternalSCL.g:13537:3: this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )?
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_134); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_ID_0, grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0());
              		
            }
            // InternalSCL.g:13544:3: ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )*
            loop327:
            do {
                int alt327=2;
                int LA327_0 = input.LA(1);

                if ( (LA327_0==67) ) {
                    int LA327_2 = input.LA(2);

                    if ( (LA327_2==RULE_ID) ) {
                        alt327=1;
                    }


                }
                else if ( (LA327_0==56) ) {
                    alt327=1;
                }


                switch (alt327) {
            	case 1 :
            	    // InternalSCL.g:13545:4: (kw= '.' | kw= '-' ) this_ID_3= RULE_ID
            	    {
            	    // InternalSCL.g:13545:4: (kw= '.' | kw= '-' )
            	    int alt326=2;
            	    int LA326_0 = input.LA(1);

            	    if ( (LA326_0==56) ) {
            	        alt326=1;
            	    }
            	    else if ( (LA326_0==67) ) {
            	        alt326=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 326, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt326) {
            	        case 1 :
            	            // InternalSCL.g:13546:5: kw= '.'
            	            {
            	            kw=(Token)match(input,56,FollowSets000.FOLLOW_6); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalSCL.g:13552:5: kw= '-'
            	            {
            	            kw=(Token)match(input,67,FollowSets000.FOLLOW_6); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getExtendedIDAccess().getHyphenMinusKeyword_1_0_1());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    this_ID_3=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_134); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_ID_3);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(this_ID_3, grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop327;
                }
            } while (true);

            // InternalSCL.g:13566:3: (kw= '#' this_INT_5= RULE_INT )?
            int alt328=2;
            int LA328_0 = input.LA(1);

            if ( (LA328_0==75) ) {
                int LA328_1 = input.LA(2);

                if ( (LA328_1==RULE_INT) ) {
                    alt328=1;
                }
            }
            switch (alt328) {
                case 1 :
                    // InternalSCL.g:13567:4: kw= '#' this_INT_5= RULE_INT
                    {
                    kw=(Token)match(input,75,FollowSets000.FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getExtendedIDAccess().getNumberSignKeyword_2_0());
                      			
                    }
                    this_INT_5=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_5);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_5, grammarAccess.getExtendedIDAccess().getINTTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtendedID"


    // $ANTLR start "entryRuleInteger"
    // InternalSCL.g:13584:1: entryRuleInteger returns [String current=null] : iv_ruleInteger= ruleInteger EOF ;
    public final String entryRuleInteger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInteger = null;


        try {
            // InternalSCL.g:13584:47: (iv_ruleInteger= ruleInteger EOF )
            // InternalSCL.g:13585:2: iv_ruleInteger= ruleInteger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInteger=ruleInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInteger.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInteger"


    // $ANTLR start "ruleInteger"
    // InternalSCL.g:13591:1: ruleInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_INT_1= RULE_INT ) ;
    public final AntlrDatatypeRuleToken ruleInteger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_1=null;


        	enterRule();

        try {
            // InternalSCL.g:13597:2: ( ( (kw= '-' )? this_INT_1= RULE_INT ) )
            // InternalSCL.g:13598:2: ( (kw= '-' )? this_INT_1= RULE_INT )
            {
            // InternalSCL.g:13598:2: ( (kw= '-' )? this_INT_1= RULE_INT )
            // InternalSCL.g:13599:3: (kw= '-' )? this_INT_1= RULE_INT
            {
            // InternalSCL.g:13599:3: (kw= '-' )?
            int alt329=2;
            int LA329_0 = input.LA(1);

            if ( (LA329_0==67) ) {
                alt329=1;
            }
            switch (alt329) {
                case 1 :
                    // InternalSCL.g:13600:4: kw= '-'
                    {
                    kw=(Token)match(input,67,FollowSets000.FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0());
                      			
                    }

                    }
                    break;

            }

            this_INT_1=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_1);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_INT_1, grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInteger"


    // $ANTLR start "entryRuleFloateger"
    // InternalSCL.g:13617:1: entryRuleFloateger returns [String current=null] : iv_ruleFloateger= ruleFloateger EOF ;
    public final String entryRuleFloateger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFloateger = null;


        try {
            // InternalSCL.g:13617:49: (iv_ruleFloateger= ruleFloateger EOF )
            // InternalSCL.g:13618:2: iv_ruleFloateger= ruleFloateger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFloategerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFloateger=ruleFloateger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFloateger.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFloateger"


    // $ANTLR start "ruleFloateger"
    // InternalSCL.g:13624:1: ruleFloateger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT ) ;
    public final AntlrDatatypeRuleToken ruleFloateger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_FLOAT_1=null;


        	enterRule();

        try {
            // InternalSCL.g:13630:2: ( ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT ) )
            // InternalSCL.g:13631:2: ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT )
            {
            // InternalSCL.g:13631:2: ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT )
            // InternalSCL.g:13632:3: (kw= '-' )? this_FLOAT_1= RULE_FLOAT
            {
            // InternalSCL.g:13632:3: (kw= '-' )?
            int alt330=2;
            int LA330_0 = input.LA(1);

            if ( (LA330_0==67) ) {
                alt330=1;
            }
            switch (alt330) {
                case 1 :
                    // InternalSCL.g:13633:4: kw= '-'
                    {
                    kw=(Token)match(input,67,FollowSets000.FOLLOW_135); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getFloategerAccess().getHyphenMinusKeyword_0());
                      			
                    }

                    }
                    break;

            }

            this_FLOAT_1=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_FLOAT_1);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_FLOAT_1, grammarAccess.getFloategerAccess().getFLOATTerminalRuleCall_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFloateger"


    // $ANTLR start "rulePriorityProtocol"
    // InternalSCL.g:13650:1: rulePriorityProtocol returns [Enumerator current=null] : ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) ) ;
    public final Enumerator rulePriorityProtocol() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalSCL.g:13656:2: ( ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) ) )
            // InternalSCL.g:13657:2: ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) )
            {
            // InternalSCL.g:13657:2: ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) )
            int alt331=2;
            int LA331_0 = input.LA(1);

            if ( (LA331_0==77) ) {
                alt331=1;
            }
            else if ( (LA331_0==78) ) {
                alt331=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 331, 0, input);

                throw nvae;
            }
            switch (alt331) {
                case 1 :
                    // InternalSCL.g:13658:3: (enumLiteral_0= 'conflicting' )
                    {
                    // InternalSCL.g:13658:3: (enumLiteral_0= 'conflicting' )
                    // InternalSCL.g:13659:4: enumLiteral_0= 'conflicting'
                    {
                    enumLiteral_0=(Token)match(input,77,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPriorityProtocolAccess().getCONFLICTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getPriorityProtocolAccess().getCONFLICTEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:13666:3: (enumLiteral_1= 'commuting' )
                    {
                    // InternalSCL.g:13666:3: (enumLiteral_1= 'commuting' )
                    // InternalSCL.g:13667:4: enumLiteral_1= 'commuting'
                    {
                    enumLiteral_1=(Token)match(input,78,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPriorityProtocolAccess().getCONFLUENTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getPriorityProtocolAccess().getCONFLUENTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePriorityProtocol"


    // $ANTLR start "ruleAssignOperator"
    // InternalSCL.g:13677:1: ruleAssignOperator returns [Enumerator current=null] : ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= '<<=' ) | (enumLiteral_10= '>>=' ) | (enumLiteral_11= '>>>=' ) | (enumLiteral_12= 'min=' ) | (enumLiteral_13= 'max=' ) ) ;
    public final Enumerator ruleAssignOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;
        Token enumLiteral_8=null;
        Token enumLiteral_9=null;
        Token enumLiteral_10=null;
        Token enumLiteral_11=null;
        Token enumLiteral_12=null;
        Token enumLiteral_13=null;


        	enterRule();

        try {
            // InternalSCL.g:13683:2: ( ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= '<<=' ) | (enumLiteral_10= '>>=' ) | (enumLiteral_11= '>>>=' ) | (enumLiteral_12= 'min=' ) | (enumLiteral_13= 'max=' ) ) )
            // InternalSCL.g:13684:2: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= '<<=' ) | (enumLiteral_10= '>>=' ) | (enumLiteral_11= '>>>=' ) | (enumLiteral_12= 'min=' ) | (enumLiteral_13= 'max=' ) )
            {
            // InternalSCL.g:13684:2: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '+=' ) | (enumLiteral_2= '-=' ) | (enumLiteral_3= '*=' ) | (enumLiteral_4= '/=' ) | (enumLiteral_5= '%=' ) | (enumLiteral_6= '&=' ) | (enumLiteral_7= '|=' ) | (enumLiteral_8= '^=' ) | (enumLiteral_9= '<<=' ) | (enumLiteral_10= '>>=' ) | (enumLiteral_11= '>>>=' ) | (enumLiteral_12= 'min=' ) | (enumLiteral_13= 'max=' ) )
            int alt332=14;
            switch ( input.LA(1) ) {
            case 54:
                {
                alt332=1;
                }
                break;
            case 79:
                {
                alt332=2;
                }
                break;
            case 80:
                {
                alt332=3;
                }
                break;
            case 81:
                {
                alt332=4;
                }
                break;
            case 82:
                {
                alt332=5;
                }
                break;
            case 83:
                {
                alt332=6;
                }
                break;
            case 84:
                {
                alt332=7;
                }
                break;
            case 85:
                {
                alt332=8;
                }
                break;
            case 86:
                {
                alt332=9;
                }
                break;
            case 87:
                {
                alt332=10;
                }
                break;
            case 88:
                {
                alt332=11;
                }
                break;
            case 89:
                {
                alt332=12;
                }
                break;
            case 90:
                {
                alt332=13;
                }
                break;
            case 91:
                {
                alt332=14;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 332, 0, input);

                throw nvae;
            }

            switch (alt332) {
                case 1 :
                    // InternalSCL.g:13685:3: (enumLiteral_0= '=' )
                    {
                    // InternalSCL.g:13685:3: (enumLiteral_0= '=' )
                    // InternalSCL.g:13686:4: enumLiteral_0= '='
                    {
                    enumLiteral_0=(Token)match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:13693:3: (enumLiteral_1= '+=' )
                    {
                    // InternalSCL.g:13693:3: (enumLiteral_1= '+=' )
                    // InternalSCL.g:13694:4: enumLiteral_1= '+='
                    {
                    enumLiteral_1=(Token)match(input,79,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNADDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getAssignOperatorAccess().getASSIGNADDEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCL.g:13701:3: (enumLiteral_2= '-=' )
                    {
                    // InternalSCL.g:13701:3: (enumLiteral_2= '-=' )
                    // InternalSCL.g:13702:4: enumLiteral_2= '-='
                    {
                    enumLiteral_2=(Token)match(input,80,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNSUBEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getAssignOperatorAccess().getASSIGNSUBEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCL.g:13709:3: (enumLiteral_3= '*=' )
                    {
                    // InternalSCL.g:13709:3: (enumLiteral_3= '*=' )
                    // InternalSCL.g:13710:4: enumLiteral_3= '*='
                    {
                    enumLiteral_3=(Token)match(input,81,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNMULEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getAssignOperatorAccess().getASSIGNMULEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCL.g:13717:3: (enumLiteral_4= '/=' )
                    {
                    // InternalSCL.g:13717:3: (enumLiteral_4= '/=' )
                    // InternalSCL.g:13718:4: enumLiteral_4= '/='
                    {
                    enumLiteral_4=(Token)match(input,82,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNDIVEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getAssignOperatorAccess().getASSIGNDIVEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCL.g:13725:3: (enumLiteral_5= '%=' )
                    {
                    // InternalSCL.g:13725:3: (enumLiteral_5= '%=' )
                    // InternalSCL.g:13726:4: enumLiteral_5= '%='
                    {
                    enumLiteral_5=(Token)match(input,83,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNMODEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getAssignOperatorAccess().getASSIGNMODEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSCL.g:13733:3: (enumLiteral_6= '&=' )
                    {
                    // InternalSCL.g:13733:3: (enumLiteral_6= '&=' )
                    // InternalSCL.g:13734:4: enumLiteral_6= '&='
                    {
                    enumLiteral_6=(Token)match(input,84,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNANDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getAssignOperatorAccess().getASSIGNANDEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSCL.g:13741:3: (enumLiteral_7= '|=' )
                    {
                    // InternalSCL.g:13741:3: (enumLiteral_7= '|=' )
                    // InternalSCL.g:13742:4: enumLiteral_7= '|='
                    {
                    enumLiteral_7=(Token)match(input,85,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNOREnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getAssignOperatorAccess().getASSIGNOREnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSCL.g:13749:3: (enumLiteral_8= '^=' )
                    {
                    // InternalSCL.g:13749:3: (enumLiteral_8= '^=' )
                    // InternalSCL.g:13750:4: enumLiteral_8= '^='
                    {
                    enumLiteral_8=(Token)match(input,86,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNXOREnumLiteralDeclaration_8().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_8, grammarAccess.getAssignOperatorAccess().getASSIGNXOREnumLiteralDeclaration_8());
                      			
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSCL.g:13757:3: (enumLiteral_9= '<<=' )
                    {
                    // InternalSCL.g:13757:3: (enumLiteral_9= '<<=' )
                    // InternalSCL.g:13758:4: enumLiteral_9= '<<='
                    {
                    enumLiteral_9=(Token)match(input,87,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTLEFTEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_9, grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTLEFTEnumLiteralDeclaration_9());
                      			
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSCL.g:13765:3: (enumLiteral_10= '>>=' )
                    {
                    // InternalSCL.g:13765:3: (enumLiteral_10= '>>=' )
                    // InternalSCL.g:13766:4: enumLiteral_10= '>>='
                    {
                    enumLiteral_10=(Token)match(input,88,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTRIGHTEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_10, grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTRIGHTEnumLiteralDeclaration_10());
                      			
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalSCL.g:13773:3: (enumLiteral_11= '>>>=' )
                    {
                    // InternalSCL.g:13773:3: (enumLiteral_11= '>>>=' )
                    // InternalSCL.g:13774:4: enumLiteral_11= '>>>='
                    {
                    enumLiteral_11=(Token)match(input,89,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTRIGHTUNSIGNEDEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_11, grammarAccess.getAssignOperatorAccess().getASSIGNSHIFTRIGHTUNSIGNEDEnumLiteralDeclaration_11());
                      			
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalSCL.g:13781:3: (enumLiteral_12= 'min=' )
                    {
                    // InternalSCL.g:13781:3: (enumLiteral_12= 'min=' )
                    // InternalSCL.g:13782:4: enumLiteral_12= 'min='
                    {
                    enumLiteral_12=(Token)match(input,90,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNMINEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_12, grammarAccess.getAssignOperatorAccess().getASSIGNMINEnumLiteralDeclaration_12());
                      			
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalSCL.g:13789:3: (enumLiteral_13= 'max=' )
                    {
                    // InternalSCL.g:13789:3: (enumLiteral_13= 'max=' )
                    // InternalSCL.g:13790:4: enumLiteral_13= 'max='
                    {
                    enumLiteral_13=(Token)match(input,91,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAssignOperatorAccess().getASSIGNMAXEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_13, grammarAccess.getAssignOperatorAccess().getASSIGNMAXEnumLiteralDeclaration_13());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignOperator"


    // $ANTLR start "rulePostfixOperator"
    // InternalSCL.g:13800:1: rulePostfixOperator returns [Enumerator current=null] : ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) ) ;
    public final Enumerator rulePostfixOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalSCL.g:13806:2: ( ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) ) )
            // InternalSCL.g:13807:2: ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) )
            {
            // InternalSCL.g:13807:2: ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) )
            int alt333=2;
            int LA333_0 = input.LA(1);

            if ( (LA333_0==92) ) {
                alt333=1;
            }
            else if ( (LA333_0==93) ) {
                alt333=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 333, 0, input);

                throw nvae;
            }
            switch (alt333) {
                case 1 :
                    // InternalSCL.g:13808:3: (enumLiteral_0= '++' )
                    {
                    // InternalSCL.g:13808:3: (enumLiteral_0= '++' )
                    // InternalSCL.g:13809:4: enumLiteral_0= '++'
                    {
                    enumLiteral_0=(Token)match(input,92,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:13816:3: (enumLiteral_1= '--' )
                    {
                    // InternalSCL.g:13816:3: (enumLiteral_1= '--' )
                    // InternalSCL.g:13817:4: enumLiteral_1= '--'
                    {
                    enumLiteral_1=(Token)match(input,93,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostfixOperator"


    // $ANTLR start "ruleCompareOperator"
    // InternalSCL.g:13827:1: ruleCompareOperator returns [Enumerator current=null] : ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) ) ;
    public final Enumerator ruleCompareOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;


        	enterRule();

        try {
            // InternalSCL.g:13833:2: ( ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) ) )
            // InternalSCL.g:13834:2: ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) )
            {
            // InternalSCL.g:13834:2: ( (enumLiteral_0= '==' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '!=' ) )
            int alt334=6;
            switch ( input.LA(1) ) {
            case 94:
                {
                alt334=1;
                }
                break;
            case 95:
                {
                alt334=2;
                }
                break;
            case 96:
                {
                alt334=3;
                }
                break;
            case 97:
                {
                alt334=4;
                }
                break;
            case 98:
                {
                alt334=5;
                }
                break;
            case 99:
                {
                alt334=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 334, 0, input);

                throw nvae;
            }

            switch (alt334) {
                case 1 :
                    // InternalSCL.g:13835:3: (enumLiteral_0= '==' )
                    {
                    // InternalSCL.g:13835:3: (enumLiteral_0= '==' )
                    // InternalSCL.g:13836:4: enumLiteral_0= '=='
                    {
                    enumLiteral_0=(Token)match(input,94,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:13843:3: (enumLiteral_1= '<' )
                    {
                    // InternalSCL.g:13843:3: (enumLiteral_1= '<' )
                    // InternalSCL.g:13844:4: enumLiteral_1= '<'
                    {
                    enumLiteral_1=(Token)match(input,95,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCL.g:13851:3: (enumLiteral_2= '<=' )
                    {
                    // InternalSCL.g:13851:3: (enumLiteral_2= '<=' )
                    // InternalSCL.g:13852:4: enumLiteral_2= '<='
                    {
                    enumLiteral_2=(Token)match(input,96,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCL.g:13859:3: (enumLiteral_3= '>' )
                    {
                    // InternalSCL.g:13859:3: (enumLiteral_3= '>' )
                    // InternalSCL.g:13860:4: enumLiteral_3= '>'
                    {
                    enumLiteral_3=(Token)match(input,97,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCL.g:13867:3: (enumLiteral_4= '>=' )
                    {
                    // InternalSCL.g:13867:3: (enumLiteral_4= '>=' )
                    // InternalSCL.g:13868:4: enumLiteral_4= '>='
                    {
                    enumLiteral_4=(Token)match(input,98,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCL.g:13875:3: (enumLiteral_5= '!=' )
                    {
                    // InternalSCL.g:13875:3: (enumLiteral_5= '!=' )
                    // InternalSCL.g:13876:4: enumLiteral_5= '!='
                    {
                    enumLiteral_5=(Token)match(input,99,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareOperator"


    // $ANTLR start "rulePreOperator"
    // InternalSCL.g:13886:1: rulePreOperator returns [Enumerator current=null] : (enumLiteral_0= 'pre' ) ;
    public final Enumerator rulePreOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCL.g:13892:2: ( (enumLiteral_0= 'pre' ) )
            // InternalSCL.g:13893:2: (enumLiteral_0= 'pre' )
            {
            // InternalSCL.g:13893:2: (enumLiteral_0= 'pre' )
            // InternalSCL.g:13894:3: enumLiteral_0= 'pre'
            {
            enumLiteral_0=(Token)match(input,100,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreOperator"


    // $ANTLR start "ruleBitwiseNotOperator"
    // InternalSCL.g:13903:1: ruleBitwiseNotOperator returns [Enumerator current=null] : (enumLiteral_0= '~' ) ;
    public final Enumerator ruleBitwiseNotOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCL.g:13909:2: ( (enumLiteral_0= '~' ) )
            // InternalSCL.g:13910:2: (enumLiteral_0= '~' )
            {
            // InternalSCL.g:13910:2: (enumLiteral_0= '~' )
            // InternalSCL.g:13911:3: enumLiteral_0= '~'
            {
            enumLiteral_0=(Token)match(input,101,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseNotOperatorAccess().getBITWISE_NOTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseNotOperatorAccess().getBITWISE_NOTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseNotOperator"


    // $ANTLR start "ruleBitwiseXOrOperator"
    // InternalSCL.g:13920:1: ruleBitwiseXOrOperator returns [Enumerator current=null] : (enumLiteral_0= '^' ) ;
    public final Enumerator ruleBitwiseXOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCL.g:13926:2: ( (enumLiteral_0= '^' ) )
            // InternalSCL.g:13927:2: (enumLiteral_0= '^' )
            {
            // InternalSCL.g:13927:2: (enumLiteral_0= '^' )
            // InternalSCL.g:13928:3: enumLiteral_0= '^'
            {
            enumLiteral_0=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseXOrOperatorAccess().getBITWISE_XOREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseXOrOperatorAccess().getBITWISE_XOREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseXOrOperator"


    // $ANTLR start "ruleBitwiseOrOperator"
    // InternalSCL.g:13937:1: ruleBitwiseOrOperator returns [Enumerator current=null] : (enumLiteral_0= '|' ) ;
    public final Enumerator ruleBitwiseOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCL.g:13943:2: ( (enumLiteral_0= '|' ) )
            // InternalSCL.g:13944:2: (enumLiteral_0= '|' )
            {
            // InternalSCL.g:13944:2: (enumLiteral_0= '|' )
            // InternalSCL.g:13945:3: enumLiteral_0= '|'
            {
            enumLiteral_0=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseOrOperator"


    // $ANTLR start "ruleBitwiseAndOperator"
    // InternalSCL.g:13954:1: ruleBitwiseAndOperator returns [Enumerator current=null] : (enumLiteral_0= '&' ) ;
    public final Enumerator ruleBitwiseAndOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCL.g:13960:2: ( (enumLiteral_0= '&' ) )
            // InternalSCL.g:13961:2: (enumLiteral_0= '&' )
            {
            // InternalSCL.g:13961:2: (enumLiteral_0= '&' )
            // InternalSCL.g:13962:3: enumLiteral_0= '&'
            {
            enumLiteral_0=(Token)match(input,39,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseAndOperator"


    // $ANTLR start "ruleNotOperator"
    // InternalSCL.g:13971:1: ruleNotOperator returns [Enumerator current=null] : (enumLiteral_0= '!' ) ;
    public final Enumerator ruleNotOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCL.g:13977:2: ( (enumLiteral_0= '!' ) )
            // InternalSCL.g:13978:2: (enumLiteral_0= '!' )
            {
            // InternalSCL.g:13978:2: (enumLiteral_0= '!' )
            // InternalSCL.g:13979:3: enumLiteral_0= '!'
            {
            enumLiteral_0=(Token)match(input,38,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotOperator"


    // $ANTLR start "ruleAddOperator"
    // InternalSCL.g:13988:1: ruleAddOperator returns [Enumerator current=null] : (enumLiteral_0= '+' ) ;
    public final Enumerator ruleAddOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCL.g:13994:2: ( (enumLiteral_0= '+' ) )
            // InternalSCL.g:13995:2: (enumLiteral_0= '+' )
            {
            // InternalSCL.g:13995:2: (enumLiteral_0= '+' )
            // InternalSCL.g:13996:3: enumLiteral_0= '+'
            {
            enumLiteral_0=(Token)match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddOperator"


    // $ANTLR start "ruleSubOperator"
    // InternalSCL.g:14005:1: ruleSubOperator returns [Enumerator current=null] : (enumLiteral_0= '-' ) ;
    public final Enumerator ruleSubOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCL.g:14011:2: ( (enumLiteral_0= '-' ) )
            // InternalSCL.g:14012:2: (enumLiteral_0= '-' )
            {
            // InternalSCL.g:14012:2: (enumLiteral_0= '-' )
            // InternalSCL.g:14013:3: enumLiteral_0= '-'
            {
            enumLiteral_0=(Token)match(input,67,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubOperator"


    // $ANTLR start "ruleMultOperator"
    // InternalSCL.g:14022:1: ruleMultOperator returns [Enumerator current=null] : (enumLiteral_0= '*' ) ;
    public final Enumerator ruleMultOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCL.g:14028:2: ( (enumLiteral_0= '*' ) )
            // InternalSCL.g:14029:2: (enumLiteral_0= '*' )
            {
            // InternalSCL.g:14029:2: (enumLiteral_0= '*' )
            // InternalSCL.g:14030:3: enumLiteral_0= '*'
            {
            enumLiteral_0=(Token)match(input,68,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultOperator"


    // $ANTLR start "ruleModOperator"
    // InternalSCL.g:14039:1: ruleModOperator returns [Enumerator current=null] : (enumLiteral_0= '%' ) ;
    public final Enumerator ruleModOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCL.g:14045:2: ( (enumLiteral_0= '%' ) )
            // InternalSCL.g:14046:2: (enumLiteral_0= '%' )
            {
            // InternalSCL.g:14046:2: (enumLiteral_0= '%' )
            // InternalSCL.g:14047:3: enumLiteral_0= '%'
            {
            enumLiteral_0=(Token)match(input,70,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModOperator"


    // $ANTLR start "ruleDivOperator"
    // InternalSCL.g:14056:1: ruleDivOperator returns [Enumerator current=null] : (enumLiteral_0= '/' ) ;
    public final Enumerator ruleDivOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCL.g:14062:2: ( (enumLiteral_0= '/' ) )
            // InternalSCL.g:14063:2: (enumLiteral_0= '/' )
            {
            // InternalSCL.g:14063:2: (enumLiteral_0= '/' )
            // InternalSCL.g:14064:3: enumLiteral_0= '/'
            {
            enumLiteral_0=(Token)match(input,69,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDivOperator"


    // $ANTLR start "ruleValOperator"
    // InternalSCL.g:14073:1: ruleValOperator returns [Enumerator current=null] : (enumLiteral_0= 'val' ) ;
    public final Enumerator ruleValOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCL.g:14079:2: ( (enumLiteral_0= 'val' ) )
            // InternalSCL.g:14080:2: (enumLiteral_0= 'val' )
            {
            // InternalSCL.g:14080:2: (enumLiteral_0= 'val' )
            // InternalSCL.g:14081:3: enumLiteral_0= 'val'
            {
            enumLiteral_0=(Token)match(input,102,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValOperator"


    // $ANTLR start "ruleLogicalOrOperator"
    // InternalSCL.g:14090:1: ruleLogicalOrOperator returns [Enumerator current=null] : (enumLiteral_0= '||' ) ;
    public final Enumerator ruleLogicalOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCL.g:14096:2: ( (enumLiteral_0= '||' ) )
            // InternalSCL.g:14097:2: (enumLiteral_0= '||' )
            {
            // InternalSCL.g:14097:2: (enumLiteral_0= '||' )
            // InternalSCL.g:14098:3: enumLiteral_0= '||'
            {
            enumLiteral_0=(Token)match(input,59,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOrOperator"


    // $ANTLR start "ruleLogicalAndOperator"
    // InternalSCL.g:14107:1: ruleLogicalAndOperator returns [Enumerator current=null] : (enumLiteral_0= '&&' ) ;
    public final Enumerator ruleLogicalAndOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCL.g:14113:2: ( (enumLiteral_0= '&&' ) )
            // InternalSCL.g:14114:2: (enumLiteral_0= '&&' )
            {
            // InternalSCL.g:14114:2: (enumLiteral_0= '&&' )
            // InternalSCL.g:14115:3: enumLiteral_0= '&&'
            {
            enumLiteral_0=(Token)match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalAndOperator"


    // $ANTLR start "ruleShiftLeftOperator"
    // InternalSCL.g:14124:1: ruleShiftLeftOperator returns [Enumerator current=null] : (enumLiteral_0= '<<' ) ;
    public final Enumerator ruleShiftLeftOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCL.g:14130:2: ( (enumLiteral_0= '<<' ) )
            // InternalSCL.g:14131:2: (enumLiteral_0= '<<' )
            {
            // InternalSCL.g:14131:2: (enumLiteral_0= '<<' )
            // InternalSCL.g:14132:3: enumLiteral_0= '<<'
            {
            enumLiteral_0=(Token)match(input,63,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getShiftLeftOperatorAccess().getSHIFT_LEFTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getShiftLeftOperatorAccess().getSHIFT_LEFTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftLeftOperator"


    // $ANTLR start "ruleShiftRightOperator"
    // InternalSCL.g:14141:1: ruleShiftRightOperator returns [Enumerator current=null] : (enumLiteral_0= '>>' ) ;
    public final Enumerator ruleShiftRightOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCL.g:14147:2: ( (enumLiteral_0= '>>' ) )
            // InternalSCL.g:14148:2: (enumLiteral_0= '>>' )
            {
            // InternalSCL.g:14148:2: (enumLiteral_0= '>>' )
            // InternalSCL.g:14149:3: enumLiteral_0= '>>'
            {
            enumLiteral_0=(Token)match(input,64,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getShiftRightOperatorAccess().getSHIFT_RIGHTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getShiftRightOperatorAccess().getSHIFT_RIGHTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightOperator"


    // $ANTLR start "ruleShiftRightUnsignedOperator"
    // InternalSCL.g:14158:1: ruleShiftRightUnsignedOperator returns [Enumerator current=null] : (enumLiteral_0= '>>>' ) ;
    public final Enumerator ruleShiftRightUnsignedOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCL.g:14164:2: ( (enumLiteral_0= '>>>' ) )
            // InternalSCL.g:14165:2: (enumLiteral_0= '>>>' )
            {
            // InternalSCL.g:14165:2: (enumLiteral_0= '>>>' )
            // InternalSCL.g:14166:3: enumLiteral_0= '>>>'
            {
            enumLiteral_0=(Token)match(input,65,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getShiftRightUnsignedOperatorAccess().getSHIFT_RIGHT_UNSIGNEDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getShiftRightUnsignedOperatorAccess().getSHIFT_RIGHT_UNSIGNEDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightUnsignedOperator"


    // $ANTLR start "ruleConditionalOperator"
    // InternalSCL.g:14175:1: ruleConditionalOperator returns [Enumerator current=null] : (enumLiteral_0= '?' ) ;
    public final Enumerator ruleConditionalOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCL.g:14181:2: ( (enumLiteral_0= '?' ) )
            // InternalSCL.g:14182:2: (enumLiteral_0= '?' )
            {
            // InternalSCL.g:14182:2: (enumLiteral_0= '?' )
            // InternalSCL.g:14183:3: enumLiteral_0= '?'
            {
            enumLiteral_0=(Token)match(input,103,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getConditionalOperatorAccess().getCONDITIONALEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getConditionalOperatorAccess().getCONDITIONALEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalOperator"


    // $ANTLR start "ruleFBYOperator"
    // InternalSCL.g:14192:1: ruleFBYOperator returns [Enumerator current=null] : (enumLiteral_0= '->' ) ;
    public final Enumerator ruleFBYOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCL.g:14198:2: ( (enumLiteral_0= '->' ) )
            // InternalSCL.g:14199:2: (enumLiteral_0= '->' )
            {
            // InternalSCL.g:14199:2: (enumLiteral_0= '->' )
            // InternalSCL.g:14200:3: enumLiteral_0= '->'
            {
            enumLiteral_0=(Token)match(input,104,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getFBYOperatorAccess().getFBYEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getFBYOperatorAccess().getFBYEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFBYOperator"


    // $ANTLR start "ruleValueType"
    // InternalSCL.g:14209:1: ruleValueType returns [Enumerator current=null] : ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) ) ;
    public final Enumerator ruleValueType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;


        	enterRule();

        try {
            // InternalSCL.g:14215:2: ( ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) ) )
            // InternalSCL.g:14216:2: ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) )
            {
            // InternalSCL.g:14216:2: ( (enumLiteral_0= 'pure' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) )
            int alt335=5;
            switch ( input.LA(1) ) {
            case 105:
                {
                alt335=1;
                }
                break;
            case 106:
                {
                alt335=2;
                }
                break;
            case 107:
                {
                alt335=3;
                }
                break;
            case 108:
                {
                alt335=4;
                }
                break;
            case 109:
                {
                alt335=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 335, 0, input);

                throw nvae;
            }

            switch (alt335) {
                case 1 :
                    // InternalSCL.g:14217:3: (enumLiteral_0= 'pure' )
                    {
                    // InternalSCL.g:14217:3: (enumLiteral_0= 'pure' )
                    // InternalSCL.g:14218:4: enumLiteral_0= 'pure'
                    {
                    enumLiteral_0=(Token)match(input,105,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:14225:3: (enumLiteral_1= 'bool' )
                    {
                    // InternalSCL.g:14225:3: (enumLiteral_1= 'bool' )
                    // InternalSCL.g:14226:4: enumLiteral_1= 'bool'
                    {
                    enumLiteral_1=(Token)match(input,106,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCL.g:14233:3: (enumLiteral_2= 'int' )
                    {
                    // InternalSCL.g:14233:3: (enumLiteral_2= 'int' )
                    // InternalSCL.g:14234:4: enumLiteral_2= 'int'
                    {
                    enumLiteral_2=(Token)match(input,107,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCL.g:14241:3: (enumLiteral_3= 'float' )
                    {
                    // InternalSCL.g:14241:3: (enumLiteral_3= 'float' )
                    // InternalSCL.g:14242:4: enumLiteral_3= 'float'
                    {
                    enumLiteral_3=(Token)match(input,108,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCL.g:14249:3: (enumLiteral_4= 'string' )
                    {
                    // InternalSCL.g:14249:3: (enumLiteral_4= 'string' )
                    // InternalSCL.g:14250:4: enumLiteral_4= 'string'
                    {
                    enumLiteral_4=(Token)match(input,109,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueType"


    // $ANTLR start "ruleHostType"
    // InternalSCL.g:14260:1: ruleHostType returns [Enumerator current=null] : (enumLiteral_0= 'host' ) ;
    public final Enumerator ruleHostType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCL.g:14266:2: ( (enumLiteral_0= 'host' ) )
            // InternalSCL.g:14267:2: (enumLiteral_0= 'host' )
            {
            // InternalSCL.g:14267:2: (enumLiteral_0= 'host' )
            // InternalSCL.g:14268:3: enumLiteral_0= 'host'
            {
            enumLiteral_0=(Token)match(input,51,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getHostTypeAccess().getHOSTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getHostTypeAccess().getHOSTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHostType"


    // $ANTLR start "ruleStructType"
    // InternalSCL.g:14277:1: ruleStructType returns [Enumerator current=null] : (enumLiteral_0= 'struct' ) ;
    public final Enumerator ruleStructType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCL.g:14283:2: ( (enumLiteral_0= 'struct' ) )
            // InternalSCL.g:14284:2: (enumLiteral_0= 'struct' )
            {
            // InternalSCL.g:14284:2: (enumLiteral_0= 'struct' )
            // InternalSCL.g:14285:3: enumLiteral_0= 'struct'
            {
            enumLiteral_0=(Token)match(input,110,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getStructTypeAccess().getSTRUCTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getStructTypeAccess().getSTRUCTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructType"


    // $ANTLR start "ruleClassType"
    // InternalSCL.g:14294:1: ruleClassType returns [Enumerator current=null] : (enumLiteral_0= 'class' ) ;
    public final Enumerator ruleClassType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalSCL.g:14300:2: ( (enumLiteral_0= 'class' ) )
            // InternalSCL.g:14301:2: (enumLiteral_0= 'class' )
            {
            // InternalSCL.g:14301:2: (enumLiteral_0= 'class' )
            // InternalSCL.g:14302:3: enumLiteral_0= 'class'
            {
            enumLiteral_0=(Token)match(input,111,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getClassTypeAccess().getCLASSEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getClassTypeAccess().getCLASSEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassType"


    // $ANTLR start "ruleCombineOperator"
    // InternalSCL.g:14311:1: ruleCombineOperator returns [Enumerator current=null] : ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) ) ;
    public final Enumerator ruleCombineOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;


        	enterRule();

        try {
            // InternalSCL.g:14317:2: ( ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) ) )
            // InternalSCL.g:14318:2: ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) )
            {
            // InternalSCL.g:14318:2: ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) )
            int alt336=8;
            switch ( input.LA(1) ) {
            case 112:
                {
                alt336=1;
                }
                break;
            case 66:
                {
                alt336=2;
                }
                break;
            case 68:
                {
                alt336=3;
                }
                break;
            case 113:
                {
                alt336=4;
                }
                break;
            case 114:
                {
                alt336=5;
                }
                break;
            case 61:
                {
                alt336=6;
                }
                break;
            case 39:
                {
                alt336=7;
                }
                break;
            case 51:
                {
                alt336=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 336, 0, input);

                throw nvae;
            }

            switch (alt336) {
                case 1 :
                    // InternalSCL.g:14319:3: (enumLiteral_0= 'none' )
                    {
                    // InternalSCL.g:14319:3: (enumLiteral_0= 'none' )
                    // InternalSCL.g:14320:4: enumLiteral_0= 'none'
                    {
                    enumLiteral_0=(Token)match(input,112,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:14327:3: (enumLiteral_1= '+' )
                    {
                    // InternalSCL.g:14327:3: (enumLiteral_1= '+' )
                    // InternalSCL.g:14328:4: enumLiteral_1= '+'
                    {
                    enumLiteral_1=(Token)match(input,66,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCL.g:14335:3: (enumLiteral_2= '*' )
                    {
                    // InternalSCL.g:14335:3: (enumLiteral_2= '*' )
                    // InternalSCL.g:14336:4: enumLiteral_2= '*'
                    {
                    enumLiteral_2=(Token)match(input,68,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCL.g:14343:3: (enumLiteral_3= 'max' )
                    {
                    // InternalSCL.g:14343:3: (enumLiteral_3= 'max' )
                    // InternalSCL.g:14344:4: enumLiteral_3= 'max'
                    {
                    enumLiteral_3=(Token)match(input,113,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCL.g:14351:3: (enumLiteral_4= 'min' )
                    {
                    // InternalSCL.g:14351:3: (enumLiteral_4= 'min' )
                    // InternalSCL.g:14352:4: enumLiteral_4= 'min'
                    {
                    enumLiteral_4=(Token)match(input,114,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSCL.g:14359:3: (enumLiteral_5= '|' )
                    {
                    // InternalSCL.g:14359:3: (enumLiteral_5= '|' )
                    // InternalSCL.g:14360:4: enumLiteral_5= '|'
                    {
                    enumLiteral_5=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSCL.g:14367:3: (enumLiteral_6= '&' )
                    {
                    // InternalSCL.g:14367:3: (enumLiteral_6= '&' )
                    // InternalSCL.g:14368:4: enumLiteral_6= '&'
                    {
                    enumLiteral_6=(Token)match(input,39,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSCL.g:14375:3: (enumLiteral_7= 'host' )
                    {
                    // InternalSCL.g:14375:3: (enumLiteral_7= 'host' )
                    // InternalSCL.g:14376:4: enumLiteral_7= 'host'
                    {
                    enumLiteral_7=(Token)match(input,51,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCombineOperator"


    // $ANTLR start "ruleAccessModifier"
    // InternalSCL.g:14386:1: ruleAccessModifier returns [Enumerator current=null] : ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) ) ;
    public final Enumerator ruleAccessModifier() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalSCL.g:14392:2: ( ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) ) )
            // InternalSCL.g:14393:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) )
            {
            // InternalSCL.g:14393:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) )
            int alt337=3;
            switch ( input.LA(1) ) {
            case 115:
                {
                alt337=1;
                }
                break;
            case 116:
                {
                alt337=2;
                }
                break;
            case 117:
                {
                alt337=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 337, 0, input);

                throw nvae;
            }

            switch (alt337) {
                case 1 :
                    // InternalSCL.g:14394:3: (enumLiteral_0= 'public' )
                    {
                    // InternalSCL.g:14394:3: (enumLiteral_0= 'public' )
                    // InternalSCL.g:14395:4: enumLiteral_0= 'public'
                    {
                    enumLiteral_0=(Token)match(input,115,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAccessModifierAccess().getPUBLICEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getAccessModifierAccess().getPUBLICEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:14402:3: (enumLiteral_1= 'protected' )
                    {
                    // InternalSCL.g:14402:3: (enumLiteral_1= 'protected' )
                    // InternalSCL.g:14403:4: enumLiteral_1= 'protected'
                    {
                    enumLiteral_1=(Token)match(input,116,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAccessModifierAccess().getPROTECTEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getAccessModifierAccess().getPROTECTEDEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCL.g:14410:3: (enumLiteral_2= 'private' )
                    {
                    // InternalSCL.g:14410:3: (enumLiteral_2= 'private' )
                    // InternalSCL.g:14411:4: enumLiteral_2= 'private'
                    {
                    enumLiteral_2=(Token)match(input,117,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAccessModifierAccess().getPRIVATEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getAccessModifierAccess().getPRIVATEEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAccessModifier"


    // $ANTLR start "ruleMethodReturnType"
    // InternalSCL.g:14421:1: ruleMethodReturnType returns [Enumerator current=null] : ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) ) ;
    public final Enumerator ruleMethodReturnType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;


        	enterRule();

        try {
            // InternalSCL.g:14427:2: ( ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) ) )
            // InternalSCL.g:14428:2: ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) )
            {
            // InternalSCL.g:14428:2: ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) )
            int alt338=5;
            switch ( input.LA(1) ) {
            case 118:
                {
                alt338=1;
                }
                break;
            case 106:
                {
                alt338=2;
                }
                break;
            case 107:
                {
                alt338=3;
                }
                break;
            case 108:
                {
                alt338=4;
                }
                break;
            case 109:
                {
                alt338=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 338, 0, input);

                throw nvae;
            }

            switch (alt338) {
                case 1 :
                    // InternalSCL.g:14429:3: (enumLiteral_0= 'void' )
                    {
                    // InternalSCL.g:14429:3: (enumLiteral_0= 'void' )
                    // InternalSCL.g:14430:4: enumLiteral_0= 'void'
                    {
                    enumLiteral_0=(Token)match(input,118,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getVOIDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getMethodReturnTypeAccess().getVOIDEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSCL.g:14437:3: (enumLiteral_1= 'bool' )
                    {
                    // InternalSCL.g:14437:3: (enumLiteral_1= 'bool' )
                    // InternalSCL.g:14438:4: enumLiteral_1= 'bool'
                    {
                    enumLiteral_1=(Token)match(input,106,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getBOOLEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getMethodReturnTypeAccess().getBOOLEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSCL.g:14445:3: (enumLiteral_2= 'int' )
                    {
                    // InternalSCL.g:14445:3: (enumLiteral_2= 'int' )
                    // InternalSCL.g:14446:4: enumLiteral_2= 'int'
                    {
                    enumLiteral_2=(Token)match(input,107,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getINTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getMethodReturnTypeAccess().getINTEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSCL.g:14453:3: (enumLiteral_3= 'float' )
                    {
                    // InternalSCL.g:14453:3: (enumLiteral_3= 'float' )
                    // InternalSCL.g:14454:4: enumLiteral_3= 'float'
                    {
                    enumLiteral_3=(Token)match(input,108,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getFLOATEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getMethodReturnTypeAccess().getFLOATEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSCL.g:14461:3: (enumLiteral_4= 'string' )
                    {
                    // InternalSCL.g:14461:3: (enumLiteral_4= 'string' )
                    // InternalSCL.g:14462:4: enumLiteral_4= 'string'
                    {
                    enumLiteral_4=(Token)match(input,109,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getSTRINGEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getMethodReturnTypeAccess().getSTRINGEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodReturnType"

    // $ANTLR start synpred5_InternalSCL
    public final void synpred5_InternalSCL_fragment() throws RecognitionException {   
        EObject lv_declarations_4_0 = null;


        // InternalSCL.g:191:4: ( (lv_declarations_4_0= ruleDeclaration ) )
        // InternalSCL.g:191:4: (lv_declarations_4_0= ruleDeclaration )
        {
        // InternalSCL.g:191:4: (lv_declarations_4_0= ruleDeclaration )
        // InternalSCL.g:192:5: lv_declarations_4_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getModuleAccess().getDeclarationsDeclarationParserRuleCall_4_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_4_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalSCL

    // $ANTLR start synpred6_InternalSCL
    public final void synpred6_InternalSCL_fragment() throws RecognitionException {   
        EObject lv_statements_5_0 = null;


        // InternalSCL.g:210:4: ( (lv_statements_5_0= ruleStatement ) )
        // InternalSCL.g:210:4: (lv_statements_5_0= ruleStatement )
        {
        // InternalSCL.g:210:4: (lv_statements_5_0= ruleStatement )
        // InternalSCL.g:211:5: lv_statements_5_0= ruleStatement
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getModuleAccess().getStatementsStatementParserRuleCall_5_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_statements_5_0=ruleStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred6_InternalSCL

    // $ANTLR start synpred7_InternalSCL
    public final void synpred7_InternalSCL_fragment() throws RecognitionException {   
        EObject this_SclAssignment_0 = null;


        // InternalSCL.g:247:3: (this_SclAssignment_0= ruleSclAssignment )
        // InternalSCL.g:247:3: this_SclAssignment_0= ruleSclAssignment
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_SclAssignment_0=ruleSclAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred7_InternalSCL

    // $ANTLR start synpred8_InternalSCL
    public final void synpred8_InternalSCL_fragment() throws RecognitionException {   
        EObject this_SclPostfixAssignment_1 = null;


        // InternalSCL.g:259:3: (this_SclPostfixAssignment_1= ruleSclPostfixAssignment )
        // InternalSCL.g:259:3: this_SclPostfixAssignment_1= ruleSclPostfixAssignment
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_SclPostfixAssignment_1=ruleSclPostfixAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred8_InternalSCL

    // $ANTLR start synpred9_InternalSCL
    public final void synpred9_InternalSCL_fragment() throws RecognitionException {   
        EObject this_Label_2 = null;


        // InternalSCL.g:271:3: (this_Label_2= ruleLabel )
        // InternalSCL.g:271:3: this_Label_2= ruleLabel
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Label_2=ruleLabel();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred9_InternalSCL

    // $ANTLR start synpred10_InternalSCL
    public final void synpred10_InternalSCL_fragment() throws RecognitionException {   
        EObject this_Conditional_3 = null;


        // InternalSCL.g:283:3: (this_Conditional_3= ruleConditional )
        // InternalSCL.g:283:3: this_Conditional_3= ruleConditional
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Conditional_3=ruleConditional();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred10_InternalSCL

    // $ANTLR start synpred11_InternalSCL
    public final void synpred11_InternalSCL_fragment() throws RecognitionException {   
        EObject this_LegacyConditional_4 = null;


        // InternalSCL.g:295:3: (this_LegacyConditional_4= ruleLegacyConditional )
        // InternalSCL.g:295:3: this_LegacyConditional_4= ruleLegacyConditional
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_LegacyConditional_4=ruleLegacyConditional();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred11_InternalSCL

    // $ANTLR start synpred12_InternalSCL
    public final void synpred12_InternalSCL_fragment() throws RecognitionException {   
        EObject this_Goto_5 = null;


        // InternalSCL.g:307:3: (this_Goto_5= ruleGoto )
        // InternalSCL.g:307:3: this_Goto_5= ruleGoto
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Goto_5=ruleGoto();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred12_InternalSCL

    // $ANTLR start synpred14_InternalSCL
    public final void synpred14_InternalSCL_fragment() throws RecognitionException {   
        EObject this_Pause_7 = null;


        // InternalSCL.g:331:3: (this_Pause_7= rulePause )
        // InternalSCL.g:331:3: this_Pause_7= rulePause
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Pause_7=rulePause();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred14_InternalSCL

    // $ANTLR start synpred15_InternalSCL
    public final void synpred15_InternalSCL_fragment() throws RecognitionException {   
        EObject this_ModuleCall_8 = null;


        // InternalSCL.g:343:3: (this_ModuleCall_8= ruleModuleCall )
        // InternalSCL.g:343:3: this_ModuleCall_8= ruleModuleCall
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ModuleCall_8=ruleModuleCall();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred15_InternalSCL

    // $ANTLR start synpred16_InternalSCL
    public final void synpred16_InternalSCL_fragment() throws RecognitionException {   
        EObject this_ScopeStatement_9 = null;


        // InternalSCL.g:355:3: (this_ScopeStatement_9= ruleScopeStatement )
        // InternalSCL.g:355:3: this_ScopeStatement_9= ruleScopeStatement
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ScopeStatement_9=ruleScopeStatement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred16_InternalSCL

    // $ANTLR start synpred32_InternalSCL
    public final void synpred32_InternalSCL_fragment() throws RecognitionException {   
        EObject lv_declarations_4_0 = null;


        // InternalSCL.g:952:4: ( (lv_declarations_4_0= ruleDeclaration ) )
        // InternalSCL.g:952:4: (lv_declarations_4_0= ruleDeclaration )
        {
        // InternalSCL.g:952:4: (lv_declarations_4_0= ruleDeclaration )
        // InternalSCL.g:953:5: lv_declarations_4_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getConditionalAccess().getDeclarationsDeclarationParserRuleCall_4_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_4_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred32_InternalSCL

    // $ANTLR start synpred34_InternalSCL
    public final void synpred34_InternalSCL_fragment() throws RecognitionException {   
        EObject lv_else_7_0 = null;


        // InternalSCL.g:994:4: ( ( (lv_else_7_0= ruleElseScope ) ) )
        // InternalSCL.g:994:4: ( (lv_else_7_0= ruleElseScope ) )
        {
        // InternalSCL.g:994:4: ( (lv_else_7_0= ruleElseScope ) )
        // InternalSCL.g:995:5: (lv_else_7_0= ruleElseScope )
        {
        // InternalSCL.g:995:5: (lv_else_7_0= ruleElseScope )
        // InternalSCL.g:996:6: lv_else_7_0= ruleElseScope
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getConditionalAccess().getElseElseScopeParserRuleCall_7_0_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_else_7_0=ruleElseScope();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred34_InternalSCL

    // $ANTLR start synpred37_InternalSCL
    public final void synpred37_InternalSCL_fragment() throws RecognitionException {   
        EObject lv_declarations_4_0 = null;


        // InternalSCL.g:1086:4: ( (lv_declarations_4_0= ruleDeclaration ) )
        // InternalSCL.g:1086:4: (lv_declarations_4_0= ruleDeclaration )
        {
        // InternalSCL.g:1086:4: (lv_declarations_4_0= ruleDeclaration )
        // InternalSCL.g:1087:5: lv_declarations_4_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getElseScopeAccess().getDeclarationsDeclarationParserRuleCall_4_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_4_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred37_InternalSCL

    // $ANTLR start synpred41_InternalSCL
    public final void synpred41_InternalSCL_fragment() throws RecognitionException {   
        EObject lv_statements_4_0 = null;


        // InternalSCL.g:1207:4: ( (lv_statements_4_0= ruleStatement ) )
        // InternalSCL.g:1207:4: (lv_statements_4_0= ruleStatement )
        {
        // InternalSCL.g:1207:4: (lv_statements_4_0= ruleStatement )
        // InternalSCL.g:1208:5: lv_statements_4_0= ruleStatement
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getLegacyConditionalAccess().getStatementsStatementParserRuleCall_4_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_statements_4_0=ruleStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred41_InternalSCL

    // $ANTLR start synpred47_InternalSCL
    public final void synpred47_InternalSCL_fragment() throws RecognitionException {   
        EObject lv_declarations_3_0 = null;


        // InternalSCL.g:1388:6: ( (lv_declarations_3_0= ruleDeclaration ) )
        // InternalSCL.g:1388:6: (lv_declarations_3_0= ruleDeclaration )
        {
        // InternalSCL.g:1388:6: (lv_declarations_3_0= ruleDeclaration )
        // InternalSCL.g:1389:7: lv_declarations_3_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getThreadAccess().getDeclarationsDeclarationParserRuleCall_1_0_2_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_3_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred47_InternalSCL

    // $ANTLR start synpred49_InternalSCL
    public final void synpred49_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token otherlv_5=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_declarations_3_0 = null;

        EObject lv_statements_4_0 = null;


        // InternalSCL.g:1363:4: ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) )
        // InternalSCL.g:1363:4: ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
        {
        // InternalSCL.g:1363:4: ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' )
        // InternalSCL.g:1364:5: ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}'
        {
        // InternalSCL.g:1364:5: ( (lv_annotations_1_0= ruleAnnotation ) )*
        loop341:
        do {
            int alt341=2;
            int LA341_0 = input.LA(1);

            if ( (LA341_0==RULE_COMMENT_ANNOTATION||LA341_0==76) ) {
                alt341=1;
            }


            switch (alt341) {
        	case 1 :
        	    // InternalSCL.g:1365:6: (lv_annotations_1_0= ruleAnnotation )
        	    {
        	    // InternalSCL.g:1365:6: (lv_annotations_1_0= ruleAnnotation )
        	    // InternalSCL.g:1366:7: lv_annotations_1_0= ruleAnnotation
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getThreadAccess().getAnnotationsAnnotationParserRuleCall_1_0_0_0());
        	      						
        	    }
        	    pushFollow(FollowSets000.FOLLOW_31);
        	    lv_annotations_1_0=ruleAnnotation();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop341;
            }
        } while (true);

        otherlv_2=(Token)match(input,25,FollowSets000.FOLLOW_24); if (state.failed) return ;
        // InternalSCL.g:1387:5: ( (lv_declarations_3_0= ruleDeclaration ) )*
        loop342:
        do {
            int alt342=2;
            alt342 = dfa342.predict(input);
            switch (alt342) {
        	case 1 :
        	    // InternalSCL.g:1388:6: (lv_declarations_3_0= ruleDeclaration )
        	    {
        	    // InternalSCL.g:1388:6: (lv_declarations_3_0= ruleDeclaration )
        	    // InternalSCL.g:1389:7: lv_declarations_3_0= ruleDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getThreadAccess().getDeclarationsDeclarationParserRuleCall_1_0_2_0());
        	      						
        	    }
        	    pushFollow(FollowSets000.FOLLOW_24);
        	    lv_declarations_3_0=ruleDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop342;
            }
        } while (true);

        // InternalSCL.g:1406:5: ( (lv_statements_4_0= ruleStatement ) )*
        loop343:
        do {
            int alt343=2;
            int LA343_0 = input.LA(1);

            if ( (LA343_0==RULE_ID||LA343_0==RULE_COMMENT_ANNOTATION||LA343_0==19||LA343_0==21||(LA343_0>=23 && LA343_0<=25)||LA343_0==30||LA343_0==33||LA343_0==76) ) {
                alt343=1;
            }


            switch (alt343) {
        	case 1 :
        	    // InternalSCL.g:1407:6: (lv_statements_4_0= ruleStatement )
        	    {
        	    // InternalSCL.g:1407:6: (lv_statements_4_0= ruleStatement )
        	    // InternalSCL.g:1408:7: lv_statements_4_0= ruleStatement
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getThreadAccess().getStatementsStatementParserRuleCall_1_0_3_0());
        	      						
        	    }
        	    pushFollow(FollowSets000.FOLLOW_25);
        	    lv_statements_4_0=ruleStatement();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop343;
            }
        } while (true);

        otherlv_5=(Token)match(input,26,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred49_InternalSCL

    // $ANTLR start synpred54_InternalSCL
    public final void synpred54_InternalSCL_fragment() throws RecognitionException {   
        EObject lv_declarations_3_0 = null;


        // InternalSCL.g:1591:4: ( (lv_declarations_3_0= ruleDeclaration ) )
        // InternalSCL.g:1591:4: (lv_declarations_3_0= ruleDeclaration )
        {
        // InternalSCL.g:1591:4: (lv_declarations_3_0= ruleDeclaration )
        // InternalSCL.g:1592:5: lv_declarations_3_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getScopeStatementAccess().getDeclarationsDeclarationParserRuleCall_3_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_3_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred54_InternalSCL

    // $ANTLR start synpred65_InternalSCL
    public final void synpred65_InternalSCL_fragment() throws RecognitionException {   
        EObject lv_annotations_1_0 = null;


        // InternalSCL.g:1914:4: ( (lv_annotations_1_0= ruleAnnotation ) )
        // InternalSCL.g:1914:4: (lv_annotations_1_0= ruleAnnotation )
        {
        // InternalSCL.g:1914:4: (lv_annotations_1_0= ruleAnnotation )
        // InternalSCL.g:1915:5: lv_annotations_1_0= ruleAnnotation
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAnnotationsAnnotationParserRuleCall_1_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_annotations_1_0=ruleAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred65_InternalSCL

    // $ANTLR start synpred74_InternalSCL
    public final void synpred74_InternalSCL_fragment() throws RecognitionException {   
        EObject lv_declarations_16_0 = null;


        // InternalSCL.g:2106:6: ( (lv_declarations_16_0= ruleDeclaration ) )
        // InternalSCL.g:2106:6: (lv_declarations_16_0= ruleDeclaration )
        {
        // InternalSCL.g:2106:6: (lv_declarations_16_0= ruleDeclaration )
        // InternalSCL.g:2107:7: lv_declarations_16_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getMethodDeclarationAccess().getDeclarationsDeclarationParserRuleCall_7_1_2_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_16_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred74_InternalSCL

    // $ANTLR start synpred77_InternalSCL
    public final void synpred77_InternalSCL_fragment() throws RecognitionException {   
        EObject lv_annotations_1_0 = null;


        // InternalSCL.g:2198:4: ( (lv_annotations_1_0= ruleAnnotation ) )
        // InternalSCL.g:2198:4: (lv_annotations_1_0= ruleAnnotation )
        {
        // InternalSCL.g:2198:4: (lv_annotations_1_0= ruleAnnotation )
        // InternalSCL.g:2199:5: lv_annotations_1_0= ruleAnnotation
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_annotations_1_0=ruleAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred77_InternalSCL

    // $ANTLR start synpred85_InternalSCL
    public final void synpred85_InternalSCL_fragment() throws RecognitionException {   
        EObject lv_declarations_15_0 = null;


        // InternalSCL.g:2384:5: ( (lv_declarations_15_0= ruleDeclarationWOSemicolon ) )
        // InternalSCL.g:2384:5: (lv_declarations_15_0= ruleDeclarationWOSemicolon )
        {
        // InternalSCL.g:2384:5: (lv_declarations_15_0= ruleDeclarationWOSemicolon )
        // InternalSCL.g:2385:6: lv_declarations_15_0= ruleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_7_2_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_15_0=ruleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred85_InternalSCL

    // $ANTLR start synpred88_InternalSCL
    public final void synpred88_InternalSCL_fragment() throws RecognitionException {   
        EObject lv_declarations_1_0 = null;


        // InternalSCL.g:2456:4: ( (lv_declarations_1_0= ruleDeclaration ) )
        // InternalSCL.g:2456:4: (lv_declarations_1_0= ruleDeclaration )
        {
        // InternalSCL.g:2456:4: (lv_declarations_1_0= ruleDeclaration )
        // InternalSCL.g:2457:5: lv_declarations_1_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getRootScopeAccess().getDeclarationsDeclarationParserRuleCall_1_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_1_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred88_InternalSCL

    // $ANTLR start synpred92_InternalSCL
    public final void synpred92_InternalSCL_fragment() throws RecognitionException {   
        EObject lv_declarations_3_0 = null;


        // InternalSCL.g:2570:4: ( (lv_declarations_3_0= ruleDeclaration ) )
        // InternalSCL.g:2570:4: (lv_declarations_3_0= ruleDeclaration )
        {
        // InternalSCL.g:2570:4: (lv_declarations_3_0= ruleDeclaration )
        // InternalSCL.g:2571:5: lv_declarations_3_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getScopeAccess().getDeclarationsDeclarationParserRuleCall_3_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_3_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred92_InternalSCL

    // $ANTLR start synpred95_InternalSCL
    public final void synpred95_InternalSCL_fragment() throws RecognitionException {   
        EObject lv_expression_0_0 = null;


        // InternalSCL.g:2655:3: ( ( (lv_expression_0_0= ruleAnnotatedExpression ) ) )
        // InternalSCL.g:2655:3: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
        {
        // InternalSCL.g:2655:3: ( (lv_expression_0_0= ruleAnnotatedExpression ) )
        // InternalSCL.g:2656:4: (lv_expression_0_0= ruleAnnotatedExpression )
        {
        // InternalSCL.g:2656:4: (lv_expression_0_0= ruleAnnotatedExpression )
        // InternalSCL.g:2657:5: lv_expression_0_0= ruleAnnotatedExpression
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedExpressionParserRuleCall_0_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_expression_0_0=ruleAnnotatedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred95_InternalSCL

    // $ANTLR start synpred97_InternalSCL
    public final void synpred97_InternalSCL_fragment() throws RecognitionException {   
        EObject this_VariableDeclaration_0 = null;


        // InternalSCL.g:2774:3: (this_VariableDeclaration_0= ruleVariableDeclaration )
        // InternalSCL.g:2774:3: this_VariableDeclaration_0= ruleVariableDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_VariableDeclaration_0=ruleVariableDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred97_InternalSCL

    // $ANTLR start synpred98_InternalSCL
    public final void synpred98_InternalSCL_fragment() throws RecognitionException {   
        EObject this_ReferenceDeclaration_1 = null;


        // InternalSCL.g:2786:3: (this_ReferenceDeclaration_1= ruleReferenceDeclaration )
        // InternalSCL.g:2786:3: this_ReferenceDeclaration_1= ruleReferenceDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ReferenceDeclaration_1=ruleReferenceDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred98_InternalSCL

    // $ANTLR start synpred99_InternalSCL
    public final void synpred99_InternalSCL_fragment() throws RecognitionException {   
        EObject this_ScheduleDeclaration_2 = null;


        // InternalSCL.g:2798:3: (this_ScheduleDeclaration_2= ruleScheduleDeclaration )
        // InternalSCL.g:2798:3: this_ScheduleDeclaration_2= ruleScheduleDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ScheduleDeclaration_2=ruleScheduleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred99_InternalSCL

    // $ANTLR start synpred100_InternalSCL
    public final void synpred100_InternalSCL_fragment() throws RecognitionException {   
        EObject this_StructDeclaration_3 = null;


        // InternalSCL.g:2810:3: (this_StructDeclaration_3= ruleStructDeclaration )
        // InternalSCL.g:2810:3: this_StructDeclaration_3= ruleStructDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_StructDeclaration_3=ruleStructDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred100_InternalSCL

    // $ANTLR start synpred101_InternalSCL
    public final void synpred101_InternalSCL_fragment() throws RecognitionException {   
        EObject this_VariableDeclarationWOSemicolon_0 = null;


        // InternalSCL.g:2852:3: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon )
        // InternalSCL.g:2852:3: this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_VariableDeclarationWOSemicolon_0=ruleVariableDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred101_InternalSCL

    // $ANTLR start synpred102_InternalSCL
    public final void synpred102_InternalSCL_fragment() throws RecognitionException {   
        EObject this_ReferenceDeclarationWOSemicolon_1 = null;


        // InternalSCL.g:2864:3: (this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon )
        // InternalSCL.g:2864:3: this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ReferenceDeclarationWOSemicolon_1=ruleReferenceDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred102_InternalSCL

    // $ANTLR start synpred103_InternalSCL
    public final void synpred103_InternalSCL_fragment() throws RecognitionException {   
        EObject this_ScheduleDeclarationWOSemicolon_2 = null;


        // InternalSCL.g:2876:3: (this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon )
        // InternalSCL.g:2876:3: this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ScheduleDeclarationWOSemicolon_2=ruleScheduleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred103_InternalSCL

    // $ANTLR start synpred104_InternalSCL
    public final void synpred104_InternalSCL_fragment() throws RecognitionException {   
        EObject this_StructDeclarationWOSemicolon_3 = null;


        // InternalSCL.g:2888:3: (this_StructDeclarationWOSemicolon_3= ruleStructDeclarationWOSemicolon )
        // InternalSCL.g:2888:3: this_StructDeclarationWOSemicolon_3= ruleStructDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_StructDeclarationWOSemicolon_3=ruleStructDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred104_InternalSCL

    // $ANTLR start synpred127_InternalSCL
    public final void synpred127_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_13=null;
        EObject lv_valuedObjects_14_0 = null;


        // InternalSCL.g:3436:4: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )
        // InternalSCL.g:3436:4: otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) )
        {
        otherlv_13=(Token)match(input,35,FollowSets000.FOLLOW_12); if (state.failed) return ;
        // InternalSCL.g:3440:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
        // InternalSCL.g:3441:5: (lv_valuedObjects_14_0= ruleValuedObject )
        {
        // InternalSCL.g:3441:5: (lv_valuedObjects_14_0= ruleValuedObject )
        // InternalSCL.g:3442:6: lv_valuedObjects_14_0= ruleValuedObject
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_9_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_valuedObjects_14_0=ruleValuedObject();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred127_InternalSCL

    // $ANTLR start synpred153_InternalSCL
    public final void synpred153_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_15=null;
        EObject lv_valuedObjects_14_0 = null;

        EObject lv_valuedObjects_16_0 = null;


        // InternalSCL.g:3979:4: ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )
        // InternalSCL.g:3979:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )*
        {
        // InternalSCL.g:3979:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
        // InternalSCL.g:3980:5: (lv_valuedObjects_14_0= ruleValuedObject )
        {
        // InternalSCL.g:3980:5: (lv_valuedObjects_14_0= ruleValuedObject )
        // InternalSCL.g:3981:6: lv_valuedObjects_14_0= ruleValuedObject
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_14_0_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_131);
        lv_valuedObjects_14_0=ruleValuedObject();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCL.g:3998:4: (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )*
        loop357:
        do {
            int alt357=2;
            int LA357_0 = input.LA(1);

            if ( (LA357_0==35) ) {
                alt357=1;
            }


            switch (alt357) {
        	case 1 :
        	    // InternalSCL.g:3999:5: otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) )
        	    {
        	    otherlv_15=(Token)match(input,35,FollowSets000.FOLLOW_12); if (state.failed) return ;
        	    // InternalSCL.g:4003:5: ( (lv_valuedObjects_16_0= ruleValuedObject ) )
        	    // InternalSCL.g:4004:6: (lv_valuedObjects_16_0= ruleValuedObject )
        	    {
        	    // InternalSCL.g:4004:6: (lv_valuedObjects_16_0= ruleValuedObject )
        	    // InternalSCL.g:4005:7: lv_valuedObjects_16_0= ruleValuedObject
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getStructDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_14_1_1_0());
        	      						
        	    }
        	    pushFollow(FollowSets000.FOLLOW_131);
        	    lv_valuedObjects_16_0=ruleValuedObject();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop357;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred153_InternalSCL

    // $ANTLR start synpred168_InternalSCL
    public final void synpred168_InternalSCL_fragment() throws RecognitionException {   
        EObject this_Declaration_0 = null;


        // InternalSCL.g:4346:3: (this_Declaration_0= ruleDeclaration )
        // InternalSCL.g:4346:3: this_Declaration_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Declaration_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred168_InternalSCL

    // $ANTLR start synpred180_InternalSCL
    public final void synpred180_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_15=null;
        EObject lv_valuedObjects_14_0 = null;

        EObject lv_valuedObjects_16_0 = null;


        // InternalSCL.g:4585:4: ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )
        // InternalSCL.g:4585:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )*
        {
        // InternalSCL.g:4585:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
        // InternalSCL.g:4586:5: (lv_valuedObjects_14_0= ruleValuedObject )
        {
        // InternalSCL.g:4586:5: (lv_valuedObjects_14_0= ruleValuedObject )
        // InternalSCL.g:4587:6: lv_valuedObjects_14_0= ruleValuedObject
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_14_0_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_131);
        lv_valuedObjects_14_0=ruleValuedObject();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCL.g:4604:4: (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )*
        loop359:
        do {
            int alt359=2;
            int LA359_0 = input.LA(1);

            if ( (LA359_0==35) ) {
                alt359=1;
            }


            switch (alt359) {
        	case 1 :
        	    // InternalSCL.g:4605:5: otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) )
        	    {
        	    otherlv_15=(Token)match(input,35,FollowSets000.FOLLOW_12); if (state.failed) return ;
        	    // InternalSCL.g:4609:5: ( (lv_valuedObjects_16_0= ruleValuedObject ) )
        	    // InternalSCL.g:4610:6: (lv_valuedObjects_16_0= ruleValuedObject )
        	    {
        	    // InternalSCL.g:4610:6: (lv_valuedObjects_16_0= ruleValuedObject )
        	    // InternalSCL.g:4611:7: lv_valuedObjects_16_0= ruleValuedObject
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_14_1_1_0());
        	      						
        	    }
        	    pushFollow(FollowSets000.FOLLOW_131);
        	    lv_valuedObjects_16_0=ruleValuedObject();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop359;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred180_InternalSCL

    // $ANTLR start synpred182_InternalSCL
    public final void synpred182_InternalSCL_fragment() throws RecognitionException {   
        EObject this_DeclarationWOSemicolon_0 = null;


        // InternalSCL.g:4668:3: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon )
        // InternalSCL.g:4668:3: this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_DeclarationWOSemicolon_0=ruleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred182_InternalSCL

    // $ANTLR start synpred218_InternalSCL
    public final void synpred218_InternalSCL_fragment() throws RecognitionException {   
        EObject this_Assignment_0 = null;


        // InternalSCL.g:5851:3: (this_Assignment_0= ruleAssignment )
        // InternalSCL.g:5851:3: this_Assignment_0= ruleAssignment
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Assignment_0=ruleAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred218_InternalSCL

    // $ANTLR start synpred219_InternalSCL
    public final void synpred219_InternalSCL_fragment() throws RecognitionException {   
        EObject this_PostfixEffect_1 = null;


        // InternalSCL.g:5863:3: (this_PostfixEffect_1= rulePostfixEffect )
        // InternalSCL.g:5863:3: this_PostfixEffect_1= rulePostfixEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_PostfixEffect_1=rulePostfixEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred219_InternalSCL

    // $ANTLR start synpred220_InternalSCL
    public final void synpred220_InternalSCL_fragment() throws RecognitionException {   
        EObject this_ValuedEmission_2 = null;


        // InternalSCL.g:5875:3: (this_ValuedEmission_2= ruleValuedEmission )
        // InternalSCL.g:5875:3: this_ValuedEmission_2= ruleValuedEmission
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedEmission_2=ruleValuedEmission();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred220_InternalSCL

    // $ANTLR start synpred221_InternalSCL
    public final void synpred221_InternalSCL_fragment() throws RecognitionException {   
        EObject this_HostcodeEffect_3 = null;


        // InternalSCL.g:5887:3: (this_HostcodeEffect_3= ruleHostcodeEffect )
        // InternalSCL.g:5887:3: this_HostcodeEffect_3= ruleHostcodeEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_HostcodeEffect_3=ruleHostcodeEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred221_InternalSCL

    // $ANTLR start synpred222_InternalSCL
    public final void synpred222_InternalSCL_fragment() throws RecognitionException {   
        EObject this_ReferenceCallEffect_4 = null;


        // InternalSCL.g:5899:3: (this_ReferenceCallEffect_4= ruleReferenceCallEffect )
        // InternalSCL.g:5899:3: this_ReferenceCallEffect_4= ruleReferenceCallEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ReferenceCallEffect_4=ruleReferenceCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred222_InternalSCL

    // $ANTLR start synpred223_InternalSCL
    public final void synpred223_InternalSCL_fragment() throws RecognitionException {   
        EObject this_FunctionCallEffect_5 = null;


        // InternalSCL.g:5911:3: (this_FunctionCallEffect_5= ruleFunctionCallEffect )
        // InternalSCL.g:5911:3: this_FunctionCallEffect_5= ruleFunctionCallEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_FunctionCallEffect_5=ruleFunctionCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred223_InternalSCL

    // $ANTLR start synpred224_InternalSCL
    public final void synpred224_InternalSCL_fragment() throws RecognitionException {   
        EObject this_PrintCallEffect_6 = null;


        // InternalSCL.g:5923:3: (this_PrintCallEffect_6= rulePrintCallEffect )
        // InternalSCL.g:5923:3: this_PrintCallEffect_6= rulePrintCallEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_PrintCallEffect_6=rulePrintCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred224_InternalSCL

    // $ANTLR start synpred225_InternalSCL
    public final void synpred225_InternalSCL_fragment() throws RecognitionException {   
        EObject this_RandomizeCallEffect_7 = null;


        // InternalSCL.g:5935:3: (this_RandomizeCallEffect_7= ruleRandomizeCallEffect )
        // InternalSCL.g:5935:3: this_RandomizeCallEffect_7= ruleRandomizeCallEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_RandomizeCallEffect_7=ruleRandomizeCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred225_InternalSCL

    // $ANTLR start synpred255_InternalSCL
    public final void synpred255_InternalSCL_fragment() throws RecognitionException {   
        EObject this_BoolExpression_0 = null;


        // InternalSCL.g:6970:3: (this_BoolExpression_0= ruleBoolExpression )
        // InternalSCL.g:6970:3: this_BoolExpression_0= ruleBoolExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_BoolExpression_0=ruleBoolExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred255_InternalSCL

    // $ANTLR start synpred267_InternalSCL
    public final void synpred267_InternalSCL_fragment() throws RecognitionException {   
        EObject this_ValuedExpression_0 = null;


        // InternalSCL.g:7655:3: (this_ValuedExpression_0= ruleValuedExpression )
        // InternalSCL.g:7655:3: this_ValuedExpression_0= ruleValuedExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedExpression_0=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred267_InternalSCL

    // $ANTLR start synpred276_InternalSCL
    public final void synpred276_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_subExpressions_5_0 = null;


        // InternalSCL.g:8216:6: (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )
        // InternalSCL.g:8216:6: otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) )
        {
        otherlv_4=(Token)match(input,63,FollowSets000.FOLLOW_100); if (state.failed) return ;
        // InternalSCL.g:8220:6: ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) )
        // InternalSCL.g:8221:7: (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression )
        {
        // InternalSCL.g:8221:7: (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression )
        // InternalSCL.g:8222:8: lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getShiftLeftRightExpressionAccess().getSubExpressionsShiftRightRightUnsignedExpressionParserRuleCall_1_0_2_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_5_0=ruleShiftRightRightUnsignedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred276_InternalSCL

    // $ANTLR start synpred277_InternalSCL
    public final void synpred277_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


        // InternalSCL.g:8164:4: ( ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* ) )
        // InternalSCL.g:8164:4: ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* )
        {
        // InternalSCL.g:8164:4: ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* )
        // InternalSCL.g:8165:5: () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )*
        {
        // InternalSCL.g:8165:5: ()
        // InternalSCL.g:8166:6: 
        {
        if ( state.backtracking==0 ) {

          						/* */
          					
        }

        }

        // InternalSCL.g:8175:5: ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) )
        // InternalSCL.g:8176:6: ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) )
        {
        // InternalSCL.g:8176:6: ( (lv_operator_2_0= ruleShiftLeftOperator ) )
        // InternalSCL.g:8177:7: (lv_operator_2_0= ruleShiftLeftOperator )
        {
        // InternalSCL.g:8177:7: (lv_operator_2_0= ruleShiftLeftOperator )
        // InternalSCL.g:8178:8: lv_operator_2_0= ruleShiftLeftOperator
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getShiftLeftRightExpressionAccess().getOperatorShiftLeftOperatorEnumRuleCall_1_0_1_0_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_100);
        lv_operator_2_0=ruleShiftLeftOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCL.g:8195:6: ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) )
        // InternalSCL.g:8196:7: (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression )
        {
        // InternalSCL.g:8196:7: (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression )
        // InternalSCL.g:8197:8: lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getShiftLeftRightExpressionAccess().getSubExpressionsShiftRightRightUnsignedExpressionParserRuleCall_1_0_1_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_101);
        lv_subExpressions_3_0=ruleShiftRightRightUnsignedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }

        // InternalSCL.g:8215:5: (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )*
        loop379:
        do {
            int alt379=2;
            int LA379_0 = input.LA(1);

            if ( (LA379_0==63) ) {
                alt379=1;
            }


            switch (alt379) {
        	case 1 :
        	    // InternalSCL.g:8216:6: otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) )
        	    {
        	    otherlv_4=(Token)match(input,63,FollowSets000.FOLLOW_100); if (state.failed) return ;
        	    // InternalSCL.g:8220:6: ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) )
        	    // InternalSCL.g:8221:7: (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression )
        	    {
        	    // InternalSCL.g:8221:7: (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression )
        	    // InternalSCL.g:8222:8: lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression
        	    {
        	    if ( state.backtracking==0 ) {

        	      								newCompositeNode(grammarAccess.getShiftLeftRightExpressionAccess().getSubExpressionsShiftRightRightUnsignedExpressionParserRuleCall_1_0_2_1_0());
        	      							
        	    }
        	    pushFollow(FollowSets000.FOLLOW_101);
        	    lv_subExpressions_5_0=ruleShiftRightRightUnsignedExpression();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop379;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred277_InternalSCL

    // $ANTLR start synpred278_InternalSCL
    public final void synpred278_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        EObject lv_subExpressions_10_0 = null;


        // InternalSCL.g:8294:6: (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) ) )
        // InternalSCL.g:8294:6: otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) )
        {
        otherlv_9=(Token)match(input,64,FollowSets000.FOLLOW_100); if (state.failed) return ;
        // InternalSCL.g:8298:6: ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) )
        // InternalSCL.g:8299:7: (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression )
        {
        // InternalSCL.g:8299:7: (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression )
        // InternalSCL.g:8300:8: lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getShiftLeftRightExpressionAccess().getSubExpressionsShiftLeftRightUnsignedExpressionParserRuleCall_1_1_2_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_10_0=ruleShiftLeftRightUnsignedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred278_InternalSCL

    // $ANTLR start synpred279_InternalSCL
    public final void synpred279_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;


        // InternalSCL.g:8242:4: ( ( () ( ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) ) )* ) )
        // InternalSCL.g:8242:4: ( () ( ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) ) )* )
        {
        // InternalSCL.g:8242:4: ( () ( ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) ) )* )
        // InternalSCL.g:8243:5: () ( ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) ) )*
        {
        // InternalSCL.g:8243:5: ()
        // InternalSCL.g:8244:6: 
        {
        if ( state.backtracking==0 ) {

          						/* */
          					
        }

        }

        // InternalSCL.g:8253:5: ( ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) ) )
        // InternalSCL.g:8254:6: ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) )
        {
        // InternalSCL.g:8254:6: ( (lv_operator_7_0= ruleShiftRightOperator ) )
        // InternalSCL.g:8255:7: (lv_operator_7_0= ruleShiftRightOperator )
        {
        // InternalSCL.g:8255:7: (lv_operator_7_0= ruleShiftRightOperator )
        // InternalSCL.g:8256:8: lv_operator_7_0= ruleShiftRightOperator
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getShiftLeftRightExpressionAccess().getOperatorShiftRightOperatorEnumRuleCall_1_1_1_0_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_100);
        lv_operator_7_0=ruleShiftRightOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCL.g:8273:6: ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) )
        // InternalSCL.g:8274:7: (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression )
        {
        // InternalSCL.g:8274:7: (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression )
        // InternalSCL.g:8275:8: lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getShiftLeftRightExpressionAccess().getSubExpressionsShiftLeftRightUnsignedExpressionParserRuleCall_1_1_1_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_102);
        lv_subExpressions_8_0=ruleShiftLeftRightUnsignedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }

        // InternalSCL.g:8293:5: (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) ) )*
        loop380:
        do {
            int alt380=2;
            int LA380_0 = input.LA(1);

            if ( (LA380_0==64) ) {
                alt380=1;
            }


            switch (alt380) {
        	case 1 :
        	    // InternalSCL.g:8294:6: otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) )
        	    {
        	    otherlv_9=(Token)match(input,64,FollowSets000.FOLLOW_100); if (state.failed) return ;
        	    // InternalSCL.g:8298:6: ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) )
        	    // InternalSCL.g:8299:7: (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression )
        	    {
        	    // InternalSCL.g:8299:7: (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression )
        	    // InternalSCL.g:8300:8: lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression
        	    {
        	    if ( state.backtracking==0 ) {

        	      								newCompositeNode(grammarAccess.getShiftLeftRightExpressionAccess().getSubExpressionsShiftLeftRightUnsignedExpressionParserRuleCall_1_1_2_1_0());
        	      							
        	    }
        	    pushFollow(FollowSets000.FOLLOW_102);
        	    lv_subExpressions_10_0=ruleShiftLeftRightUnsignedExpression();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop380;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred279_InternalSCL

    // $ANTLR start synpred280_InternalSCL
    public final void synpred280_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_subExpressions_5_0 = null;


        // InternalSCL.g:8403:6: (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )
        // InternalSCL.g:8403:6: otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) )
        {
        otherlv_4=(Token)match(input,63,FollowSets000.FOLLOW_100); if (state.failed) return ;
        // InternalSCL.g:8407:6: ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) )
        // InternalSCL.g:8408:7: (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression )
        {
        // InternalSCL.g:8408:7: (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression )
        // InternalSCL.g:8409:8: lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getShiftLeftRightUnsignedExpressionAccess().getSubExpressionsShiftRightRightUnsignedExpressionParserRuleCall_1_0_2_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_5_0=ruleShiftRightRightUnsignedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred280_InternalSCL

    // $ANTLR start synpred281_InternalSCL
    public final void synpred281_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


        // InternalSCL.g:8351:4: ( ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* ) )
        // InternalSCL.g:8351:4: ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* )
        {
        // InternalSCL.g:8351:4: ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* )
        // InternalSCL.g:8352:5: () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )*
        {
        // InternalSCL.g:8352:5: ()
        // InternalSCL.g:8353:6: 
        {
        if ( state.backtracking==0 ) {

          						/* */
          					
        }

        }

        // InternalSCL.g:8362:5: ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) )
        // InternalSCL.g:8363:6: ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) )
        {
        // InternalSCL.g:8363:6: ( (lv_operator_2_0= ruleShiftLeftOperator ) )
        // InternalSCL.g:8364:7: (lv_operator_2_0= ruleShiftLeftOperator )
        {
        // InternalSCL.g:8364:7: (lv_operator_2_0= ruleShiftLeftOperator )
        // InternalSCL.g:8365:8: lv_operator_2_0= ruleShiftLeftOperator
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getShiftLeftRightUnsignedExpressionAccess().getOperatorShiftLeftOperatorEnumRuleCall_1_0_1_0_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_100);
        lv_operator_2_0=ruleShiftLeftOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCL.g:8382:6: ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) )
        // InternalSCL.g:8383:7: (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression )
        {
        // InternalSCL.g:8383:7: (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression )
        // InternalSCL.g:8384:8: lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getShiftLeftRightUnsignedExpressionAccess().getSubExpressionsShiftRightRightUnsignedExpressionParserRuleCall_1_0_1_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_101);
        lv_subExpressions_3_0=ruleShiftRightRightUnsignedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }

        // InternalSCL.g:8402:5: (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )*
        loop381:
        do {
            int alt381=2;
            int LA381_0 = input.LA(1);

            if ( (LA381_0==63) ) {
                alt381=1;
            }


            switch (alt381) {
        	case 1 :
        	    // InternalSCL.g:8403:6: otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) )
        	    {
        	    otherlv_4=(Token)match(input,63,FollowSets000.FOLLOW_100); if (state.failed) return ;
        	    // InternalSCL.g:8407:6: ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) )
        	    // InternalSCL.g:8408:7: (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression )
        	    {
        	    // InternalSCL.g:8408:7: (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression )
        	    // InternalSCL.g:8409:8: lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression
        	    {
        	    if ( state.backtracking==0 ) {

        	      								newCompositeNode(grammarAccess.getShiftLeftRightUnsignedExpressionAccess().getSubExpressionsShiftRightRightUnsignedExpressionParserRuleCall_1_0_2_1_0());
        	      							
        	    }
        	    pushFollow(FollowSets000.FOLLOW_101);
        	    lv_subExpressions_5_0=ruleShiftRightRightUnsignedExpression();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop381;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred281_InternalSCL

    // $ANTLR start synpred282_InternalSCL
    public final void synpred282_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        EObject lv_subExpressions_10_0 = null;


        // InternalSCL.g:8481:6: (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )
        // InternalSCL.g:8481:6: otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) )
        {
        otherlv_9=(Token)match(input,65,FollowSets000.FOLLOW_100); if (state.failed) return ;
        // InternalSCL.g:8485:6: ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) )
        // InternalSCL.g:8486:7: (lv_subExpressions_10_0= ruleShiftLeftRightExpression )
        {
        // InternalSCL.g:8486:7: (lv_subExpressions_10_0= ruleShiftLeftRightExpression )
        // InternalSCL.g:8487:8: lv_subExpressions_10_0= ruleShiftLeftRightExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getShiftLeftRightUnsignedExpressionAccess().getSubExpressionsShiftLeftRightExpressionParserRuleCall_1_1_2_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_10_0=ruleShiftLeftRightExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred282_InternalSCL

    // $ANTLR start synpred283_InternalSCL
    public final void synpred283_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;


        // InternalSCL.g:8429:4: ( ( () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )* ) )
        // InternalSCL.g:8429:4: ( () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )* )
        {
        // InternalSCL.g:8429:4: ( () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )* )
        // InternalSCL.g:8430:5: () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )*
        {
        // InternalSCL.g:8430:5: ()
        // InternalSCL.g:8431:6: 
        {
        if ( state.backtracking==0 ) {

          						/* */
          					
        }

        }

        // InternalSCL.g:8440:5: ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) )
        // InternalSCL.g:8441:6: ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) )
        {
        // InternalSCL.g:8441:6: ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) )
        // InternalSCL.g:8442:7: (lv_operator_7_0= ruleShiftRightUnsignedOperator )
        {
        // InternalSCL.g:8442:7: (lv_operator_7_0= ruleShiftRightUnsignedOperator )
        // InternalSCL.g:8443:8: lv_operator_7_0= ruleShiftRightUnsignedOperator
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getShiftLeftRightUnsignedExpressionAccess().getOperatorShiftRightUnsignedOperatorEnumRuleCall_1_1_1_0_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_100);
        lv_operator_7_0=ruleShiftRightUnsignedOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCL.g:8460:6: ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) )
        // InternalSCL.g:8461:7: (lv_subExpressions_8_0= ruleShiftLeftRightExpression )
        {
        // InternalSCL.g:8461:7: (lv_subExpressions_8_0= ruleShiftLeftRightExpression )
        // InternalSCL.g:8462:8: lv_subExpressions_8_0= ruleShiftLeftRightExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getShiftLeftRightUnsignedExpressionAccess().getSubExpressionsShiftLeftRightExpressionParserRuleCall_1_1_1_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_103);
        lv_subExpressions_8_0=ruleShiftLeftRightExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }

        // InternalSCL.g:8480:5: (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )*
        loop382:
        do {
            int alt382=2;
            int LA382_0 = input.LA(1);

            if ( (LA382_0==65) ) {
                alt382=1;
            }


            switch (alt382) {
        	case 1 :
        	    // InternalSCL.g:8481:6: otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) )
        	    {
        	    otherlv_9=(Token)match(input,65,FollowSets000.FOLLOW_100); if (state.failed) return ;
        	    // InternalSCL.g:8485:6: ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) )
        	    // InternalSCL.g:8486:7: (lv_subExpressions_10_0= ruleShiftLeftRightExpression )
        	    {
        	    // InternalSCL.g:8486:7: (lv_subExpressions_10_0= ruleShiftLeftRightExpression )
        	    // InternalSCL.g:8487:8: lv_subExpressions_10_0= ruleShiftLeftRightExpression
        	    {
        	    if ( state.backtracking==0 ) {

        	      								newCompositeNode(grammarAccess.getShiftLeftRightUnsignedExpressionAccess().getSubExpressionsShiftLeftRightExpressionParserRuleCall_1_1_2_1_0());
        	      							
        	    }
        	    pushFollow(FollowSets000.FOLLOW_103);
        	    lv_subExpressions_10_0=ruleShiftLeftRightExpression();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop382;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred283_InternalSCL

    // $ANTLR start synpred284_InternalSCL
    public final void synpred284_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_subExpressions_5_0 = null;


        // InternalSCL.g:8590:6: (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression ) ) )
        // InternalSCL.g:8590:6: otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression ) )
        {
        otherlv_4=(Token)match(input,64,FollowSets000.FOLLOW_100); if (state.failed) return ;
        // InternalSCL.g:8594:6: ( (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression ) )
        // InternalSCL.g:8595:7: (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression )
        {
        // InternalSCL.g:8595:7: (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression )
        // InternalSCL.g:8596:8: lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getShiftRightRightUnsignedExpressionAccess().getSubExpressionsShiftLeftRightUnsignedExpressionParserRuleCall_1_0_2_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_5_0=ruleShiftLeftRightUnsignedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred284_InternalSCL

    // $ANTLR start synpred285_InternalSCL
    public final void synpred285_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


        // InternalSCL.g:8538:4: ( ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression ) ) )* ) )
        // InternalSCL.g:8538:4: ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression ) ) )* )
        {
        // InternalSCL.g:8538:4: ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression ) ) )* )
        // InternalSCL.g:8539:5: () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression ) ) )*
        {
        // InternalSCL.g:8539:5: ()
        // InternalSCL.g:8540:6: 
        {
        if ( state.backtracking==0 ) {

          						/* */
          					
        }

        }

        // InternalSCL.g:8549:5: ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftLeftRightUnsignedExpression ) ) )
        // InternalSCL.g:8550:6: ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftLeftRightUnsignedExpression ) )
        {
        // InternalSCL.g:8550:6: ( (lv_operator_2_0= ruleShiftRightOperator ) )
        // InternalSCL.g:8551:7: (lv_operator_2_0= ruleShiftRightOperator )
        {
        // InternalSCL.g:8551:7: (lv_operator_2_0= ruleShiftRightOperator )
        // InternalSCL.g:8552:8: lv_operator_2_0= ruleShiftRightOperator
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getShiftRightRightUnsignedExpressionAccess().getOperatorShiftRightOperatorEnumRuleCall_1_0_1_0_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_100);
        lv_operator_2_0=ruleShiftRightOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCL.g:8569:6: ( (lv_subExpressions_3_0= ruleShiftLeftRightUnsignedExpression ) )
        // InternalSCL.g:8570:7: (lv_subExpressions_3_0= ruleShiftLeftRightUnsignedExpression )
        {
        // InternalSCL.g:8570:7: (lv_subExpressions_3_0= ruleShiftLeftRightUnsignedExpression )
        // InternalSCL.g:8571:8: lv_subExpressions_3_0= ruleShiftLeftRightUnsignedExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getShiftRightRightUnsignedExpressionAccess().getSubExpressionsShiftLeftRightUnsignedExpressionParserRuleCall_1_0_1_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_102);
        lv_subExpressions_3_0=ruleShiftLeftRightUnsignedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }

        // InternalSCL.g:8589:5: (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression ) ) )*
        loop383:
        do {
            int alt383=2;
            int LA383_0 = input.LA(1);

            if ( (LA383_0==64) ) {
                alt383=1;
            }


            switch (alt383) {
        	case 1 :
        	    // InternalSCL.g:8590:6: otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression ) )
        	    {
        	    otherlv_4=(Token)match(input,64,FollowSets000.FOLLOW_100); if (state.failed) return ;
        	    // InternalSCL.g:8594:6: ( (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression ) )
        	    // InternalSCL.g:8595:7: (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression )
        	    {
        	    // InternalSCL.g:8595:7: (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression )
        	    // InternalSCL.g:8596:8: lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression
        	    {
        	    if ( state.backtracking==0 ) {

        	      								newCompositeNode(grammarAccess.getShiftRightRightUnsignedExpressionAccess().getSubExpressionsShiftLeftRightUnsignedExpressionParserRuleCall_1_0_2_1_0());
        	      							
        	    }
        	    pushFollow(FollowSets000.FOLLOW_102);
        	    lv_subExpressions_5_0=ruleShiftLeftRightUnsignedExpression();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop383;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred285_InternalSCL

    // $ANTLR start synpred286_InternalSCL
    public final void synpred286_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        EObject lv_subExpressions_10_0 = null;


        // InternalSCL.g:8668:6: (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )
        // InternalSCL.g:8668:6: otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) )
        {
        otherlv_9=(Token)match(input,65,FollowSets000.FOLLOW_100); if (state.failed) return ;
        // InternalSCL.g:8672:6: ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) )
        // InternalSCL.g:8673:7: (lv_subExpressions_10_0= ruleShiftLeftRightExpression )
        {
        // InternalSCL.g:8673:7: (lv_subExpressions_10_0= ruleShiftLeftRightExpression )
        // InternalSCL.g:8674:8: lv_subExpressions_10_0= ruleShiftLeftRightExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getShiftRightRightUnsignedExpressionAccess().getSubExpressionsShiftLeftRightExpressionParserRuleCall_1_1_2_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_10_0=ruleShiftLeftRightExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred286_InternalSCL

    // $ANTLR start synpred287_InternalSCL
    public final void synpred287_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;


        // InternalSCL.g:8616:4: ( ( () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )* ) )
        // InternalSCL.g:8616:4: ( () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )* )
        {
        // InternalSCL.g:8616:4: ( () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )* )
        // InternalSCL.g:8617:5: () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )*
        {
        // InternalSCL.g:8617:5: ()
        // InternalSCL.g:8618:6: 
        {
        if ( state.backtracking==0 ) {

          						/* */
          					
        }

        }

        // InternalSCL.g:8627:5: ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) )
        // InternalSCL.g:8628:6: ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) )
        {
        // InternalSCL.g:8628:6: ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) )
        // InternalSCL.g:8629:7: (lv_operator_7_0= ruleShiftRightUnsignedOperator )
        {
        // InternalSCL.g:8629:7: (lv_operator_7_0= ruleShiftRightUnsignedOperator )
        // InternalSCL.g:8630:8: lv_operator_7_0= ruleShiftRightUnsignedOperator
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getShiftRightRightUnsignedExpressionAccess().getOperatorShiftRightUnsignedOperatorEnumRuleCall_1_1_1_0_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_100);
        lv_operator_7_0=ruleShiftRightUnsignedOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCL.g:8647:6: ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) )
        // InternalSCL.g:8648:7: (lv_subExpressions_8_0= ruleShiftLeftRightExpression )
        {
        // InternalSCL.g:8648:7: (lv_subExpressions_8_0= ruleShiftLeftRightExpression )
        // InternalSCL.g:8649:8: lv_subExpressions_8_0= ruleShiftLeftRightExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getShiftRightRightUnsignedExpressionAccess().getSubExpressionsShiftLeftRightExpressionParserRuleCall_1_1_1_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_103);
        lv_subExpressions_8_0=ruleShiftLeftRightExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }

        // InternalSCL.g:8667:5: (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )*
        loop384:
        do {
            int alt384=2;
            int LA384_0 = input.LA(1);

            if ( (LA384_0==65) ) {
                alt384=1;
            }


            switch (alt384) {
        	case 1 :
        	    // InternalSCL.g:8668:6: otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) )
        	    {
        	    otherlv_9=(Token)match(input,65,FollowSets000.FOLLOW_100); if (state.failed) return ;
        	    // InternalSCL.g:8672:6: ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) )
        	    // InternalSCL.g:8673:7: (lv_subExpressions_10_0= ruleShiftLeftRightExpression )
        	    {
        	    // InternalSCL.g:8673:7: (lv_subExpressions_10_0= ruleShiftLeftRightExpression )
        	    // InternalSCL.g:8674:8: lv_subExpressions_10_0= ruleShiftLeftRightExpression
        	    {
        	    if ( state.backtracking==0 ) {

        	      								newCompositeNode(grammarAccess.getShiftRightRightUnsignedExpressionAccess().getSubExpressionsShiftLeftRightExpressionParserRuleCall_1_1_2_1_0());
        	      							
        	    }
        	    pushFollow(FollowSets000.FOLLOW_103);
        	    lv_subExpressions_10_0=ruleShiftLeftRightExpression();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop384;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred287_InternalSCL

    // $ANTLR start synpred306_InternalSCL
    public final void synpred306_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_subExpressions_5_0 = null;


        // InternalSCL.g:9657:6: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )
        // InternalSCL.g:9657:6: otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) )
        {
        otherlv_4=(Token)match(input,68,FollowSets000.FOLLOW_100); if (state.failed) return ;
        // InternalSCL.g:9661:6: ( (lv_subExpressions_5_0= ruleDivModExpression ) )
        // InternalSCL.g:9662:7: (lv_subExpressions_5_0= ruleDivModExpression )
        {
        // InternalSCL.g:9662:7: (lv_subExpressions_5_0= ruleDivModExpression )
        // InternalSCL.g:9663:8: lv_subExpressions_5_0= ruleDivModExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getMultDivExpressionAccess().getSubExpressionsDivModExpressionParserRuleCall_1_0_2_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_5_0=ruleDivModExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred306_InternalSCL

    // $ANTLR start synpred307_InternalSCL
    public final void synpred307_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


        // InternalSCL.g:9605:4: ( ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* ) )
        // InternalSCL.g:9605:4: ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* )
        {
        // InternalSCL.g:9605:4: ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* )
        // InternalSCL.g:9606:5: () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )*
        {
        // InternalSCL.g:9606:5: ()
        // InternalSCL.g:9607:6: 
        {
        if ( state.backtracking==0 ) {

          						/* */
          					
        }

        }

        // InternalSCL.g:9616:5: ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) )
        // InternalSCL.g:9617:6: ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) )
        {
        // InternalSCL.g:9617:6: ( (lv_operator_2_0= ruleMultOperator ) )
        // InternalSCL.g:9618:7: (lv_operator_2_0= ruleMultOperator )
        {
        // InternalSCL.g:9618:7: (lv_operator_2_0= ruleMultOperator )
        // InternalSCL.g:9619:8: lv_operator_2_0= ruleMultOperator
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getMultDivExpressionAccess().getOperatorMultOperatorEnumRuleCall_1_0_1_0_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_100);
        lv_operator_2_0=ruleMultOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCL.g:9636:6: ( (lv_subExpressions_3_0= ruleDivModExpression ) )
        // InternalSCL.g:9637:7: (lv_subExpressions_3_0= ruleDivModExpression )
        {
        // InternalSCL.g:9637:7: (lv_subExpressions_3_0= ruleDivModExpression )
        // InternalSCL.g:9638:8: lv_subExpressions_3_0= ruleDivModExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getMultDivExpressionAccess().getSubExpressionsDivModExpressionParserRuleCall_1_0_1_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_111);
        lv_subExpressions_3_0=ruleDivModExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }

        // InternalSCL.g:9656:5: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )*
        loop394:
        do {
            int alt394=2;
            int LA394_0 = input.LA(1);

            if ( (LA394_0==68) ) {
                alt394=1;
            }


            switch (alt394) {
        	case 1 :
        	    // InternalSCL.g:9657:6: otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) )
        	    {
        	    otherlv_4=(Token)match(input,68,FollowSets000.FOLLOW_100); if (state.failed) return ;
        	    // InternalSCL.g:9661:6: ( (lv_subExpressions_5_0= ruleDivModExpression ) )
        	    // InternalSCL.g:9662:7: (lv_subExpressions_5_0= ruleDivModExpression )
        	    {
        	    // InternalSCL.g:9662:7: (lv_subExpressions_5_0= ruleDivModExpression )
        	    // InternalSCL.g:9663:8: lv_subExpressions_5_0= ruleDivModExpression
        	    {
        	    if ( state.backtracking==0 ) {

        	      								newCompositeNode(grammarAccess.getMultDivExpressionAccess().getSubExpressionsDivModExpressionParserRuleCall_1_0_2_1_0());
        	      							
        	    }
        	    pushFollow(FollowSets000.FOLLOW_111);
        	    lv_subExpressions_5_0=ruleDivModExpression();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop394;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred307_InternalSCL

    // $ANTLR start synpred308_InternalSCL
    public final void synpred308_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        EObject lv_subExpressions_10_0 = null;


        // InternalSCL.g:9735:6: (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) ) )
        // InternalSCL.g:9735:6: otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) )
        {
        otherlv_9=(Token)match(input,69,FollowSets000.FOLLOW_100); if (state.failed) return ;
        // InternalSCL.g:9739:6: ( (lv_subExpressions_10_0= ruleMultModExpression ) )
        // InternalSCL.g:9740:7: (lv_subExpressions_10_0= ruleMultModExpression )
        {
        // InternalSCL.g:9740:7: (lv_subExpressions_10_0= ruleMultModExpression )
        // InternalSCL.g:9741:8: lv_subExpressions_10_0= ruleMultModExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getMultDivExpressionAccess().getSubExpressionsMultModExpressionParserRuleCall_1_1_2_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_10_0=ruleMultModExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred308_InternalSCL

    // $ANTLR start synpred309_InternalSCL
    public final void synpred309_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;


        // InternalSCL.g:9683:4: ( ( () ( ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) ) )* ) )
        // InternalSCL.g:9683:4: ( () ( ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) ) )* )
        {
        // InternalSCL.g:9683:4: ( () ( ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) ) )* )
        // InternalSCL.g:9684:5: () ( ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) ) )*
        {
        // InternalSCL.g:9684:5: ()
        // InternalSCL.g:9685:6: 
        {
        if ( state.backtracking==0 ) {

          						/* */
          					
        }

        }

        // InternalSCL.g:9694:5: ( ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) ) )
        // InternalSCL.g:9695:6: ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) )
        {
        // InternalSCL.g:9695:6: ( (lv_operator_7_0= ruleDivOperator ) )
        // InternalSCL.g:9696:7: (lv_operator_7_0= ruleDivOperator )
        {
        // InternalSCL.g:9696:7: (lv_operator_7_0= ruleDivOperator )
        // InternalSCL.g:9697:8: lv_operator_7_0= ruleDivOperator
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getMultDivExpressionAccess().getOperatorDivOperatorEnumRuleCall_1_1_1_0_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_100);
        lv_operator_7_0=ruleDivOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCL.g:9714:6: ( (lv_subExpressions_8_0= ruleMultModExpression ) )
        // InternalSCL.g:9715:7: (lv_subExpressions_8_0= ruleMultModExpression )
        {
        // InternalSCL.g:9715:7: (lv_subExpressions_8_0= ruleMultModExpression )
        // InternalSCL.g:9716:8: lv_subExpressions_8_0= ruleMultModExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getMultDivExpressionAccess().getSubExpressionsMultModExpressionParserRuleCall_1_1_1_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_112);
        lv_subExpressions_8_0=ruleMultModExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }

        // InternalSCL.g:9734:5: (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) ) )*
        loop395:
        do {
            int alt395=2;
            int LA395_0 = input.LA(1);

            if ( (LA395_0==69) ) {
                alt395=1;
            }


            switch (alt395) {
        	case 1 :
        	    // InternalSCL.g:9735:6: otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) )
        	    {
        	    otherlv_9=(Token)match(input,69,FollowSets000.FOLLOW_100); if (state.failed) return ;
        	    // InternalSCL.g:9739:6: ( (lv_subExpressions_10_0= ruleMultModExpression ) )
        	    // InternalSCL.g:9740:7: (lv_subExpressions_10_0= ruleMultModExpression )
        	    {
        	    // InternalSCL.g:9740:7: (lv_subExpressions_10_0= ruleMultModExpression )
        	    // InternalSCL.g:9741:8: lv_subExpressions_10_0= ruleMultModExpression
        	    {
        	    if ( state.backtracking==0 ) {

        	      								newCompositeNode(grammarAccess.getMultDivExpressionAccess().getSubExpressionsMultModExpressionParserRuleCall_1_1_2_1_0());
        	      							
        	    }
        	    pushFollow(FollowSets000.FOLLOW_112);
        	    lv_subExpressions_10_0=ruleMultModExpression();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop395;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred309_InternalSCL

    // $ANTLR start synpred310_InternalSCL
    public final void synpred310_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_subExpressions_5_0 = null;


        // InternalSCL.g:9844:6: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )
        // InternalSCL.g:9844:6: otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) )
        {
        otherlv_4=(Token)match(input,68,FollowSets000.FOLLOW_100); if (state.failed) return ;
        // InternalSCL.g:9848:6: ( (lv_subExpressions_5_0= ruleDivModExpression ) )
        // InternalSCL.g:9849:7: (lv_subExpressions_5_0= ruleDivModExpression )
        {
        // InternalSCL.g:9849:7: (lv_subExpressions_5_0= ruleDivModExpression )
        // InternalSCL.g:9850:8: lv_subExpressions_5_0= ruleDivModExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getMultModExpressionAccess().getSubExpressionsDivModExpressionParserRuleCall_1_0_2_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_5_0=ruleDivModExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred310_InternalSCL

    // $ANTLR start synpred311_InternalSCL
    public final void synpred311_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


        // InternalSCL.g:9792:4: ( ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* ) )
        // InternalSCL.g:9792:4: ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* )
        {
        // InternalSCL.g:9792:4: ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* )
        // InternalSCL.g:9793:5: () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )*
        {
        // InternalSCL.g:9793:5: ()
        // InternalSCL.g:9794:6: 
        {
        if ( state.backtracking==0 ) {

          						/* */
          					
        }

        }

        // InternalSCL.g:9803:5: ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) )
        // InternalSCL.g:9804:6: ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) )
        {
        // InternalSCL.g:9804:6: ( (lv_operator_2_0= ruleMultOperator ) )
        // InternalSCL.g:9805:7: (lv_operator_2_0= ruleMultOperator )
        {
        // InternalSCL.g:9805:7: (lv_operator_2_0= ruleMultOperator )
        // InternalSCL.g:9806:8: lv_operator_2_0= ruleMultOperator
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getMultModExpressionAccess().getOperatorMultOperatorEnumRuleCall_1_0_1_0_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_100);
        lv_operator_2_0=ruleMultOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCL.g:9823:6: ( (lv_subExpressions_3_0= ruleDivModExpression ) )
        // InternalSCL.g:9824:7: (lv_subExpressions_3_0= ruleDivModExpression )
        {
        // InternalSCL.g:9824:7: (lv_subExpressions_3_0= ruleDivModExpression )
        // InternalSCL.g:9825:8: lv_subExpressions_3_0= ruleDivModExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getMultModExpressionAccess().getSubExpressionsDivModExpressionParserRuleCall_1_0_1_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_111);
        lv_subExpressions_3_0=ruleDivModExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }

        // InternalSCL.g:9843:5: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )*
        loop396:
        do {
            int alt396=2;
            int LA396_0 = input.LA(1);

            if ( (LA396_0==68) ) {
                alt396=1;
            }


            switch (alt396) {
        	case 1 :
        	    // InternalSCL.g:9844:6: otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) )
        	    {
        	    otherlv_4=(Token)match(input,68,FollowSets000.FOLLOW_100); if (state.failed) return ;
        	    // InternalSCL.g:9848:6: ( (lv_subExpressions_5_0= ruleDivModExpression ) )
        	    // InternalSCL.g:9849:7: (lv_subExpressions_5_0= ruleDivModExpression )
        	    {
        	    // InternalSCL.g:9849:7: (lv_subExpressions_5_0= ruleDivModExpression )
        	    // InternalSCL.g:9850:8: lv_subExpressions_5_0= ruleDivModExpression
        	    {
        	    if ( state.backtracking==0 ) {

        	      								newCompositeNode(grammarAccess.getMultModExpressionAccess().getSubExpressionsDivModExpressionParserRuleCall_1_0_2_1_0());
        	      							
        	    }
        	    pushFollow(FollowSets000.FOLLOW_111);
        	    lv_subExpressions_5_0=ruleDivModExpression();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop396;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred311_InternalSCL

    // $ANTLR start synpred312_InternalSCL
    public final void synpred312_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        EObject lv_subExpressions_10_0 = null;


        // InternalSCL.g:9922:6: (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )
        // InternalSCL.g:9922:6: otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) )
        {
        otherlv_9=(Token)match(input,70,FollowSets000.FOLLOW_100); if (state.failed) return ;
        // InternalSCL.g:9926:6: ( (lv_subExpressions_10_0= ruleMultDivExpression ) )
        // InternalSCL.g:9927:7: (lv_subExpressions_10_0= ruleMultDivExpression )
        {
        // InternalSCL.g:9927:7: (lv_subExpressions_10_0= ruleMultDivExpression )
        // InternalSCL.g:9928:8: lv_subExpressions_10_0= ruleMultDivExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getMultModExpressionAccess().getSubExpressionsMultDivExpressionParserRuleCall_1_1_2_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_10_0=ruleMultDivExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred312_InternalSCL

    // $ANTLR start synpred313_InternalSCL
    public final void synpred313_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;


        // InternalSCL.g:9870:4: ( ( () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )* ) )
        // InternalSCL.g:9870:4: ( () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )* )
        {
        // InternalSCL.g:9870:4: ( () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )* )
        // InternalSCL.g:9871:5: () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )*
        {
        // InternalSCL.g:9871:5: ()
        // InternalSCL.g:9872:6: 
        {
        if ( state.backtracking==0 ) {

          						/* */
          					
        }

        }

        // InternalSCL.g:9881:5: ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) )
        // InternalSCL.g:9882:6: ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) )
        {
        // InternalSCL.g:9882:6: ( (lv_operator_7_0= ruleModOperator ) )
        // InternalSCL.g:9883:7: (lv_operator_7_0= ruleModOperator )
        {
        // InternalSCL.g:9883:7: (lv_operator_7_0= ruleModOperator )
        // InternalSCL.g:9884:8: lv_operator_7_0= ruleModOperator
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getMultModExpressionAccess().getOperatorModOperatorEnumRuleCall_1_1_1_0_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_100);
        lv_operator_7_0=ruleModOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCL.g:9901:6: ( (lv_subExpressions_8_0= ruleMultDivExpression ) )
        // InternalSCL.g:9902:7: (lv_subExpressions_8_0= ruleMultDivExpression )
        {
        // InternalSCL.g:9902:7: (lv_subExpressions_8_0= ruleMultDivExpression )
        // InternalSCL.g:9903:8: lv_subExpressions_8_0= ruleMultDivExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getMultModExpressionAccess().getSubExpressionsMultDivExpressionParserRuleCall_1_1_1_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_113);
        lv_subExpressions_8_0=ruleMultDivExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }

        // InternalSCL.g:9921:5: (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )*
        loop397:
        do {
            int alt397=2;
            int LA397_0 = input.LA(1);

            if ( (LA397_0==70) ) {
                alt397=1;
            }


            switch (alt397) {
        	case 1 :
        	    // InternalSCL.g:9922:6: otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) )
        	    {
        	    otherlv_9=(Token)match(input,70,FollowSets000.FOLLOW_100); if (state.failed) return ;
        	    // InternalSCL.g:9926:6: ( (lv_subExpressions_10_0= ruleMultDivExpression ) )
        	    // InternalSCL.g:9927:7: (lv_subExpressions_10_0= ruleMultDivExpression )
        	    {
        	    // InternalSCL.g:9927:7: (lv_subExpressions_10_0= ruleMultDivExpression )
        	    // InternalSCL.g:9928:8: lv_subExpressions_10_0= ruleMultDivExpression
        	    {
        	    if ( state.backtracking==0 ) {

        	      								newCompositeNode(grammarAccess.getMultModExpressionAccess().getSubExpressionsMultDivExpressionParserRuleCall_1_1_2_1_0());
        	      							
        	    }
        	    pushFollow(FollowSets000.FOLLOW_113);
        	    lv_subExpressions_10_0=ruleMultDivExpression();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop397;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred313_InternalSCL

    // $ANTLR start synpred314_InternalSCL
    public final void synpred314_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_subExpressions_5_0 = null;


        // InternalSCL.g:10031:6: (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleMultModExpression ) ) )
        // InternalSCL.g:10031:6: otherlv_4= '/' ( (lv_subExpressions_5_0= ruleMultModExpression ) )
        {
        otherlv_4=(Token)match(input,69,FollowSets000.FOLLOW_100); if (state.failed) return ;
        // InternalSCL.g:10035:6: ( (lv_subExpressions_5_0= ruleMultModExpression ) )
        // InternalSCL.g:10036:7: (lv_subExpressions_5_0= ruleMultModExpression )
        {
        // InternalSCL.g:10036:7: (lv_subExpressions_5_0= ruleMultModExpression )
        // InternalSCL.g:10037:8: lv_subExpressions_5_0= ruleMultModExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getDivModExpressionAccess().getSubExpressionsMultModExpressionParserRuleCall_1_0_2_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_5_0=ruleMultModExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred314_InternalSCL

    // $ANTLR start synpred315_InternalSCL
    public final void synpred315_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


        // InternalSCL.g:9979:4: ( ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleMultModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleMultModExpression ) ) )* ) )
        // InternalSCL.g:9979:4: ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleMultModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleMultModExpression ) ) )* )
        {
        // InternalSCL.g:9979:4: ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleMultModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleMultModExpression ) ) )* )
        // InternalSCL.g:9980:5: () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleMultModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleMultModExpression ) ) )*
        {
        // InternalSCL.g:9980:5: ()
        // InternalSCL.g:9981:6: 
        {
        if ( state.backtracking==0 ) {

          						/* */
          					
        }

        }

        // InternalSCL.g:9990:5: ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleMultModExpression ) ) )
        // InternalSCL.g:9991:6: ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleMultModExpression ) )
        {
        // InternalSCL.g:9991:6: ( (lv_operator_2_0= ruleDivOperator ) )
        // InternalSCL.g:9992:7: (lv_operator_2_0= ruleDivOperator )
        {
        // InternalSCL.g:9992:7: (lv_operator_2_0= ruleDivOperator )
        // InternalSCL.g:9993:8: lv_operator_2_0= ruleDivOperator
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getDivModExpressionAccess().getOperatorDivOperatorEnumRuleCall_1_0_1_0_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_100);
        lv_operator_2_0=ruleDivOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCL.g:10010:6: ( (lv_subExpressions_3_0= ruleMultModExpression ) )
        // InternalSCL.g:10011:7: (lv_subExpressions_3_0= ruleMultModExpression )
        {
        // InternalSCL.g:10011:7: (lv_subExpressions_3_0= ruleMultModExpression )
        // InternalSCL.g:10012:8: lv_subExpressions_3_0= ruleMultModExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getDivModExpressionAccess().getSubExpressionsMultModExpressionParserRuleCall_1_0_1_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_112);
        lv_subExpressions_3_0=ruleMultModExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }

        // InternalSCL.g:10030:5: (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleMultModExpression ) ) )*
        loop398:
        do {
            int alt398=2;
            int LA398_0 = input.LA(1);

            if ( (LA398_0==69) ) {
                alt398=1;
            }


            switch (alt398) {
        	case 1 :
        	    // InternalSCL.g:10031:6: otherlv_4= '/' ( (lv_subExpressions_5_0= ruleMultModExpression ) )
        	    {
        	    otherlv_4=(Token)match(input,69,FollowSets000.FOLLOW_100); if (state.failed) return ;
        	    // InternalSCL.g:10035:6: ( (lv_subExpressions_5_0= ruleMultModExpression ) )
        	    // InternalSCL.g:10036:7: (lv_subExpressions_5_0= ruleMultModExpression )
        	    {
        	    // InternalSCL.g:10036:7: (lv_subExpressions_5_0= ruleMultModExpression )
        	    // InternalSCL.g:10037:8: lv_subExpressions_5_0= ruleMultModExpression
        	    {
        	    if ( state.backtracking==0 ) {

        	      								newCompositeNode(grammarAccess.getDivModExpressionAccess().getSubExpressionsMultModExpressionParserRuleCall_1_0_2_1_0());
        	      							
        	    }
        	    pushFollow(FollowSets000.FOLLOW_112);
        	    lv_subExpressions_5_0=ruleMultModExpression();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop398;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred315_InternalSCL

    // $ANTLR start synpred316_InternalSCL
    public final void synpred316_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        EObject lv_subExpressions_10_0 = null;


        // InternalSCL.g:10109:6: (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )
        // InternalSCL.g:10109:6: otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) )
        {
        otherlv_9=(Token)match(input,70,FollowSets000.FOLLOW_100); if (state.failed) return ;
        // InternalSCL.g:10113:6: ( (lv_subExpressions_10_0= ruleMultDivExpression ) )
        // InternalSCL.g:10114:7: (lv_subExpressions_10_0= ruleMultDivExpression )
        {
        // InternalSCL.g:10114:7: (lv_subExpressions_10_0= ruleMultDivExpression )
        // InternalSCL.g:10115:8: lv_subExpressions_10_0= ruleMultDivExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getDivModExpressionAccess().getSubExpressionsMultDivExpressionParserRuleCall_1_1_2_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_10_0=ruleMultDivExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred316_InternalSCL

    // $ANTLR start synpred317_InternalSCL
    public final void synpred317_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;


        // InternalSCL.g:10057:4: ( ( () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )* ) )
        // InternalSCL.g:10057:4: ( () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )* )
        {
        // InternalSCL.g:10057:4: ( () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )* )
        // InternalSCL.g:10058:5: () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )*
        {
        // InternalSCL.g:10058:5: ()
        // InternalSCL.g:10059:6: 
        {
        if ( state.backtracking==0 ) {

          						/* */
          					
        }

        }

        // InternalSCL.g:10068:5: ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) )
        // InternalSCL.g:10069:6: ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) )
        {
        // InternalSCL.g:10069:6: ( (lv_operator_7_0= ruleModOperator ) )
        // InternalSCL.g:10070:7: (lv_operator_7_0= ruleModOperator )
        {
        // InternalSCL.g:10070:7: (lv_operator_7_0= ruleModOperator )
        // InternalSCL.g:10071:8: lv_operator_7_0= ruleModOperator
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getDivModExpressionAccess().getOperatorModOperatorEnumRuleCall_1_1_1_0_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_100);
        lv_operator_7_0=ruleModOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCL.g:10088:6: ( (lv_subExpressions_8_0= ruleMultDivExpression ) )
        // InternalSCL.g:10089:7: (lv_subExpressions_8_0= ruleMultDivExpression )
        {
        // InternalSCL.g:10089:7: (lv_subExpressions_8_0= ruleMultDivExpression )
        // InternalSCL.g:10090:8: lv_subExpressions_8_0= ruleMultDivExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getDivModExpressionAccess().getSubExpressionsMultDivExpressionParserRuleCall_1_1_1_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_113);
        lv_subExpressions_8_0=ruleMultDivExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }

        // InternalSCL.g:10108:5: (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )*
        loop399:
        do {
            int alt399=2;
            int LA399_0 = input.LA(1);

            if ( (LA399_0==70) ) {
                alt399=1;
            }


            switch (alt399) {
        	case 1 :
        	    // InternalSCL.g:10109:6: otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) )
        	    {
        	    otherlv_9=(Token)match(input,70,FollowSets000.FOLLOW_100); if (state.failed) return ;
        	    // InternalSCL.g:10113:6: ( (lv_subExpressions_10_0= ruleMultDivExpression ) )
        	    // InternalSCL.g:10114:7: (lv_subExpressions_10_0= ruleMultDivExpression )
        	    {
        	    // InternalSCL.g:10114:7: (lv_subExpressions_10_0= ruleMultDivExpression )
        	    // InternalSCL.g:10115:8: lv_subExpressions_10_0= ruleMultDivExpression
        	    {
        	    if ( state.backtracking==0 ) {

        	      								newCompositeNode(grammarAccess.getDivModExpressionAccess().getSubExpressionsMultDivExpressionParserRuleCall_1_1_2_1_0());
        	      							
        	    }
        	    pushFollow(FollowSets000.FOLLOW_113);
        	    lv_subExpressions_10_0=ruleMultDivExpression();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop399;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred317_InternalSCL

    // $ANTLR start synpred319_InternalSCL
    public final void synpred319_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_subExpressions_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;


        // InternalSCL.g:10235:3: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) ) )
        // InternalSCL.g:10235:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )
        {
        // InternalSCL.g:10235:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )
        // InternalSCL.g:10236:4: () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
        {
        // InternalSCL.g:10236:4: ()
        // InternalSCL.g:10237:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalSCL.g:10246:4: ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) )
        // InternalSCL.g:10247:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
        {
        // InternalSCL.g:10247:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
        // InternalSCL.g:10248:6: lv_subExpressions_1_0= ruleAtomicValuedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_117);
        lv_subExpressions_1_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCL.g:10265:4: ( (lv_operator_2_0= ruleConditionalOperator ) )
        // InternalSCL.g:10266:5: (lv_operator_2_0= ruleConditionalOperator )
        {
        // InternalSCL.g:10266:5: (lv_operator_2_0= ruleConditionalOperator )
        // InternalSCL.g:10267:6: lv_operator_2_0= ruleConditionalOperator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTernaryOperationAccess().getOperatorConditionalOperatorEnumRuleCall_0_2_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_22);
        lv_operator_2_0=ruleConditionalOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCL.g:10284:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
        // InternalSCL.g:10285:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
        {
        // InternalSCL.g:10285:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
        // InternalSCL.g:10286:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_3_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_13);
        lv_subExpressions_3_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_4=(Token)match(input,18,FollowSets000.FOLLOW_22); if (state.failed) return ;
        // InternalSCL.g:10307:4: ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
        // InternalSCL.g:10308:5: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
        {
        // InternalSCL.g:10308:5: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
        // InternalSCL.g:10309:6: lv_subExpressions_5_0= ruleAtomicValuedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_5_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_5_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred319_InternalSCL

    // $ANTLR start synpred320_InternalSCL
    public final void synpred320_InternalSCL_fragment() throws RecognitionException {   
        EObject lv_subExpressions_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;


        // InternalSCL.g:10358:3: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) )
        // InternalSCL.g:10358:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
        {
        // InternalSCL.g:10358:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
        // InternalSCL.g:10359:4: () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
        {
        // InternalSCL.g:10359:4: ()
        // InternalSCL.g:10360:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalSCL.g:10369:4: ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) )
        // InternalSCL.g:10370:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
        {
        // InternalSCL.g:10370:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
        // InternalSCL.g:10371:6: lv_subExpressions_1_0= ruleAtomicValuedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFBYExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_118);
        lv_subExpressions_1_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCL.g:10388:4: ( (lv_operator_2_0= ruleFBYOperator ) )
        // InternalSCL.g:10389:5: (lv_operator_2_0= ruleFBYOperator )
        {
        // InternalSCL.g:10389:5: (lv_operator_2_0= ruleFBYOperator )
        // InternalSCL.g:10390:6: lv_operator_2_0= ruleFBYOperator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFBYExpressionAccess().getOperatorFBYOperatorEnumRuleCall_0_2_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_22);
        lv_operator_2_0=ruleFBYOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalSCL.g:10407:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
        // InternalSCL.g:10408:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
        {
        // InternalSCL.g:10408:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
        // InternalSCL.g:10409:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFBYExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_3_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_3_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred320_InternalSCL

    // $ANTLR start synpred323_InternalSCL
    public final void synpred323_InternalSCL_fragment() throws RecognitionException {   
        EObject this_ReferenceCall_4 = null;


        // InternalSCL.g:10492:3: (this_ReferenceCall_4= ruleReferenceCall )
        // InternalSCL.g:10492:3: this_ReferenceCall_4= ruleReferenceCall
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ReferenceCall_4=ruleReferenceCall();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred323_InternalSCL

    // $ANTLR start synpred327_InternalSCL
    public final void synpred327_InternalSCL_fragment() throws RecognitionException {   
        EObject this_ValuedObjectTestExpression_8 = null;


        // InternalSCL.g:10540:3: (this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression )
        // InternalSCL.g:10540:3: this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedObjectTestExpression_8=ruleValuedObjectTestExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred327_InternalSCL

    // $ANTLR start synpred332_InternalSCL
    public final void synpred332_InternalSCL_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject this_ValuedExpression_5 = null;


        // InternalSCL.g:10630:3: ( (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) )
        // InternalSCL.g:10630:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
        {
        // InternalSCL.g:10630:3: (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' )
        // InternalSCL.g:10631:4: otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')'
        {
        otherlv_4=(Token)match(input,34,FollowSets000.FOLLOW_100); if (state.failed) return ;
        pushFollow(FollowSets000.FOLLOW_87);
        this_ValuedExpression_5=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;
        otherlv_6=(Token)match(input,36,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred332_InternalSCL

    // $ANTLR start synpred350_InternalSCL
    public final void synpred350_InternalSCL_fragment() throws RecognitionException {   
        EObject this_BoolExpression_0 = null;


        // InternalSCL.g:11638:3: (this_BoolExpression_0= ruleBoolExpression )
        // InternalSCL.g:11638:3: this_BoolExpression_0= ruleBoolExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_BoolExpression_0=ruleBoolExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred350_InternalSCL

    // $ANTLR start synpred351_InternalSCL
    public final void synpred351_InternalSCL_fragment() throws RecognitionException {   
        EObject this_ValuedExpression_1 = null;


        // InternalSCL.g:11650:3: (this_ValuedExpression_1= ruleValuedExpression )
        // InternalSCL.g:11650:3: this_ValuedExpression_1= ruleValuedExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedExpression_1=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred351_InternalSCL

    // $ANTLR start synpred363_InternalSCL
    public final void synpred363_InternalSCL_fragment() throws RecognitionException {   
        EObject this_Annotation_0 = null;


        // InternalSCL.g:12280:3: (this_Annotation_0= superAnnotation )
        // InternalSCL.g:12280:3: this_Annotation_0= superAnnotation
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Annotation_0=superAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred363_InternalSCL

    // $ANTLR start synpred366_InternalSCL
    public final void synpred366_InternalSCL_fragment() throws RecognitionException {   
        EObject this_KeyStringValueAnnotation_1 = null;


        // InternalSCL.g:12376:3: (this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation )
        // InternalSCL.g:12376:3: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred366_InternalSCL

    // Delegated rules

    public final boolean synpred309_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred309_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred37_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred37_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred327_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred327_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred77_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred77_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred34_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred276_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred276_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred255_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred255_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred306_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred306_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred307_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred307_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred308_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred308_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred218_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred218_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred219_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred219_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred351_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred351_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred225_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred225_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred224_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred224_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred267_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred267_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred278_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred278_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred277_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred277_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred279_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred279_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred350_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred350_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred323_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred323_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred312_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred312_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred313_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred313_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred366_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred366_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred363_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred363_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred320_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred320_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred332_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred332_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred310_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred310_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred311_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred311_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred168_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred168_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred103_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred103_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred104_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred104_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred88_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred88_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred280_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred280_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred316_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred316_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred101_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred101_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred282_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred282_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred314_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred314_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred315_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred315_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred281_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred281_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred102_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred102_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred284_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred284_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred221_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred221_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred220_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred220_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred222_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred222_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred223_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred223_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred283_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred283_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred287_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred287_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred317_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred317_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred286_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred286_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred319_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred319_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred285_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred285_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred180_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred180_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred92_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred92_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred74_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred74_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred182_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred182_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred98_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred98_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred153_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred153_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred85_InternalSCL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred85_InternalSCL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA5 dfa5 = new DFA5(this);
    protected DFA6 dfa6 = new DFA6(this);
    protected DFA7 dfa7 = new DFA7(this);
    protected DFA14 dfa14 = new DFA14(this);
    protected DFA18 dfa18 = new DFA18(this);
    protected DFA23 dfa23 = new DFA23(this);
    protected DFA25 dfa25 = new DFA25(this);
    protected DFA27 dfa27 = new DFA27(this);
    protected DFA31 dfa31 = new DFA31(this);
    protected DFA40 dfa40 = new DFA40(this);
    protected DFA37 dfa37 = new DFA37(this);
    protected DFA44 dfa44 = new DFA44(this);
    protected DFA62 dfa62 = new DFA62(this);
    protected DFA72 dfa72 = new DFA72(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA77 dfa77 = new DFA77(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA86 dfa86 = new DFA86(this);
    protected DFA87 dfa87 = new DFA87(this);
    protected DFA108 dfa108 = new DFA108(this);
    protected DFA134 dfa134 = new DFA134(this);
    protected DFA149 dfa149 = new DFA149(this);
    protected DFA161 dfa161 = new DFA161(this);
    protected DFA163 dfa163 = new DFA163(this);
    protected DFA199 dfa199 = new DFA199(this);
    protected DFA201 dfa201 = new DFA201(this);
    protected DFA204 dfa204 = new DFA204(this);
    protected DFA207 dfa207 = new DFA207(this);
    protected DFA210 dfa210 = new DFA210(this);
    protected DFA217 dfa217 = new DFA217(this);
    protected DFA224 dfa224 = new DFA224(this);
    protected DFA229 dfa229 = new DFA229(this);
    protected DFA241 dfa241 = new DFA241(this);
    protected DFA250 dfa250 = new DFA250(this);
    protected DFA253 dfa253 = new DFA253(this);
    protected DFA256 dfa256 = new DFA256(this);
    protected DFA274 dfa274 = new DFA274(this);
    protected DFA277 dfa277 = new DFA277(this);
    protected DFA280 dfa280 = new DFA280(this);
    protected DFA282 dfa282 = new DFA282(this);
    protected DFA283 dfa283 = new DFA283(this);
    protected DFA284 dfa284 = new DFA284(this);
    protected DFA285 dfa285 = new DFA285(this);
    protected DFA303 dfa303 = new DFA303(this);
    protected DFA310 dfa310 = new DFA310(this);
    protected DFA311 dfa311 = new DFA311(this);
    protected DFA312 dfa312 = new DFA312(this);
    protected DFA313 dfa313 = new DFA313(this);
    protected DFA314 dfa314 = new DFA314(this);
    protected DFA315 dfa315 = new DFA315(this);
    protected DFA316 dfa316 = new DFA316(this);
    protected DFA342 dfa342 = new DFA342(this);
    static final String dfa_1s = "\41\uffff";
    static final String dfa_2s = "\1\3\40\uffff";
    static final String dfa_3s = "\1\4\2\0\36\uffff";
    static final String dfa_4s = "\1\165\2\0\36\uffff";
    static final String dfa_5s = "\3\uffff\1\2\11\uffff\1\1\23\uffff";
    static final String dfa_6s = "\1\uffff\1\0\1\1\36\uffff}>";
    static final String[] dfa_7s = {
            "\1\3\5\uffff\1\1\6\uffff\1\3\1\uffff\1\3\1\uffff\1\3\1\15\3\3\4\uffff\1\3\2\uffff\1\3\13\uffff\11\15\26\uffff\1\2\34\uffff\7\15\3\uffff\3\15",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA5 extends DFA {

        public DFA5(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 5;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "()* loopback of 190:3: ( (lv_declarations_4_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA5_1 = input.LA(1);

                         
                        int index5_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalSCL()) ) {s = 13;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index5_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA5_2 = input.LA(1);

                         
                        int index5_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalSCL()) ) {s = 13;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index5_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 5, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\15\uffff";
    static final String dfa_9s = "\1\1\14\uffff";
    static final String dfa_10s = "\1\4\1\uffff\2\0\11\uffff";
    static final String dfa_11s = "\1\114\1\uffff\2\0\11\uffff";
    static final String dfa_12s = "\1\uffff\1\2\3\uffff\1\1\7\uffff";
    static final String dfa_13s = "\2\uffff\1\0\1\1\11\uffff}>";
    static final String[] dfa_14s = {
            "\1\5\5\uffff\1\2\6\uffff\1\1\1\uffff\1\5\1\uffff\1\5\1\uffff\3\5\4\uffff\1\5\2\uffff\1\5\52\uffff\1\3",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA6 extends DFA {

        public DFA6(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 6;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "()* loopback of 209:3: ( (lv_statements_5_0= ruleStatement ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA6_2 = input.LA(1);

                         
                        int index6_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_InternalSCL()) ) {s = 5;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index6_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA6_3 = input.LA(1);

                         
                        int index6_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred6_InternalSCL()) ) {s = 5;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index6_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 6, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_15s = "\20\uffff";
    static final String dfa_16s = "\1\4\4\0\13\uffff";
    static final String dfa_17s = "\1\114\4\0\13\uffff";
    static final String dfa_18s = "\5\uffff\1\6\1\7\1\10\1\11\1\12\1\13\1\1\1\2\1\3\1\4\1\5";
    static final String dfa_19s = "\1\uffff\1\0\1\1\1\2\1\3\13\uffff}>";
    static final String[] dfa_20s = {
            "\1\3\5\uffff\1\1\10\uffff\1\7\1\uffff\1\5\1\uffff\1\12\1\4\1\11\4\uffff\1\6\2\uffff\1\10\52\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA7 extends DFA {

        public DFA7(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 7;
            this.eot = dfa_15;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "246:2: (this_SclAssignment_0= ruleSclAssignment | this_SclPostfixAssignment_1= ruleSclPostfixAssignment | this_Label_2= ruleLabel | this_Conditional_3= ruleConditional | this_LegacyConditional_4= ruleLegacyConditional | this_Goto_5= ruleGoto | this_Parallel_6= ruleParallel | this_Pause_7= rulePause | this_ModuleCall_8= ruleModuleCall | this_ScopeStatement_9= ruleScopeStatement | this_Return_10= ruleReturn )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA7_1 = input.LA(1);

                         
                        int index7_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalSCL()) ) {s = 11;}

                        else if ( (synpred8_InternalSCL()) ) {s = 12;}

                        else if ( (synpred9_InternalSCL()) ) {s = 13;}

                        else if ( (synpred10_InternalSCL()) ) {s = 14;}

                        else if ( (synpred11_InternalSCL()) ) {s = 15;}

                        else if ( (synpred12_InternalSCL()) ) {s = 5;}

                        else if ( (synpred14_InternalSCL()) ) {s = 7;}

                        else if ( (synpred15_InternalSCL()) ) {s = 8;}

                        else if ( (synpred16_InternalSCL()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index7_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA7_2 = input.LA(1);

                         
                        int index7_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalSCL()) ) {s = 11;}

                        else if ( (synpred8_InternalSCL()) ) {s = 12;}

                        else if ( (synpred9_InternalSCL()) ) {s = 13;}

                        else if ( (synpred10_InternalSCL()) ) {s = 14;}

                        else if ( (synpred11_InternalSCL()) ) {s = 15;}

                        else if ( (synpred12_InternalSCL()) ) {s = 5;}

                        else if ( (synpred14_InternalSCL()) ) {s = 7;}

                        else if ( (synpred15_InternalSCL()) ) {s = 8;}

                        else if ( (synpred16_InternalSCL()) ) {s = 9;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index7_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA7_3 = input.LA(1);

                         
                        int index7_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalSCL()) ) {s = 11;}

                        else if ( (synpred8_InternalSCL()) ) {s = 12;}

                        else if ( (synpred9_InternalSCL()) ) {s = 13;}

                         
                        input.seek(index7_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA7_4 = input.LA(1);

                         
                        int index7_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalSCL()) ) {s = 14;}

                        else if ( (synpred11_InternalSCL()) ) {s = 15;}

                         
                        input.seek(index7_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 7, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_21s = "\5\uffff";
    static final String dfa_22s = "\1\1\4\uffff";
    static final String dfa_23s = "\1\4\1\uffff\2\7\1\uffff";
    static final String dfa_24s = "\1\114\1\uffff\2\135\1\uffff";
    static final String dfa_25s = "\1\uffff\1\2\2\uffff\1\1";
    static final String dfa_26s = "\5\uffff}>";
    static final String[] dfa_27s = {
            "\1\2\5\uffff\1\1\6\uffff\1\1\1\uffff\3\1\1\uffff\5\1\1\uffff\5\1\52\uffff\1\1",
            "",
            "\1\4\12\uffff\1\1\26\uffff\1\1\14\uffff\1\1\1\uffff\1\1\16\uffff\1\3\7\uffff\17\1",
            "\1\4\41\uffff\1\1\14\uffff\1\1\1\uffff\1\1\16\uffff\1\3\7\uffff\17\1",
            ""
    };

    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[][] dfa_27 = unpackEncodedStringArray(dfa_27s);

    class DFA14 extends DFA {

        public DFA14(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 14;
            this.eot = dfa_21;
            this.eof = dfa_22;
            this.min = dfa_23;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_26;
            this.transition = dfa_27;
        }
        public String getDescription() {
            return "()+ loopback of 676:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA18 extends DFA {

        public DFA18(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 18;
            this.eot = dfa_21;
            this.eof = dfa_22;
            this.min = dfa_23;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_26;
            this.transition = dfa_27;
        }
        public String getDescription() {
            return "()+ loopback of 791:4: ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String dfa_28s = "\40\uffff";
    static final String dfa_29s = "\1\4\2\0\35\uffff";
    static final String dfa_30s = "\1\165\2\0\35\uffff";
    static final String dfa_31s = "\3\uffff\1\2\10\uffff\1\1\23\uffff";
    static final String dfa_32s = "\1\uffff\1\0\1\1\35\uffff}>";
    static final String[] dfa_33s = {
            "\1\3\5\uffff\1\1\10\uffff\1\3\1\uffff\1\3\1\14\4\3\3\uffff\1\3\2\uffff\1\3\13\uffff\11\14\26\uffff\1\2\34\uffff\7\14\3\uffff\3\14",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA23 extends DFA {

        public DFA23(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 23;
            this.eot = dfa_28;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "()* loopback of 951:3: ( (lv_declarations_4_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA23_1 = input.LA(1);

                         
                        int index23_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred32_InternalSCL()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index23_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA23_2 = input.LA(1);

                         
                        int index23_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred32_InternalSCL()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index23_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 23, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_34s = "\24\uffff";
    static final String dfa_35s = "\1\5\23\uffff";
    static final String dfa_36s = "\1\4\3\0\20\uffff";
    static final String dfa_37s = "\1\114\3\0\20\uffff";
    static final String dfa_38s = "\4\uffff\1\2\1\3\15\uffff\1\1";
    static final String dfa_39s = "\1\uffff\1\0\1\1\1\2\20\uffff}>";
    static final String[] dfa_40s = {
            "\1\5\5\uffff\1\1\6\uffff\1\5\1\uffff\1\5\1\4\1\5\1\uffff\4\5\1\3\1\uffff\5\5\52\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[][] dfa_40 = unpackEncodedStringArray(dfa_40s);

    class DFA25 extends DFA {

        public DFA25(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 25;
            this.eot = dfa_34;
            this.eof = dfa_35;
            this.min = dfa_36;
            this.max = dfa_37;
            this.accept = dfa_38;
            this.special = dfa_39;
            this.transition = dfa_40;
        }
        public String getDescription() {
            return "993:3: ( ( (lv_else_7_0= ruleElseScope ) ) | ( (lv_semicolon_8_0= ';' ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA25_1 = input.LA(1);

                         
                        int index25_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalSCL()) ) {s = 19;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index25_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA25_2 = input.LA(1);

                         
                        int index25_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalSCL()) ) {s = 19;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index25_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA25_3 = input.LA(1);

                         
                        int index25_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred34_InternalSCL()) ) {s = 19;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index25_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 25, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA27 extends DFA {

        public DFA27(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 27;
            this.eot = dfa_28;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "()* loopback of 1085:3: ( (lv_declarations_4_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA27_1 = input.LA(1);

                         
                        int index27_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalSCL()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index27_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA27_2 = input.LA(1);

                         
                        int index27_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred37_InternalSCL()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index27_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 27, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_41s = "\1\4\2\0\12\uffff";
    static final String dfa_42s = "\1\114\2\0\12\uffff";
    static final String dfa_43s = "\3\uffff\1\2\1\uffff\1\1\7\uffff";
    static final String dfa_44s = "\1\uffff\1\0\1\1\12\uffff}>";
    static final String[] dfa_45s = {
            "\1\5\5\uffff\1\1\10\uffff\1\5\1\uffff\1\5\1\uffff\3\5\1\uffff\1\3\1\uffff\1\3\1\5\2\uffff\1\5\52\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA31 extends DFA {

        public DFA31(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 31;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "()* loopback of 1206:3: ( (lv_statements_4_0= ruleStatement ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA31_1 = input.LA(1);

                         
                        int index31_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalSCL()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index31_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA31_2 = input.LA(1);

                         
                        int index31_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalSCL()) ) {s = 5;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index31_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 31, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_46s = "\17\uffff";
    static final String dfa_47s = "\1\4\16\uffff";
    static final String dfa_48s = "\1\4\3\0\13\uffff";
    static final String dfa_49s = "\1\114\3\0\13\uffff";
    static final String dfa_50s = "\4\uffff\1\2\11\uffff\1\1";
    static final String dfa_51s = "\1\uffff\1\0\1\1\1\2\13\uffff}>";
    static final String[] dfa_52s = {
            "\1\4\5\uffff\1\1\10\uffff\1\4\1\uffff\1\4\1\uffff\2\4\1\3\4\uffff\4\4\52\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[][] dfa_52 = unpackEncodedStringArray(dfa_52s);

    class DFA40 extends DFA {

        public DFA40(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 40;
            this.eot = dfa_46;
            this.eof = dfa_47;
            this.min = dfa_48;
            this.max = dfa_49;
            this.accept = dfa_50;
            this.special = dfa_51;
            this.transition = dfa_52;
        }
        public String getDescription() {
            return "1362:3: ( ( ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_statements_4_0= ruleStatement ) )* otherlv_5= '}' ) | ( (lv_statements_6_0= ruleStatement ) )* )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA40_1 = input.LA(1);

                         
                        int index40_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_InternalSCL()) ) {s = 14;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index40_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA40_2 = input.LA(1);

                         
                        int index40_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_InternalSCL()) ) {s = 14;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index40_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA40_3 = input.LA(1);

                         
                        int index40_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred49_InternalSCL()) ) {s = 14;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index40_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 40, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA37 extends DFA {

        public DFA37(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 37;
            this.eot = dfa_28;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "()* loopback of 1387:5: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA37_1 = input.LA(1);

                         
                        int index37_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalSCL()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index37_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA37_2 = input.LA(1);

                         
                        int index37_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalSCL()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index37_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 37, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA44 extends DFA {

        public DFA44(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 44;
            this.eot = dfa_28;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "()* loopback of 1590:3: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA44_1 = input.LA(1);

                         
                        int index44_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalSCL()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index44_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA44_2 = input.LA(1);

                         
                        int index44_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalSCL()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index44_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 44, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA62 extends DFA {

        public DFA62(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 62;
            this.eot = dfa_28;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "()* loopback of 2105:5: ( (lv_declarations_16_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA62_1 = input.LA(1);

                         
                        int index62_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalSCL()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index62_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA62_2 = input.LA(1);

                         
                        int index62_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred74_InternalSCL()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index62_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 62, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_53s = "\6\uffff";
    static final String dfa_54s = "\1\2\5\uffff";
    static final String dfa_55s = "\2\4\1\uffff\2\4\1\uffff";
    static final String dfa_56s = "\1\166\1\114\1\uffff\2\166\1\uffff";
    static final String dfa_57s = "\2\uffff\1\2\2\uffff\1\1";
    static final String dfa_58s = "\6\uffff}>";
    static final String[] dfa_59s = {
            "\1\2\5\uffff\1\2\13\uffff\1\1\2\uffff\2\2\22\uffff\11\2\26\uffff\1\2\34\uffff\7\2\3\uffff\4\2",
            "\1\3\1\2\4\uffff\1\2\16\uffff\1\2\26\uffff\1\2\33\uffff\1\2",
            "",
            "\1\2\2\uffff\1\5\2\uffff\2\2\12\uffff\1\2\3\uffff\1\2\10\uffff\1\2\5\uffff\1\2\3\uffff\13\2\17\uffff\1\4\4\uffff\1\2\34\uffff\7\2\3\uffff\4\2",
            "\1\2\2\uffff\1\5\2\uffff\2\2\12\uffff\1\2\3\uffff\1\2\10\uffff\1\2\5\uffff\1\2\3\uffff\13\2\17\uffff\1\4\4\uffff\1\2\34\uffff\7\2\3\uffff\4\2",
            ""
    };

    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final char[] dfa_55 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);
    static final char[] dfa_56 = DFA.unpackEncodedStringToUnsignedChars(dfa_56s);
    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final short[][] dfa_59 = unpackEncodedStringArray(dfa_59s);

    class DFA72 extends DFA {

        public DFA72(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 72;
            this.eot = dfa_53;
            this.eof = dfa_54;
            this.min = dfa_55;
            this.max = dfa_56;
            this.accept = dfa_57;
            this.special = dfa_58;
            this.transition = dfa_59;
        }
        public String getDescription() {
            return "2334:3: (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )?";
        }
    }
    static final String dfa_60s = "\1\166\1\uffff\2\107\1\uffff";
    static final String[] dfa_61s = {
            "\1\2\5\uffff\1\1\13\uffff\1\1\2\uffff\2\1\22\uffff\11\1\26\uffff\1\1\34\uffff\7\1\3\uffff\4\1",
            "",
            "\1\4\32\uffff\1\1\2\uffff\1\1\41\uffff\1\3",
            "\1\4\32\uffff\1\1\2\uffff\1\1\41\uffff\1\3",
            ""
    };
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final short[][] dfa_61 = unpackEncodedStringArray(dfa_61s);

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = dfa_21;
            this.eof = dfa_22;
            this.min = dfa_23;
            this.max = dfa_60;
            this.accept = dfa_25;
            this.special = dfa_26;
            this.transition = dfa_61;
        }
        public String getDescription() {
            return "()+ loopback of 2339:4: ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = dfa_28;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "()* loopback of 2383:4: ( (lv_declarations_15_0= ruleDeclarationWOSemicolon ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA74_1 = input.LA(1);

                         
                        int index74_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred85_InternalSCL()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index74_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA74_2 = input.LA(1);

                         
                        int index74_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred85_InternalSCL()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index74_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 74, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_62s = "\36\uffff";
    static final String dfa_63s = "\1\3\35\uffff";
    static final String dfa_64s = "\1\4\2\0\3\uffff\1\0\27\uffff";
    static final String dfa_65s = "\1\165\2\0\3\uffff\1\0\27\uffff";
    static final String dfa_66s = "\3\uffff\1\2\7\uffff\1\1\22\uffff";
    static final String dfa_67s = "\1\uffff\1\0\1\1\3\uffff\1\2\27\uffff}>";
    static final String[] dfa_68s = {
            "\1\3\1\uffff\1\3\3\uffff\1\1\13\uffff\1\13\24\uffff\2\3\10\13\1\6\3\uffff\2\3\21\uffff\1\2\34\uffff\7\13\3\uffff\3\13",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final char[] dfa_64 = DFA.unpackEncodedStringToUnsignedChars(dfa_64s);
    static final char[] dfa_65 = DFA.unpackEncodedStringToUnsignedChars(dfa_65s);
    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final short[][] dfa_68 = unpackEncodedStringArray(dfa_68s);

    class DFA77 extends DFA {

        public DFA77(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 77;
            this.eot = dfa_62;
            this.eof = dfa_63;
            this.min = dfa_64;
            this.max = dfa_65;
            this.accept = dfa_66;
            this.special = dfa_67;
            this.transition = dfa_68;
        }
        public String getDescription() {
            return "()* loopback of 2455:3: ( (lv_declarations_1_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA77_1 = input.LA(1);

                         
                        int index77_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalSCL()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index77_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA77_2 = input.LA(1);

                         
                        int index77_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalSCL()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index77_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA77_6 = input.LA(1);

                         
                        int index77_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred88_InternalSCL()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index77_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 77, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_69s = {
            "\1\3\1\uffff\1\3\3\uffff\1\1\13\uffff\1\13\3\uffff\1\3\20\uffff\2\3\10\13\1\6\3\uffff\2\3\21\uffff\1\2\34\uffff\7\13\3\uffff\3\13",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_69 = unpackEncodedStringArray(dfa_69s);

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = dfa_62;
            this.eof = dfa_62;
            this.min = dfa_64;
            this.max = dfa_65;
            this.accept = dfa_66;
            this.special = dfa_67;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "()* loopback of 2569:3: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA81_1 = input.LA(1);

                         
                        int index81_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred92_InternalSCL()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index81_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA81_2 = input.LA(1);

                         
                        int index81_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred92_InternalSCL()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index81_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA81_6 = input.LA(1);

                         
                        int index81_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred92_InternalSCL()) ) {s = 11;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index81_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 81, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_70s = "\27\uffff";
    static final String dfa_71s = "\1\12\12\0\6\uffff\1\0\5\uffff";
    static final String dfa_72s = "\1\165\12\0\6\uffff\1\0\5\uffff";
    static final String dfa_73s = "\13\uffff\1\1\6\uffff\1\2\1\uffff\1\3\1\4\1\5";
    static final String dfa_74s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\6\uffff\1\12\5\uffff}>";
    static final String[] dfa_75s = {
            "\1\1\13\uffff\1\24\26\uffff\1\6\1\7\1\10\1\11\1\12\1\13\1\21\2\22\26\uffff\1\2\34\uffff\5\13\1\25\1\26\3\uffff\1\3\1\4\1\5",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final char[] dfa_71 = DFA.unpackEncodedStringToUnsignedChars(dfa_71s);
    static final char[] dfa_72 = DFA.unpackEncodedStringToUnsignedChars(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final short[][] dfa_75 = unpackEncodedStringArray(dfa_75s);

    class DFA86 extends DFA {

        public DFA86(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 86;
            this.eot = dfa_70;
            this.eof = dfa_70;
            this.min = dfa_71;
            this.max = dfa_72;
            this.accept = dfa_73;
            this.special = dfa_74;
            this.transition = dfa_75;
        }
        public String getDescription() {
            return "2773:2: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_StructDeclaration_3= ruleStructDeclaration | this_ClassDeclaration_4= ruleClassDeclaration )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA86_1 = input.LA(1);

                         
                        int index86_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalSCL()) ) {s = 11;}

                        else if ( (synpred98_InternalSCL()) ) {s = 18;}

                        else if ( (synpred99_InternalSCL()) ) {s = 20;}

                        else if ( (synpred100_InternalSCL()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index86_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA86_2 = input.LA(1);

                         
                        int index86_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalSCL()) ) {s = 11;}

                        else if ( (synpred98_InternalSCL()) ) {s = 18;}

                        else if ( (synpred99_InternalSCL()) ) {s = 20;}

                        else if ( (synpred100_InternalSCL()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index86_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA86_3 = input.LA(1);

                         
                        int index86_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalSCL()) ) {s = 11;}

                        else if ( (synpred98_InternalSCL()) ) {s = 18;}

                        else if ( (synpred99_InternalSCL()) ) {s = 20;}

                        else if ( (synpred100_InternalSCL()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index86_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA86_4 = input.LA(1);

                         
                        int index86_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalSCL()) ) {s = 11;}

                        else if ( (synpred98_InternalSCL()) ) {s = 18;}

                        else if ( (synpred99_InternalSCL()) ) {s = 20;}

                        else if ( (synpred100_InternalSCL()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index86_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA86_5 = input.LA(1);

                         
                        int index86_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalSCL()) ) {s = 11;}

                        else if ( (synpred98_InternalSCL()) ) {s = 18;}

                        else if ( (synpred99_InternalSCL()) ) {s = 20;}

                        else if ( (synpred100_InternalSCL()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index86_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA86_6 = input.LA(1);

                         
                        int index86_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalSCL()) ) {s = 11;}

                        else if ( (synpred100_InternalSCL()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index86_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA86_7 = input.LA(1);

                         
                        int index86_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalSCL()) ) {s = 11;}

                        else if ( (synpred100_InternalSCL()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index86_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA86_8 = input.LA(1);

                         
                        int index86_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalSCL()) ) {s = 11;}

                        else if ( (synpred100_InternalSCL()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index86_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA86_9 = input.LA(1);

                         
                        int index86_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalSCL()) ) {s = 11;}

                        else if ( (synpred100_InternalSCL()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index86_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA86_10 = input.LA(1);

                         
                        int index86_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalSCL()) ) {s = 11;}

                        else if ( (synpred100_InternalSCL()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index86_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA86_17 = input.LA(1);

                         
                        int index86_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred97_InternalSCL()) ) {s = 11;}

                        else if ( (synpred100_InternalSCL()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index86_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 86, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA87 extends DFA {

        public DFA87(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 87;
            this.eot = dfa_70;
            this.eof = dfa_70;
            this.min = dfa_71;
            this.max = dfa_72;
            this.accept = dfa_73;
            this.special = dfa_74;
            this.transition = dfa_75;
        }
        public String getDescription() {
            return "2851:2: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_StructDeclarationWOSemicolon_3= ruleStructDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_4= ruleClassDeclarationWOSemicolon )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA87_1 = input.LA(1);

                         
                        int index87_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalSCL()) ) {s = 11;}

                        else if ( (synpred102_InternalSCL()) ) {s = 18;}

                        else if ( (synpred103_InternalSCL()) ) {s = 20;}

                        else if ( (synpred104_InternalSCL()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index87_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA87_2 = input.LA(1);

                         
                        int index87_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalSCL()) ) {s = 11;}

                        else if ( (synpred102_InternalSCL()) ) {s = 18;}

                        else if ( (synpred103_InternalSCL()) ) {s = 20;}

                        else if ( (synpred104_InternalSCL()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index87_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA87_3 = input.LA(1);

                         
                        int index87_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalSCL()) ) {s = 11;}

                        else if ( (synpred102_InternalSCL()) ) {s = 18;}

                        else if ( (synpred103_InternalSCL()) ) {s = 20;}

                        else if ( (synpred104_InternalSCL()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index87_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA87_4 = input.LA(1);

                         
                        int index87_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalSCL()) ) {s = 11;}

                        else if ( (synpred102_InternalSCL()) ) {s = 18;}

                        else if ( (synpred103_InternalSCL()) ) {s = 20;}

                        else if ( (synpred104_InternalSCL()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index87_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA87_5 = input.LA(1);

                         
                        int index87_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalSCL()) ) {s = 11;}

                        else if ( (synpred102_InternalSCL()) ) {s = 18;}

                        else if ( (synpred103_InternalSCL()) ) {s = 20;}

                        else if ( (synpred104_InternalSCL()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index87_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA87_6 = input.LA(1);

                         
                        int index87_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalSCL()) ) {s = 11;}

                        else if ( (synpred104_InternalSCL()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index87_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA87_7 = input.LA(1);

                         
                        int index87_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalSCL()) ) {s = 11;}

                        else if ( (synpred104_InternalSCL()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index87_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA87_8 = input.LA(1);

                         
                        int index87_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalSCL()) ) {s = 11;}

                        else if ( (synpred104_InternalSCL()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index87_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA87_9 = input.LA(1);

                         
                        int index87_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalSCL()) ) {s = 11;}

                        else if ( (synpred104_InternalSCL()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index87_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA87_10 = input.LA(1);

                         
                        int index87_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalSCL()) ) {s = 11;}

                        else if ( (synpred104_InternalSCL()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index87_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA87_17 = input.LA(1);

                         
                        int index87_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred101_InternalSCL()) ) {s = 11;}

                        else if ( (synpred104_InternalSCL()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index87_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 87, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_76s = "\46\uffff";
    static final String dfa_77s = "\1\1\45\uffff";
    static final String dfa_78s = "\1\4\1\uffff\1\0\43\uffff";
    static final String dfa_79s = "\1\166\1\uffff\1\0\43\uffff";
    static final String dfa_80s = "\1\uffff\1\2\43\uffff\1\1";
    static final String dfa_81s = "\2\uffff\1\0\43\uffff}>";
    static final String[] dfa_82s = {
            "\1\1\5\uffff\2\1\7\uffff\1\1\1\uffff\6\1\3\uffff\1\1\2\uffff\1\1\1\uffff\1\2\1\1\10\uffff\11\1\26\uffff\1\1\34\uffff\7\1\3\uffff\4\1",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final char[] dfa_78 = DFA.unpackEncodedStringToUnsignedChars(dfa_78s);
    static final char[] dfa_79 = DFA.unpackEncodedStringToUnsignedChars(dfa_79s);
    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final short[][] dfa_82 = unpackEncodedStringArray(dfa_82s);

    class DFA108 extends DFA {

        public DFA108(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 108;
            this.eot = dfa_76;
            this.eof = dfa_77;
            this.min = dfa_78;
            this.max = dfa_79;
            this.accept = dfa_80;
            this.special = dfa_81;
            this.transition = dfa_82;
        }
        public String getDescription() {
            return "()* loopback of 3435:3: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA108_2 = input.LA(1);

                         
                        int index108_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred127_InternalSCL()) ) {s = 37;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index108_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 108, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_83s = "\44\uffff";
    static final String dfa_84s = "\1\4\43\uffff";
    static final String dfa_85s = "\1\4\3\0\40\uffff";
    static final String dfa_86s = "\1\166\3\0\40\uffff";
    static final String dfa_87s = "\4\uffff\1\2\36\uffff\1\1";
    static final String dfa_88s = "\1\uffff\1\0\1\1\1\2\40\uffff}>";
    static final String[] dfa_89s = {
            "\1\3\5\uffff\1\1\1\4\7\uffff\1\4\1\uffff\6\4\3\uffff\1\4\2\uffff\1\4\13\uffff\11\4\26\uffff\1\2\34\uffff\7\4\3\uffff\4\4",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final char[] dfa_85 = DFA.unpackEncodedStringToUnsignedChars(dfa_85s);
    static final char[] dfa_86 = DFA.unpackEncodedStringToUnsignedChars(dfa_86s);
    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final short[] dfa_88 = DFA.unpackEncodedString(dfa_88s);
    static final short[][] dfa_89 = unpackEncodedStringArray(dfa_89s);

    class DFA134 extends DFA {

        public DFA134(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 134;
            this.eot = dfa_83;
            this.eof = dfa_84;
            this.min = dfa_85;
            this.max = dfa_86;
            this.accept = dfa_87;
            this.special = dfa_88;
            this.transition = dfa_89;
        }
        public String getDescription() {
            return "3978:3: ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA134_1 = input.LA(1);

                         
                        int index134_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalSCL()) ) {s = 35;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index134_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA134_2 = input.LA(1);

                         
                        int index134_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalSCL()) ) {s = 35;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index134_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA134_3 = input.LA(1);

                         
                        int index134_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred153_InternalSCL()) ) {s = 35;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index134_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 134, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_90s = "\31\uffff";
    static final String dfa_91s = "\1\4\5\0\7\uffff\4\0\10\uffff";
    static final String dfa_92s = "\1\166\5\0\7\uffff\4\0\10\uffff";
    static final String dfa_93s = "\6\uffff\1\1\20\uffff\1\2\1\uffff";
    static final String dfa_94s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\7\uffff\1\5\1\6\1\7\1\10\10\uffff}>";
    static final String[] dfa_95s = {
            "\1\27\5\uffff\1\1\13\uffff\1\6\26\uffff\11\6\26\uffff\1\2\34\uffff\1\6\1\15\1\16\1\17\1\20\2\6\3\uffff\1\3\1\4\1\5\1\27",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final char[] dfa_91 = DFA.unpackEncodedStringToUnsignedChars(dfa_91s);
    static final char[] dfa_92 = DFA.unpackEncodedStringToUnsignedChars(dfa_92s);
    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final short[] dfa_94 = DFA.unpackEncodedString(dfa_94s);
    static final short[][] dfa_95 = unpackEncodedStringArray(dfa_95s);

    class DFA149 extends DFA {

        public DFA149(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 149;
            this.eot = dfa_90;
            this.eof = dfa_90;
            this.min = dfa_91;
            this.max = dfa_92;
            this.accept = dfa_93;
            this.special = dfa_94;
            this.transition = dfa_95;
        }
        public String getDescription() {
            return "4345:2: (this_Declaration_0= ruleDeclaration | this_MethodDeclaration_1= ruleMethodDeclaration )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA149_1 = input.LA(1);

                         
                        int index149_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_InternalSCL()) ) {s = 6;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index149_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA149_2 = input.LA(1);

                         
                        int index149_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_InternalSCL()) ) {s = 6;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index149_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA149_3 = input.LA(1);

                         
                        int index149_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_InternalSCL()) ) {s = 6;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index149_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA149_4 = input.LA(1);

                         
                        int index149_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_InternalSCL()) ) {s = 6;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index149_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA149_5 = input.LA(1);

                         
                        int index149_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_InternalSCL()) ) {s = 6;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index149_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA149_13 = input.LA(1);

                         
                        int index149_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_InternalSCL()) ) {s = 6;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index149_13);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA149_14 = input.LA(1);

                         
                        int index149_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_InternalSCL()) ) {s = 6;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index149_14);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA149_15 = input.LA(1);

                         
                        int index149_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_InternalSCL()) ) {s = 6;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index149_15);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA149_16 = input.LA(1);

                         
                        int index149_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_InternalSCL()) ) {s = 6;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index149_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 149, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA161 extends DFA {

        public DFA161(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 161;
            this.eot = dfa_83;
            this.eof = dfa_84;
            this.min = dfa_85;
            this.max = dfa_86;
            this.accept = dfa_87;
            this.special = dfa_88;
            this.transition = dfa_89;
        }
        public String getDescription() {
            return "4584:3: ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA161_1 = input.LA(1);

                         
                        int index161_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred180_InternalSCL()) ) {s = 35;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index161_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA161_2 = input.LA(1);

                         
                        int index161_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred180_InternalSCL()) ) {s = 35;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index161_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA161_3 = input.LA(1);

                         
                        int index161_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred180_InternalSCL()) ) {s = 35;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index161_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 161, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA163 extends DFA {

        public DFA163(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 163;
            this.eot = dfa_90;
            this.eof = dfa_90;
            this.min = dfa_91;
            this.max = dfa_92;
            this.accept = dfa_93;
            this.special = dfa_94;
            this.transition = dfa_95;
        }
        public String getDescription() {
            return "4667:2: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_1= ruleMethodDeclarationWOSemicolon )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA163_1 = input.LA(1);

                         
                        int index163_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_InternalSCL()) ) {s = 6;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index163_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA163_2 = input.LA(1);

                         
                        int index163_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_InternalSCL()) ) {s = 6;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index163_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA163_3 = input.LA(1);

                         
                        int index163_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_InternalSCL()) ) {s = 6;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index163_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA163_4 = input.LA(1);

                         
                        int index163_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_InternalSCL()) ) {s = 6;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index163_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA163_5 = input.LA(1);

                         
                        int index163_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_InternalSCL()) ) {s = 6;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index163_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA163_13 = input.LA(1);

                         
                        int index163_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_InternalSCL()) ) {s = 6;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index163_13);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA163_14 = input.LA(1);

                         
                        int index163_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_InternalSCL()) ) {s = 6;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index163_14);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA163_15 = input.LA(1);

                         
                        int index163_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_InternalSCL()) ) {s = 6;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index163_15);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA163_16 = input.LA(1);

                         
                        int index163_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred182_InternalSCL()) ) {s = 6;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index163_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 163, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_96s = "\1\4\3\0\11\uffff";
    static final String dfa_97s = "\1\114\3\0\11\uffff";
    static final String dfa_98s = "\4\uffff\1\4\1\6\1\7\1\10\1\1\1\2\1\3\1\5\1\11";
    static final String dfa_99s = "\1\uffff\1\0\1\1\1\2\11\uffff}>";
    static final String[] dfa_100s = {
            "\1\3\1\uffff\1\4\3\uffff\1\1\52\uffff\1\5\3\uffff\1\6\1\7\21\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_96 = DFA.unpackEncodedStringToUnsignedChars(dfa_96s);
    static final char[] dfa_97 = DFA.unpackEncodedStringToUnsignedChars(dfa_97s);
    static final short[] dfa_98 = DFA.unpackEncodedString(dfa_98s);
    static final short[] dfa_99 = DFA.unpackEncodedString(dfa_99s);
    static final short[][] dfa_100 = unpackEncodedStringArray(dfa_100s);

    class DFA199 extends DFA {

        public DFA199(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 199;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_96;
            this.max = dfa_97;
            this.accept = dfa_98;
            this.special = dfa_99;
            this.transition = dfa_100;
        }
        public String getDescription() {
            return "5850:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA199_1 = input.LA(1);

                         
                        int index199_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred218_InternalSCL()) ) {s = 8;}

                        else if ( (synpred219_InternalSCL()) ) {s = 9;}

                        else if ( (synpred220_InternalSCL()) ) {s = 10;}

                        else if ( (synpred221_InternalSCL()) ) {s = 4;}

                        else if ( (synpred222_InternalSCL()) ) {s = 11;}

                        else if ( (synpred223_InternalSCL()) ) {s = 5;}

                        else if ( (synpred224_InternalSCL()) ) {s = 6;}

                        else if ( (synpred225_InternalSCL()) ) {s = 7;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index199_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA199_2 = input.LA(1);

                         
                        int index199_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred218_InternalSCL()) ) {s = 8;}

                        else if ( (synpred219_InternalSCL()) ) {s = 9;}

                        else if ( (synpred220_InternalSCL()) ) {s = 10;}

                        else if ( (synpred221_InternalSCL()) ) {s = 4;}

                        else if ( (synpred222_InternalSCL()) ) {s = 11;}

                        else if ( (synpred223_InternalSCL()) ) {s = 5;}

                        else if ( (synpred224_InternalSCL()) ) {s = 6;}

                        else if ( (synpred225_InternalSCL()) ) {s = 7;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index199_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA199_3 = input.LA(1);

                         
                        int index199_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred218_InternalSCL()) ) {s = 8;}

                        else if ( (synpred219_InternalSCL()) ) {s = 9;}

                        else if ( (synpred220_InternalSCL()) ) {s = 10;}

                        else if ( (synpred222_InternalSCL()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index199_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 199, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_101s = "\1\1\1\uffff\2\1\1\uffff";
    static final String dfa_102s = "\1\4\1\uffff\2\4\1\uffff";
    static final String[] dfa_103s = {
            "\1\2\1\uffff\1\1\3\uffff\1\1\17\uffff\1\1\20\uffff\2\1\10\uffff\1\1\3\uffff\2\1\21\uffff\1\1",
            "",
            "\1\1\1\uffff\1\1\1\4\2\uffff\1\1\13\uffff\1\1\3\uffff\1\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\1\uffff\2\1\10\uffff\2\1\1\uffff\3\1\14\uffff\1\3\4\uffff\1\1\2\uffff\17\1",
            "\1\1\1\uffff\1\1\1\4\2\uffff\1\1\13\uffff\1\1\3\uffff\1\1\7\uffff\1\1\2\uffff\1\1\3\uffff\1\1\1\uffff\2\1\10\uffff\2\1\1\uffff\3\1\14\uffff\1\3\4\uffff\1\1\2\uffff\17\1",
            ""
    };
    static final short[] dfa_101 = DFA.unpackEncodedString(dfa_101s);
    static final char[] dfa_102 = DFA.unpackEncodedStringToUnsignedChars(dfa_102s);
    static final short[][] dfa_103 = unpackEncodedStringArray(dfa_103s);

    class DFA201 extends DFA {

        public DFA201(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 201;
            this.eot = dfa_21;
            this.eof = dfa_101;
            this.min = dfa_102;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_26;
            this.transition = dfa_103;
        }
        public String getDescription() {
            return "()+ loopback of 6020:4: ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA204 extends DFA {

        public DFA204(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 204;
            this.eot = dfa_21;
            this.eof = dfa_101;
            this.min = dfa_102;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_26;
            this.transition = dfa_103;
        }
        public String getDescription() {
            return "()+ loopback of 6129:4: ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA207 extends DFA {

        public DFA207(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 207;
            this.eot = dfa_21;
            this.eof = dfa_101;
            this.min = dfa_102;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_26;
            this.transition = dfa_103;
        }
        public String getDescription() {
            return "()+ loopback of 6249:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA210 extends DFA {

        public DFA210(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 210;
            this.eot = dfa_21;
            this.eof = dfa_101;
            this.min = dfa_102;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_26;
            this.transition = dfa_103;
        }
        public String getDescription() {
            return "()+ loopback of 6350:4: ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA217 extends DFA {

        public DFA217(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 217;
            this.eot = dfa_21;
            this.eof = dfa_101;
            this.min = dfa_102;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_26;
            this.transition = dfa_103;
        }
        public String getDescription() {
            return "()+ loopback of 6574:4: ( (lv_schedule_11_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA224 extends DFA {

        public DFA224(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 224;
            this.eot = dfa_21;
            this.eof = dfa_101;
            this.min = dfa_102;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_26;
            this.transition = dfa_103;
        }
        public String getDescription() {
            return "()+ loopback of 6818:4: ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String dfa_104s = "\1\4\20\0\3\uffff";
    static final String dfa_105s = "\1\146\20\0\3\uffff";
    static final String dfa_106s = "\21\uffff\1\1\1\uffff\1\2";
    static final String dfa_107s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\3\uffff}>";
    static final String[] dfa_108s = {
            "\1\10\1\4\1\20\1\2\1\3\1\7\1\16\16\uffff\1\5\10\uffff\1\6\3\uffff\1\21\16\uffff\1\11\4\uffff\1\13\10\uffff\1\1\4\uffff\1\12\3\uffff\1\17\27\uffff\1\14\1\21\1\15",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };
    static final char[] dfa_104 = DFA.unpackEncodedStringToUnsignedChars(dfa_104s);
    static final char[] dfa_105 = DFA.unpackEncodedStringToUnsignedChars(dfa_105s);
    static final short[] dfa_106 = DFA.unpackEncodedString(dfa_106s);
    static final short[] dfa_107 = DFA.unpackEncodedString(dfa_107s);
    static final short[][] dfa_108 = unpackEncodedStringArray(dfa_108s);

    class DFA229 extends DFA {

        public DFA229(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 229;
            this.eot = dfa_34;
            this.eof = dfa_34;
            this.min = dfa_104;
            this.max = dfa_105;
            this.accept = dfa_106;
            this.special = dfa_107;
            this.transition = dfa_108;
        }
        public String getDescription() {
            return "6969:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA229_1 = input.LA(1);

                         
                        int index229_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalSCL()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index229_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA229_2 = input.LA(1);

                         
                        int index229_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalSCL()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index229_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA229_3 = input.LA(1);

                         
                        int index229_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalSCL()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index229_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA229_4 = input.LA(1);

                         
                        int index229_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalSCL()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index229_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA229_5 = input.LA(1);

                         
                        int index229_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalSCL()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index229_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA229_6 = input.LA(1);

                         
                        int index229_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalSCL()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index229_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA229_7 = input.LA(1);

                         
                        int index229_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalSCL()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index229_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA229_8 = input.LA(1);

                         
                        int index229_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalSCL()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index229_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA229_9 = input.LA(1);

                         
                        int index229_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalSCL()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index229_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA229_10 = input.LA(1);

                         
                        int index229_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalSCL()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index229_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA229_11 = input.LA(1);

                         
                        int index229_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalSCL()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index229_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA229_12 = input.LA(1);

                         
                        int index229_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalSCL()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index229_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA229_13 = input.LA(1);

                         
                        int index229_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalSCL()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index229_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA229_14 = input.LA(1);

                         
                        int index229_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalSCL()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index229_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA229_15 = input.LA(1);

                         
                        int index229_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalSCL()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index229_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA229_16 = input.LA(1);

                         
                        int index229_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_InternalSCL()) ) {s = 17;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index229_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 229, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_109s = "\23\uffff";
    static final String dfa_110s = "\1\4\5\uffff\13\0\2\uffff";
    static final String dfa_111s = "\1\146\5\uffff\13\0\2\uffff";
    static final String dfa_112s = "\1\uffff\1\1\17\uffff\1\2\1\uffff";
    static final String dfa_113s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\2\uffff}>";
    static final String[] dfa_114s = {
            "\1\10\1\1\1\20\2\1\1\7\1\16\16\uffff\1\1\10\uffff\1\6\3\uffff\1\21\16\uffff\1\11\4\uffff\1\13\10\uffff\1\1\4\uffff\1\12\3\uffff\1\17\27\uffff\1\14\1\21\1\15",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_109 = DFA.unpackEncodedString(dfa_109s);
    static final char[] dfa_110 = DFA.unpackEncodedStringToUnsignedChars(dfa_110s);
    static final char[] dfa_111 = DFA.unpackEncodedStringToUnsignedChars(dfa_111s);
    static final short[] dfa_112 = DFA.unpackEncodedString(dfa_112s);
    static final short[] dfa_113 = DFA.unpackEncodedString(dfa_113s);
    static final short[][] dfa_114 = unpackEncodedStringArray(dfa_114s);

    class DFA241 extends DFA {

        public DFA241(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 241;
            this.eot = dfa_109;
            this.eof = dfa_109;
            this.min = dfa_110;
            this.max = dfa_111;
            this.accept = dfa_112;
            this.special = dfa_113;
            this.transition = dfa_114;
        }
        public String getDescription() {
            return "7654:2: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA241_6 = input.LA(1);

                         
                        int index241_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred267_InternalSCL()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index241_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA241_7 = input.LA(1);

                         
                        int index241_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred267_InternalSCL()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index241_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA241_8 = input.LA(1);

                         
                        int index241_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred267_InternalSCL()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index241_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA241_9 = input.LA(1);

                         
                        int index241_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred267_InternalSCL()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index241_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA241_10 = input.LA(1);

                         
                        int index241_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred267_InternalSCL()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index241_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA241_11 = input.LA(1);

                         
                        int index241_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred267_InternalSCL()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index241_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA241_12 = input.LA(1);

                         
                        int index241_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred267_InternalSCL()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index241_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA241_13 = input.LA(1);

                         
                        int index241_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred267_InternalSCL()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index241_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA241_14 = input.LA(1);

                         
                        int index241_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred267_InternalSCL()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index241_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA241_15 = input.LA(1);

                         
                        int index241_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred267_InternalSCL()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index241_15);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA241_16 = input.LA(1);

                         
                        int index241_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred267_InternalSCL()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index241_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 241, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_115s = "\104\uffff";
    static final String dfa_116s = "\1\3\103\uffff";
    static final String dfa_117s = "\1\4\2\0\101\uffff";
    static final String dfa_118s = "\1\166\2\0\101\uffff";
    static final String dfa_119s = "\3\uffff\1\3\76\uffff\1\1\1\2";
    static final String dfa_120s = "\1\uffff\1\0\1\1\101\uffff}>";
    static final String[] dfa_121s = {
            "\1\3\1\uffff\1\3\3\uffff\2\3\5\uffff\1\3\1\uffff\17\3\1\uffff\2\3\2\uffff\2\3\1\uffff\14\3\1\uffff\1\3\1\uffff\6\3\1\1\1\2\1\3\12\uffff\1\3\21\uffff\6\3\5\uffff\7\3\3\uffff\4\3",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_115 = DFA.unpackEncodedString(dfa_115s);
    static final short[] dfa_116 = DFA.unpackEncodedString(dfa_116s);
    static final char[] dfa_117 = DFA.unpackEncodedStringToUnsignedChars(dfa_117s);
    static final char[] dfa_118 = DFA.unpackEncodedStringToUnsignedChars(dfa_118s);
    static final short[] dfa_119 = DFA.unpackEncodedString(dfa_119s);
    static final short[] dfa_120 = DFA.unpackEncodedString(dfa_120s);
    static final short[][] dfa_121 = unpackEncodedStringArray(dfa_121s);

    class DFA250 extends DFA {

        public DFA250(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 250;
            this.eot = dfa_115;
            this.eof = dfa_116;
            this.min = dfa_117;
            this.max = dfa_118;
            this.accept = dfa_119;
            this.special = dfa_120;
            this.transition = dfa_121;
        }
        public String getDescription() {
            return "8163:3: ( ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_9= '>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightUnsignedExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA250_1 = input.LA(1);

                         
                        int index250_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred277_InternalSCL()) ) {s = 66;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index250_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA250_2 = input.LA(1);

                         
                        int index250_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred279_InternalSCL()) ) {s = 67;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index250_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 250, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_122s = {
            "\1\3\1\uffff\1\3\3\uffff\2\3\5\uffff\1\3\1\uffff\17\3\1\uffff\2\3\2\uffff\2\3\1\uffff\14\3\1\uffff\1\3\1\uffff\6\3\1\1\1\3\1\2\12\uffff\1\3\21\uffff\6\3\5\uffff\7\3\3\uffff\4\3",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_122 = unpackEncodedStringArray(dfa_122s);

    class DFA253 extends DFA {

        public DFA253(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 253;
            this.eot = dfa_115;
            this.eof = dfa_116;
            this.min = dfa_117;
            this.max = dfa_118;
            this.accept = dfa_119;
            this.special = dfa_120;
            this.transition = dfa_122;
        }
        public String getDescription() {
            return "8350:3: ( ( () ( ( (lv_operator_2_0= ruleShiftLeftOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightRightUnsignedExpression ) ) ) (otherlv_4= '<<' ( (lv_subExpressions_5_0= ruleShiftRightRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA253_1 = input.LA(1);

                         
                        int index253_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred281_InternalSCL()) ) {s = 66;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index253_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA253_2 = input.LA(1);

                         
                        int index253_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalSCL()) ) {s = 67;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index253_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 253, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_123s = {
            "\1\3\1\uffff\1\3\3\uffff\2\3\5\uffff\1\3\1\uffff\17\3\1\uffff\2\3\2\uffff\2\3\1\uffff\14\3\1\uffff\1\3\1\uffff\7\3\1\1\1\2\12\uffff\1\3\21\uffff\6\3\5\uffff\7\3\3\uffff\4\3",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_123 = unpackEncodedStringArray(dfa_123s);

    class DFA256 extends DFA {

        public DFA256(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 256;
            this.eot = dfa_115;
            this.eof = dfa_116;
            this.min = dfa_117;
            this.max = dfa_118;
            this.accept = dfa_119;
            this.special = dfa_120;
            this.transition = dfa_123;
        }
        public String getDescription() {
            return "8537:3: ( ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftLeftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftLeftRightUnsignedExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_8_0= ruleShiftLeftRightExpression ) ) ) (otherlv_9= '>>>' ( (lv_subExpressions_10_0= ruleShiftLeftRightExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA256_1 = input.LA(1);

                         
                        int index256_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalSCL()) ) {s = 66;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index256_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA256_2 = input.LA(1);

                         
                        int index256_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred287_InternalSCL()) ) {s = 67;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index256_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 256, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_124s = "\111\uffff";
    static final String dfa_125s = "\1\3\110\uffff";
    static final String dfa_126s = "\1\4\2\0\106\uffff";
    static final String dfa_127s = "\1\166\2\0\106\uffff";
    static final String dfa_128s = "\3\uffff\1\3\103\uffff\1\1\1\2";
    static final String dfa_129s = "\1\uffff\1\0\1\1\106\uffff}>";
    static final String[] dfa_130s = {
            "\1\3\1\uffff\1\3\3\uffff\2\3\5\uffff\1\3\1\uffff\17\3\1\uffff\2\3\2\uffff\2\3\1\uffff\14\3\1\uffff\1\3\1\uffff\13\3\1\1\1\2\1\3\5\uffff\1\3\21\uffff\6\3\5\uffff\7\3\3\uffff\4\3",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_124 = DFA.unpackEncodedString(dfa_124s);
    static final short[] dfa_125 = DFA.unpackEncodedString(dfa_125s);
    static final char[] dfa_126 = DFA.unpackEncodedStringToUnsignedChars(dfa_126s);
    static final char[] dfa_127 = DFA.unpackEncodedStringToUnsignedChars(dfa_127s);
    static final short[] dfa_128 = DFA.unpackEncodedString(dfa_128s);
    static final short[] dfa_129 = DFA.unpackEncodedString(dfa_129s);
    static final short[][] dfa_130 = unpackEncodedStringArray(dfa_130s);

    class DFA274 extends DFA {

        public DFA274(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 274;
            this.eot = dfa_124;
            this.eof = dfa_125;
            this.min = dfa_126;
            this.max = dfa_127;
            this.accept = dfa_128;
            this.special = dfa_129;
            this.transition = dfa_130;
        }
        public String getDescription() {
            return "9604:3: ( ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleMultModExpression ) ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleMultModExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA274_1 = input.LA(1);

                         
                        int index274_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred307_InternalSCL()) ) {s = 71;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index274_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA274_2 = input.LA(1);

                         
                        int index274_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred309_InternalSCL()) ) {s = 72;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index274_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 274, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_131s = {
            "\1\3\1\uffff\1\3\3\uffff\2\3\5\uffff\1\3\1\uffff\17\3\1\uffff\2\3\2\uffff\2\3\1\uffff\14\3\1\uffff\1\3\1\uffff\13\3\1\1\1\3\1\2\5\uffff\1\3\21\uffff\6\3\5\uffff\7\3\3\uffff\4\3",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_131 = unpackEncodedStringArray(dfa_131s);

    class DFA277 extends DFA {

        public DFA277(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 277;
            this.eot = dfa_124;
            this.eof = dfa_125;
            this.min = dfa_126;
            this.max = dfa_127;
            this.accept = dfa_128;
            this.special = dfa_129;
            this.transition = dfa_131;
        }
        public String getDescription() {
            return "9791:3: ( ( () ( ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleDivModExpression ) ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleDivModExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA277_1 = input.LA(1);

                         
                        int index277_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred311_InternalSCL()) ) {s = 71;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index277_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA277_2 = input.LA(1);

                         
                        int index277_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred313_InternalSCL()) ) {s = 72;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index277_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 277, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_132s = {
            "\1\3\1\uffff\1\3\3\uffff\2\3\5\uffff\1\3\1\uffff\17\3\1\uffff\2\3\2\uffff\2\3\1\uffff\14\3\1\uffff\1\3\1\uffff\14\3\1\1\1\2\5\uffff\1\3\21\uffff\6\3\5\uffff\7\3\3\uffff\4\3",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_132 = unpackEncodedStringArray(dfa_132s);

    class DFA280 extends DFA {

        public DFA280(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 280;
            this.eot = dfa_124;
            this.eof = dfa_125;
            this.min = dfa_126;
            this.max = dfa_127;
            this.accept = dfa_128;
            this.special = dfa_129;
            this.transition = dfa_132;
        }
        public String getDescription() {
            return "9978:3: ( ( () ( ( (lv_operator_2_0= ruleDivOperator ) ) ( (lv_subExpressions_3_0= ruleMultModExpression ) ) ) (otherlv_4= '/' ( (lv_subExpressions_5_0= ruleMultModExpression ) ) )* ) | ( () ( ( (lv_operator_7_0= ruleModOperator ) ) ( (lv_subExpressions_8_0= ruleMultDivExpression ) ) ) (otherlv_9= '%' ( (lv_subExpressions_10_0= ruleMultDivExpression ) ) )* ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA280_1 = input.LA(1);

                         
                        int index280_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred315_InternalSCL()) ) {s = 71;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index280_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA280_2 = input.LA(1);

                         
                        int index280_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred317_InternalSCL()) ) {s = 72;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index280_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 280, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_133s = "\22\uffff";
    static final String dfa_134s = "\1\4\17\0\2\uffff";
    static final String dfa_135s = "\1\146\17\0\2\uffff";
    static final String dfa_136s = "\20\uffff\1\1\1\2";
    static final String dfa_137s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\2\uffff}>";
    static final String[] dfa_138s = {
            "\1\7\1\3\1\17\1\1\1\2\1\6\1\15\16\uffff\1\4\10\uffff\1\5\22\uffff\1\10\4\uffff\1\12\15\uffff\1\11\3\uffff\1\16\27\uffff\1\13\1\uffff\1\14",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_133 = DFA.unpackEncodedString(dfa_133s);
    static final char[] dfa_134 = DFA.unpackEncodedStringToUnsignedChars(dfa_134s);
    static final char[] dfa_135 = DFA.unpackEncodedStringToUnsignedChars(dfa_135s);
    static final short[] dfa_136 = DFA.unpackEncodedString(dfa_136s);
    static final short[] dfa_137 = DFA.unpackEncodedString(dfa_137s);
    static final short[][] dfa_138 = unpackEncodedStringArray(dfa_138s);

    class DFA282 extends DFA {

        public DFA282(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 282;
            this.eot = dfa_133;
            this.eof = dfa_133;
            this.min = dfa_134;
            this.max = dfa_135;
            this.accept = dfa_136;
            this.special = dfa_137;
            this.transition = dfa_138;
        }
        public String getDescription() {
            return "10234:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleConditionalOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) otherlv_4= ':' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) ) | this_FBYExpression_6= ruleFBYExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA282_1 = input.LA(1);

                         
                        int index282_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index282_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA282_2 = input.LA(1);

                         
                        int index282_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index282_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA282_3 = input.LA(1);

                         
                        int index282_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index282_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA282_4 = input.LA(1);

                         
                        int index282_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index282_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA282_5 = input.LA(1);

                         
                        int index282_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index282_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA282_6 = input.LA(1);

                         
                        int index282_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index282_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA282_7 = input.LA(1);

                         
                        int index282_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index282_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA282_8 = input.LA(1);

                         
                        int index282_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index282_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA282_9 = input.LA(1);

                         
                        int index282_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index282_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA282_10 = input.LA(1);

                         
                        int index282_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index282_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA282_11 = input.LA(1);

                         
                        int index282_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index282_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA282_12 = input.LA(1);

                         
                        int index282_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index282_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA282_13 = input.LA(1);

                         
                        int index282_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index282_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA282_14 = input.LA(1);

                         
                        int index282_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index282_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA282_15 = input.LA(1);

                         
                        int index282_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred319_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index282_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 282, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA283 extends DFA {

        public DFA283(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 283;
            this.eot = dfa_133;
            this.eof = dfa_133;
            this.min = dfa_134;
            this.max = dfa_135;
            this.accept = dfa_136;
            this.special = dfa_137;
            this.transition = dfa_138;
        }
        public String getDescription() {
            return "10357:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleFBYOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_4= ruleAtomicValuedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA283_1 = input.LA(1);

                         
                        int index283_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index283_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA283_2 = input.LA(1);

                         
                        int index283_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index283_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA283_3 = input.LA(1);

                         
                        int index283_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index283_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA283_4 = input.LA(1);

                         
                        int index283_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index283_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA283_5 = input.LA(1);

                         
                        int index283_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index283_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA283_6 = input.LA(1);

                         
                        int index283_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index283_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA283_7 = input.LA(1);

                         
                        int index283_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index283_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA283_8 = input.LA(1);

                         
                        int index283_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index283_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA283_9 = input.LA(1);

                         
                        int index283_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index283_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA283_10 = input.LA(1);

                         
                        int index283_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index283_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA283_11 = input.LA(1);

                         
                        int index283_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index283_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA283_12 = input.LA(1);

                         
                        int index283_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index283_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA283_13 = input.LA(1);

                         
                        int index283_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index283_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA283_14 = input.LA(1);

                         
                        int index283_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index283_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA283_15 = input.LA(1);

                         
                        int index283_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred320_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index283_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 283, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_139s = "\1\4\2\uffff\1\0\11\uffff";
    static final String dfa_140s = "\1\146\2\uffff\1\0\11\uffff";
    static final String dfa_141s = "\1\uffff\1\1\1\2\1\uffff\1\4\1\5\1\6\1\7\1\uffff\1\10\2\uffff\1\3";
    static final String dfa_142s = "\3\uffff\1\0\11\uffff}>";
    static final String[] dfa_143s = {
            "\1\3\1\uffff\1\11\2\uffff\1\1\1\11\27\uffff\1\2\22\uffff\1\4\4\uffff\1\6\15\uffff\1\5\3\uffff\1\11\27\uffff\1\7\1\uffff\1\7",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_139 = DFA.unpackEncodedStringToUnsignedChars(dfa_139s);
    static final char[] dfa_140 = DFA.unpackEncodedStringToUnsignedChars(dfa_140s);
    static final short[] dfa_141 = DFA.unpackEncodedString(dfa_141s);
    static final short[] dfa_142 = DFA.unpackEncodedString(dfa_142s);
    static final short[][] dfa_143 = unpackEncodedStringArray(dfa_143s);

    class DFA284 extends DFA {

        public DFA284(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 284;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_139;
            this.max = dfa_140;
            this.accept = dfa_141;
            this.special = dfa_142;
            this.transition = dfa_143;
        }
        public String getDescription() {
            return "10457:2: (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_FunctionCall_5= ruleFunctionCall | this_RandomCall_6= ruleRandomCall | this_RandomizeCall_7= ruleRandomizeCall | this_ValuedObjectTestExpression_8= ruleValuedObjectTestExpression | this_TextExpression_9= ruleTextExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA284_3 = input.LA(1);

                         
                        int index284_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred323_InternalSCL()) ) {s = 12;}

                        else if ( (synpred327_InternalSCL()) ) {s = 7;}

                         
                        input.seek(index284_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 284, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_144s = "\21\uffff";
    static final String dfa_145s = "\1\4\4\uffff\1\0\13\uffff";
    static final String dfa_146s = "\1\146\4\uffff\1\0\13\uffff";
    static final String dfa_147s = "\1\uffff\1\1\1\2\1\3\1\4\1\uffff\1\6\11\uffff\1\5";
    static final String dfa_148s = "\5\uffff\1\0\13\uffff}>";
    static final String[] dfa_149s = {
            "\1\6\1\3\1\6\1\1\1\2\2\6\16\uffff\1\4\10\uffff\1\5\22\uffff\1\6\4\uffff\1\6\15\uffff\1\6\3\uffff\1\6\27\uffff\1\6\1\uffff\1\6",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_144 = DFA.unpackEncodedString(dfa_144s);
    static final char[] dfa_145 = DFA.unpackEncodedStringToUnsignedChars(dfa_145s);
    static final char[] dfa_146 = DFA.unpackEncodedStringToUnsignedChars(dfa_146s);
    static final short[] dfa_147 = DFA.unpackEncodedString(dfa_147s);
    static final short[] dfa_148 = DFA.unpackEncodedString(dfa_148s);
    static final short[][] dfa_149 = unpackEncodedStringArray(dfa_149s);

    class DFA285 extends DFA {

        public DFA285(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 285;
            this.eot = dfa_144;
            this.eof = dfa_144;
            this.min = dfa_145;
            this.max = dfa_146;
            this.accept = dfa_147;
            this.special = dfa_148;
            this.transition = dfa_149;
        }
        public String getDescription() {
            return "10581:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | (otherlv_4= '(' this_ValuedExpression_5= ruleValuedExpression otherlv_6= ')' ) | this_AtomicExpression_7= ruleAtomicExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA285_5 = input.LA(1);

                         
                        int index285_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred332_InternalSCL()) ) {s = 16;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index285_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 285, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_150s = "\25\uffff";
    static final String dfa_151s = "\1\4\20\0\4\uffff";
    static final String dfa_152s = "\1\146\20\0\4\uffff";
    static final String dfa_153s = "\21\uffff\1\1\1\uffff\1\3\1\2";
    static final String dfa_154s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\4\uffff}>";
    static final String[] dfa_155s = {
            "\1\10\1\4\1\20\1\2\1\3\1\7\1\16\16\uffff\1\5\10\uffff\1\6\3\uffff\1\21\16\uffff\1\11\4\uffff\1\13\10\uffff\1\1\4\uffff\1\12\1\23\2\uffff\1\17\27\uffff\1\14\1\21\1\15",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_150 = DFA.unpackEncodedString(dfa_150s);
    static final char[] dfa_151 = DFA.unpackEncodedStringToUnsignedChars(dfa_151s);
    static final char[] dfa_152 = DFA.unpackEncodedStringToUnsignedChars(dfa_152s);
    static final short[] dfa_153 = DFA.unpackEncodedString(dfa_153s);
    static final short[] dfa_154 = DFA.unpackEncodedString(dfa_154s);
    static final short[][] dfa_155 = unpackEncodedStringArray(dfa_155s);

    class DFA303 extends DFA {

        public DFA303(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 303;
            this.eot = dfa_150;
            this.eof = dfa_150;
            this.min = dfa_151;
            this.max = dfa_152;
            this.accept = dfa_153;
            this.special = dfa_154;
            this.transition = dfa_155;
        }
        public String getDescription() {
            return "11637:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA303_1 = input.LA(1);

                         
                        int index303_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalSCL()) ) {s = 17;}

                        else if ( (synpred351_InternalSCL()) ) {s = 20;}

                         
                        input.seek(index303_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA303_2 = input.LA(1);

                         
                        int index303_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalSCL()) ) {s = 17;}

                        else if ( (synpred351_InternalSCL()) ) {s = 20;}

                         
                        input.seek(index303_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA303_3 = input.LA(1);

                         
                        int index303_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalSCL()) ) {s = 17;}

                        else if ( (synpred351_InternalSCL()) ) {s = 20;}

                         
                        input.seek(index303_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA303_4 = input.LA(1);

                         
                        int index303_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalSCL()) ) {s = 17;}

                        else if ( (synpred351_InternalSCL()) ) {s = 20;}

                         
                        input.seek(index303_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA303_5 = input.LA(1);

                         
                        int index303_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalSCL()) ) {s = 17;}

                        else if ( (synpred351_InternalSCL()) ) {s = 20;}

                         
                        input.seek(index303_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA303_6 = input.LA(1);

                         
                        int index303_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalSCL()) ) {s = 17;}

                        else if ( (synpred351_InternalSCL()) ) {s = 20;}

                         
                        input.seek(index303_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA303_7 = input.LA(1);

                         
                        int index303_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalSCL()) ) {s = 17;}

                        else if ( (synpred351_InternalSCL()) ) {s = 20;}

                         
                        input.seek(index303_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA303_8 = input.LA(1);

                         
                        int index303_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalSCL()) ) {s = 17;}

                        else if ( (synpred351_InternalSCL()) ) {s = 20;}

                         
                        input.seek(index303_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA303_9 = input.LA(1);

                         
                        int index303_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalSCL()) ) {s = 17;}

                        else if ( (synpred351_InternalSCL()) ) {s = 20;}

                         
                        input.seek(index303_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA303_10 = input.LA(1);

                         
                        int index303_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalSCL()) ) {s = 17;}

                        else if ( (synpred351_InternalSCL()) ) {s = 20;}

                         
                        input.seek(index303_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA303_11 = input.LA(1);

                         
                        int index303_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalSCL()) ) {s = 17;}

                        else if ( (synpred351_InternalSCL()) ) {s = 20;}

                         
                        input.seek(index303_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA303_12 = input.LA(1);

                         
                        int index303_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalSCL()) ) {s = 17;}

                        else if ( (synpred351_InternalSCL()) ) {s = 20;}

                         
                        input.seek(index303_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA303_13 = input.LA(1);

                         
                        int index303_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalSCL()) ) {s = 17;}

                        else if ( (synpred351_InternalSCL()) ) {s = 20;}

                         
                        input.seek(index303_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA303_14 = input.LA(1);

                         
                        int index303_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalSCL()) ) {s = 17;}

                        else if ( (synpred351_InternalSCL()) ) {s = 20;}

                         
                        input.seek(index303_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA303_15 = input.LA(1);

                         
                        int index303_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalSCL()) ) {s = 17;}

                        else if ( (synpred351_InternalSCL()) ) {s = 20;}

                         
                        input.seek(index303_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA303_16 = input.LA(1);

                         
                        int index303_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalSCL()) ) {s = 17;}

                        else if ( (synpred351_InternalSCL()) ) {s = 20;}

                         
                        input.seek(index303_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 303, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_156s = "\12\uffff";
    static final String dfa_157s = "\2\uffff\1\6\5\uffff\2\6";
    static final String dfa_158s = "\1\113\5\4\2\uffff\2\4";
    static final String dfa_159s = "\1\113\1\4\1\114\1\4\1\10\1\7\2\uffff\2\114";
    static final String dfa_160s = "\6\uffff\1\1\1\2\2\uffff";
    static final String dfa_161s = "\12\uffff}>";
    static final String[] dfa_162s = {
            "\1\1",
            "\1\2",
            "\2\6\1\uffff\4\6\6\uffff\1\6\7\uffff\1\7\36\uffff\1\3\12\uffff\1\4\7\uffff\1\5\1\6",
            "\1\10",
            "\1\10\2\uffff\2\6",
            "\1\6\2\uffff\1\11",
            "",
            "",
            "\2\6\1\uffff\4\6\6\uffff\1\6\7\uffff\1\7\36\uffff\1\3\12\uffff\1\4\7\uffff\1\5\1\6",
            "\2\6\1\uffff\4\6\6\uffff\1\6\7\uffff\1\7\51\uffff\1\6\7\uffff\2\6"
    };

    static final short[] dfa_156 = DFA.unpackEncodedString(dfa_156s);
    static final short[] dfa_157 = DFA.unpackEncodedString(dfa_157s);
    static final char[] dfa_158 = DFA.unpackEncodedStringToUnsignedChars(dfa_158s);
    static final char[] dfa_159 = DFA.unpackEncodedStringToUnsignedChars(dfa_159s);
    static final short[] dfa_160 = DFA.unpackEncodedString(dfa_160s);
    static final short[] dfa_161 = DFA.unpackEncodedString(dfa_161s);
    static final short[][] dfa_162 = unpackEncodedStringArray(dfa_162s);

    class DFA310 extends DFA {

        public DFA310(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 310;
            this.eot = dfa_156;
            this.eof = dfa_157;
            this.min = dfa_158;
            this.max = dfa_159;
            this.accept = dfa_160;
            this.special = dfa_161;
            this.transition = dfa_162;
        }
        public String getDescription() {
            return "12237:2: (this_Pragma_0= superPragma | this_JsonPragma_1= ruleJsonPragma )";
        }
    }
    static final String dfa_163s = "\14\uffff";
    static final String dfa_164s = "\3\uffff\1\1\4\uffff\2\1\2\uffff";
    static final String dfa_165s = "\1\12\1\uffff\4\4\1\7\3\4\1\0\1\uffff";
    static final String dfa_166s = "\1\114\1\uffff\1\4\1\166\1\4\1\10\1\7\1\165\2\166\1\0\1\uffff";
    static final String dfa_167s = "\1\uffff\1\1\11\uffff\1\2";
    static final String dfa_168s = "\12\uffff\1\0\1\uffff}>";
    static final String[] dfa_169s = {
            "\1\1\101\uffff\1\2",
            "",
            "\1\3",
            "\7\1\6\uffff\1\1\1\uffff\1\1\1\uffff\4\1\1\7\1\uffff\1\1\5\uffff\1\1\7\uffff\1\1\2\uffff\12\1\2\uffff\1\4\2\1\10\uffff\1\5\7\uffff\1\6\1\1\34\uffff\7\1\3\uffff\4\1",
            "\1\10",
            "\1\10\2\uffff\2\1",
            "\1\11",
            "\1\1\1\13\4\uffff\1\1\10\uffff\1\1\1\uffff\5\1\1\12\3\uffff\1\1\2\uffff\1\1\13\uffff\11\1\26\uffff\1\1\34\uffff\7\1\3\uffff\3\1",
            "\7\1\6\uffff\1\1\1\uffff\1\1\1\uffff\4\1\1\7\1\uffff\1\1\5\uffff\1\1\7\uffff\1\1\2\uffff\12\1\2\uffff\1\4\2\1\10\uffff\1\5\7\uffff\1\6\1\1\34\uffff\7\1\3\uffff\4\1",
            "\7\1\6\uffff\1\1\1\uffff\1\1\1\uffff\4\1\1\7\1\uffff\1\1\5\uffff\1\1\7\uffff\1\1\2\uffff\12\1\3\uffff\2\1\10\uffff\1\1\10\uffff\1\1\34\uffff\7\1\3\uffff\4\1",
            "\1\uffff",
            ""
    };

    static final short[] dfa_163 = DFA.unpackEncodedString(dfa_163s);
    static final short[] dfa_164 = DFA.unpackEncodedString(dfa_164s);
    static final char[] dfa_165 = DFA.unpackEncodedStringToUnsignedChars(dfa_165s);
    static final char[] dfa_166 = DFA.unpackEncodedStringToUnsignedChars(dfa_166s);
    static final short[] dfa_167 = DFA.unpackEncodedString(dfa_167s);
    static final short[] dfa_168 = DFA.unpackEncodedString(dfa_168s);
    static final short[][] dfa_169 = unpackEncodedStringArray(dfa_169s);

    class DFA311 extends DFA {

        public DFA311(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 311;
            this.eot = dfa_163;
            this.eof = dfa_164;
            this.min = dfa_165;
            this.max = dfa_166;
            this.accept = dfa_167;
            this.special = dfa_168;
            this.transition = dfa_169;
        }
        public String getDescription() {
            return "12279:2: (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA311_10 = input.LA(1);

                         
                        int index311_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred363_InternalSCL()) ) {s = 1;}

                        else if ( (true) ) {s = 11;}

                         
                        input.seek(index311_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 311, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_170s = "\3\uffff\1\1\4\uffff\2\1";
    static final String dfa_171s = "\1\12\1\uffff\4\4\1\7\1\uffff\2\4";
    static final String dfa_172s = "\1\114\1\uffff\1\4\1\114\2\4\1\7\1\uffff\2\114";
    static final String dfa_173s = "\1\uffff\1\1\5\uffff\1\2\2\uffff";
    static final String[] dfa_174s = {
            "\1\1\101\uffff\1\2",
            "",
            "\1\3",
            "\2\1\4\uffff\1\1\16\uffff\1\7\17\uffff\1\1\16\uffff\1\4\12\uffff\1\5\7\uffff\1\6\1\1",
            "\1\10",
            "\1\10",
            "\1\11",
            "",
            "\2\1\4\uffff\1\1\16\uffff\1\7\17\uffff\1\1\16\uffff\1\4\12\uffff\1\5\7\uffff\1\6\1\1",
            "\2\1\4\uffff\1\1\16\uffff\1\7\17\uffff\1\1\42\uffff\1\1"
    };
    static final short[] dfa_170 = DFA.unpackEncodedString(dfa_170s);
    static final char[] dfa_171 = DFA.unpackEncodedStringToUnsignedChars(dfa_171s);
    static final char[] dfa_172 = DFA.unpackEncodedStringToUnsignedChars(dfa_172s);
    static final short[] dfa_173 = DFA.unpackEncodedString(dfa_173s);
    static final short[][] dfa_174 = unpackEncodedStringArray(dfa_174s);

    class DFA312 extends DFA {

        public DFA312(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 312;
            this.eot = dfa_156;
            this.eof = dfa_170;
            this.min = dfa_171;
            this.max = dfa_172;
            this.accept = dfa_173;
            this.special = dfa_161;
            this.transition = dfa_174;
        }
        public String getDescription() {
            return "12321:2: (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )";
        }
    }
    static final String dfa_175s = "\26\uffff";
    static final String dfa_176s = "\3\uffff\1\11\4\uffff\1\7\2\uffff\2\11\1\uffff\1\7\1\uffff\1\7\1\uffff\1\7\1\uffff\1\7\1\uffff";
    static final String dfa_177s = "\1\12\1\uffff\4\4\1\7\1\uffff\1\4\2\uffff\12\4\1\0";
    static final String dfa_178s = "\1\114\1\uffff\1\4\1\166\1\4\1\10\1\7\1\uffff\1\166\2\uffff\2\166\1\4\1\166\1\4\1\166\1\4\1\166\1\4\1\166\1\0";
    static final String dfa_179s = "\1\uffff\1\1\5\uffff\1\2\1\uffff\1\4\1\3\13\uffff";
    static final String dfa_180s = "\25\uffff\1\0}>";
    static final String[] dfa_181s = {
            "\1\1\101\uffff\1\2",
            "",
            "\1\3",
            "\1\10\1\7\1\11\3\7\1\11\6\uffff\1\11\1\uffff\1\11\1\uffff\5\11\1\uffff\1\11\5\uffff\1\11\7\uffff\1\12\2\uffff\12\11\2\uffff\1\4\2\11\10\uffff\1\5\7\uffff\1\6\1\11\34\uffff\7\11\3\uffff\4\11",
            "\1\13",
            "\1\13\2\uffff\2\7",
            "\1\14",
            "",
            "\1\7\1\uffff\1\7\3\uffff\1\7\6\uffff\1\7\1\11\1\7\1\uffff\5\7\1\uffff\1\7\5\uffff\1\7\1\11\1\7\1\uffff\1\11\3\uffff\1\11\2\uffff\12\7\1\11\1\uffff\1\15\2\7\10\uffff\1\7\3\uffff\1\11\3\uffff\2\7\2\uffff\17\11\13\uffff\7\7\3\uffff\4\7",
            "",
            "",
            "\1\10\1\7\1\11\3\7\1\11\6\uffff\1\11\1\uffff\1\11\1\uffff\5\11\1\uffff\1\11\5\uffff\1\11\7\uffff\1\12\2\uffff\12\11\2\uffff\1\4\2\11\10\uffff\1\5\7\uffff\1\6\1\11\34\uffff\7\11\3\uffff\4\11",
            "\1\10\1\7\1\11\3\7\1\11\6\uffff\1\11\1\uffff\1\11\1\uffff\5\11\1\uffff\1\11\5\uffff\1\11\7\uffff\1\12\2\uffff\12\11\3\uffff\2\11\10\uffff\1\7\10\uffff\1\11\34\uffff\7\11\3\uffff\4\11",
            "\1\16",
            "\1\7\1\uffff\1\7\3\uffff\1\7\6\uffff\1\7\1\uffff\1\7\1\uffff\5\7\1\uffff\1\7\5\uffff\1\7\1\11\1\7\1\uffff\1\11\3\uffff\1\11\2\uffff\12\7\1\11\1\uffff\1\17\2\7\10\uffff\1\7\3\uffff\1\11\3\uffff\2\7\2\uffff\17\11\13\uffff\7\7\3\uffff\4\7",
            "\1\20",
            "\1\7\1\uffff\1\7\3\uffff\1\7\6\uffff\1\7\1\uffff\1\7\1\uffff\5\7\1\uffff\1\7\5\uffff\1\7\1\11\1\7\1\uffff\1\11\3\uffff\1\11\2\uffff\12\7\1\11\1\uffff\1\21\2\7\10\uffff\1\7\3\uffff\1\11\3\uffff\2\7\2\uffff\17\11\13\uffff\7\7\3\uffff\4\7",
            "\1\22",
            "\1\7\1\uffff\1\7\3\uffff\1\7\6\uffff\1\7\1\uffff\1\7\1\uffff\5\7\1\uffff\1\7\5\uffff\1\7\1\11\1\7\1\uffff\1\11\3\uffff\1\11\2\uffff\12\7\1\11\1\uffff\1\23\2\7\10\uffff\1\7\3\uffff\1\11\3\uffff\2\7\2\uffff\17\11\13\uffff\7\7\3\uffff\4\7",
            "\1\24",
            "\1\7\1\uffff\1\7\3\uffff\1\7\6\uffff\1\7\1\uffff\1\7\1\uffff\5\7\1\uffff\1\7\5\uffff\1\7\1\11\1\7\1\uffff\1\11\3\uffff\1\11\2\uffff\12\7\1\11\1\uffff\1\25\2\7\10\uffff\1\7\3\uffff\1\11\3\uffff\2\7\2\uffff\17\11\13\uffff\7\7\3\uffff\4\7",
            "\1\uffff"
    };

    static final short[] dfa_175 = DFA.unpackEncodedString(dfa_175s);
    static final short[] dfa_176 = DFA.unpackEncodedString(dfa_176s);
    static final char[] dfa_177 = DFA.unpackEncodedStringToUnsignedChars(dfa_177s);
    static final char[] dfa_178 = DFA.unpackEncodedStringToUnsignedChars(dfa_178s);
    static final short[] dfa_179 = DFA.unpackEncodedString(dfa_179s);
    static final short[] dfa_180 = DFA.unpackEncodedString(dfa_180s);
    static final short[][] dfa_181 = unpackEncodedStringArray(dfa_181s);

    class DFA313 extends DFA {

        public DFA313(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 313;
            this.eot = dfa_175;
            this.eof = dfa_176;
            this.min = dfa_177;
            this.max = dfa_178;
            this.accept = dfa_179;
            this.special = dfa_180;
            this.transition = dfa_181;
        }
        public String getDescription() {
            return "12363:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA313_21 = input.LA(1);

                         
                        int index313_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalSCL()) ) {s = 7;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index313_21);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 313, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_182s = "\6\uffff\1\2\1\1\2\uffff";
    static final String[] dfa_183s = {
            "\1\1",
            "\1\2",
            "\2\7\1\uffff\3\7\1\6\6\uffff\1\6\46\uffff\1\3\12\uffff\1\4\7\uffff\1\5\1\6",
            "\1\10",
            "\1\10\2\uffff\2\7",
            "\1\6\2\uffff\1\11",
            "",
            "",
            "\2\7\1\uffff\3\7\1\6\6\uffff\1\6\46\uffff\1\3\12\uffff\1\4\7\uffff\1\5\1\6",
            "\2\7\1\uffff\3\7\1\6\6\uffff\1\6\61\uffff\1\7\7\uffff\2\6"
    };
    static final short[] dfa_182 = DFA.unpackEncodedString(dfa_182s);
    static final short[][] dfa_183 = unpackEncodedStringArray(dfa_183s);

    class DFA314 extends DFA {

        public DFA314(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 314;
            this.eot = dfa_156;
            this.eof = dfa_157;
            this.min = dfa_158;
            this.max = dfa_159;
            this.accept = dfa_182;
            this.special = dfa_161;
            this.transition = dfa_183;
        }
        public String getDescription() {
            return "12429:2: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )";
        }
    }
    static final String dfa_184s = "\13\uffff";
    static final String dfa_185s = "\1\12\1\uffff\4\4\1\7\2\uffff\2\4";
    static final String dfa_186s = "\1\114\1\uffff\1\4\1\113\1\4\1\10\1\7\2\uffff\1\113\1\103";
    static final String dfa_187s = "\1\uffff\1\1\5\uffff\1\3\1\2\2\uffff";
    static final String dfa_188s = "\13\uffff}>";
    static final String[] dfa_189s = {
            "\1\1\101\uffff\1\2",
            "",
            "\1\3",
            "\2\10\1\uffff\3\10\37\uffff\1\7\16\uffff\1\4\12\uffff\1\5\7\uffff\1\6",
            "\1\11",
            "\1\11\2\uffff\2\10",
            "\1\12",
            "",
            "",
            "\2\10\1\uffff\3\10\37\uffff\1\7\16\uffff\1\4\12\uffff\1\5\7\uffff\1\6",
            "\2\10\1\uffff\3\10\37\uffff\1\7\31\uffff\1\10"
    };

    static final short[] dfa_184 = DFA.unpackEncodedString(dfa_184s);
    static final char[] dfa_185 = DFA.unpackEncodedStringToUnsignedChars(dfa_185s);
    static final char[] dfa_186 = DFA.unpackEncodedStringToUnsignedChars(dfa_186s);
    static final short[] dfa_187 = DFA.unpackEncodedString(dfa_187s);
    static final short[] dfa_188 = DFA.unpackEncodedString(dfa_188s);
    static final short[][] dfa_189 = unpackEncodedStringArray(dfa_189s);

    class DFA315 extends DFA {

        public DFA315(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 315;
            this.eot = dfa_184;
            this.eof = dfa_184;
            this.min = dfa_185;
            this.max = dfa_186;
            this.accept = dfa_187;
            this.special = dfa_188;
            this.transition = dfa_189;
        }
        public String getDescription() {
            return "12471:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation )";
        }
    }
    static final String dfa_190s = "\3\uffff\1\11\6\uffff\2\11";
    static final String dfa_191s = "\1\12\1\uffff\4\4\1\7\3\uffff\2\4";
    static final String dfa_192s = "\1\114\1\uffff\1\4\1\114\2\4\1\7\3\uffff\2\114";
    static final String dfa_193s = "\1\uffff\1\1\5\uffff\1\3\1\2\1\4\2\uffff";
    static final String dfa_194s = "\14\uffff}>";
    static final String[] dfa_195s = {
            "\1\1\101\uffff\1\2",
            "",
            "\1\3",
            "\1\11\1\10\4\uffff\1\11\36\uffff\1\7\16\uffff\1\4\12\uffff\1\5\7\uffff\1\6\1\11",
            "\1\12",
            "\1\12",
            "\1\13",
            "",
            "",
            "",
            "\1\11\1\10\4\uffff\1\11\36\uffff\1\7\16\uffff\1\4\12\uffff\1\5\7\uffff\1\6\1\11",
            "\1\11\1\10\4\uffff\1\11\36\uffff\1\7\42\uffff\1\11"
    };
    static final short[] dfa_190 = DFA.unpackEncodedString(dfa_190s);
    static final char[] dfa_191 = DFA.unpackEncodedStringToUnsignedChars(dfa_191s);
    static final char[] dfa_192 = DFA.unpackEncodedStringToUnsignedChars(dfa_192s);
    static final short[] dfa_193 = DFA.unpackEncodedString(dfa_193s);
    static final short[] dfa_194 = DFA.unpackEncodedString(dfa_194s);
    static final short[][] dfa_195 = unpackEncodedStringArray(dfa_195s);

    class DFA316 extends DFA {

        public DFA316(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 316;
            this.eot = dfa_163;
            this.eof = dfa_190;
            this.min = dfa_191;
            this.max = dfa_192;
            this.accept = dfa_193;
            this.special = dfa_194;
            this.transition = dfa_195;
        }
        public String getDescription() {
            return "12525:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )";
        }
    }

    class DFA342 extends DFA {

        public DFA342(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 342;
            this.eot = dfa_28;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "()* loopback of 1387:5: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA342_1 = input.LA(1);

                         
                        int index342_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalSCL()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index342_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA342_2 = input.LA(1);

                         
                        int index342_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalSCL()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index342_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 342, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000020402L,0x0000000000001800L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000020402L,0x0000000000001000L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000020400L,0x0000000000001000L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x003FE00243EC0412L,0x0038FE0000001000L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x003FE00243E80412L,0x0038FE0000001000L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000243A80412L,0x0000000000001000L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000080400L,0x0000000000001000L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000100002L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000410L,0x0000000000001000L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000040000L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000200400L,0x0000000000001000L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0040000000000000L,0x000000000FFF8000L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x04200044020007F0L,0x0000007000001108L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000500002L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000100412L,0x0000000000001000L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000000L,0x0000000030000000L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000800400L,0x0000000000001000L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000001000400L,0x0000000000001000L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x04200004020007F0L,0x0000005000001100L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000002000000L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x003FE00247E80410L,0x0038FE0000001000L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000247A80410L,0x0000000000001000L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000008100402L,0x0000000000001000L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000008000400L,0x0000000000001000L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000010000000L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x000000026BA80410L,0x0000000000001000L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000020000000L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000002000400L,0x0000000000001000L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x00000003C3A80410L,0x0000000000001000L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000000180000000L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000200000400L,0x0000000000001000L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000002400100002L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x042000C4020007F0L,0x0000007000001108L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000001800000000L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000008000000000L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000010000000002L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000020000000002L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000040000000000L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000410L,0x00783C0000001000L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000002400000000L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x000FE00000000400L,0x00383E0000001000L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000002500000L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000002100410L,0x0000000000001000L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000802L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x003FE00247E80C10L,0x0038FE0000001000L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000002400002L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000002000412L,0x0000000000001000L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x063FF80000400452L,0x0038FE0000001000L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0620180000000452L,0x0000000000001000L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000002000010L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000080000000002L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x063FF80004400450L,0x0038FE0000001000L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0620180004000450L,0x0000000000001000L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000080004000000L});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000100000000400L,0x0000000000001000L});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0004000000000000L,0x00003E0000000000L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000800100000L});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000800000802L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x000BE00000000400L,0x0038400000001000L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x003FE00004400400L,0x0038FE0000001000L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000100410L,0x0000000000001000L});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000C12L,0x0000000000001000L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x003FE00000400400L,0x0038FE0000001000L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x003FE00004400410L,0x0078FE0000001000L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000040002L});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0030000000000400L,0x0038000000001000L});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0030000000000000L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000420L,0x0000000000001000L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000800000410L,0x0000000000001000L});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000400400L,0x0038000000001000L});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000400000L});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0001000002000430L,0x0000000000001000L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0001000002000410L,0x0000000000001000L});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x0000000000006000L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000002000410L,0x0000000000001000L});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000804000000L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x00C0020000000002L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0080000000000002L});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x2008008000000000L,0x0007000000000014L});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000400002L});
        public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000412L,0x0000000000001000L});
        public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000400000000L});
        public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000001000000000L});
        public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000440L,0x0000000000001000L});
        public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0100002400000000L});
        public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0020000000000400L,0x0000000000001000L});
        public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0200000000000400L,0x0000000000001000L});
        public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0400000000000400L,0x0000000000001000L});
        public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0800000000000002L});
        public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x1000000000000002L});
        public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x2000000000000002L});
        public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x4000000000000002L});
        public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000008000000002L});
        public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000000002L,0x0000000FC0000000L});
        public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x8000000000000002L,0x0000000000000003L});
        public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x04200004020007F0L,0x0000005000001108L});
        public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x8000000000000002L});
        public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000001L});
        public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L});
        public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x8000000000000002L,0x0000000000000001L});
        public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x8000000000000002L,0x0000000000000002L});
        public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000003L});
        public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000000002L,0x000000000000000CL});
        public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
        public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000008L});
        public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000070L});
        public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000010L});
        public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
        public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000040L});
        public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000030L});
        public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000050L});
        public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000060L});
        public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
        public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
        public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000000000410L,0x0000005000001000L});
        public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
        public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0100020000000002L});
        public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000080L});
        public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0100022400000000L});
        public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000002000000002L});
        public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x04200044020007F0L,0x0000007000001308L});
        public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000004000020L});
        public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x00000200020003A0L,0x0000000000000400L});
        public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x00000600020003A0L,0x0000000000000400L});
        public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000040800000000L});
        public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x00000000000003B0L,0x0000000000000008L});
        public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000000800000002L});
        public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000000000000230L});
        public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000020000000000L});
        public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0100000000000002L,0x0000000000000808L});
        public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000000100L});
    }


}