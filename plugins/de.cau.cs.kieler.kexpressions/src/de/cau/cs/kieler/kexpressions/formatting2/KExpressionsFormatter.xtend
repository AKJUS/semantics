/*
 * generated by Xtext
 */
package de.cau.cs.kieler.kexpressions.formatting2;

import com.google.inject.Inject;
import de.cau.cs.kieler.annotations.formatting2.AnnotationsFormatter;
import de.cau.cs.kieler.kexpressions.Expression;
import de.cau.cs.kieler.kexpressions.FunctionCall;
import de.cau.cs.kieler.kexpressions.OperatorExpression;
import de.cau.cs.kieler.kexpressions.Parameter;
import de.cau.cs.kieler.kexpressions.ReferenceCall;
import de.cau.cs.kieler.kexpressions.ValuedObjectReference;
import de.cau.cs.kieler.kexpressions.services.KExpressionsGrammarAccess;
import org.eclipse.xtext.formatting2.IFormattableDocument;

class KExpressionsFormatter extends AnnotationsFormatter {
	
	@Inject extension KExpressionsGrammarAccess

	def dispatch void format(OperatorExpression operatorexpression, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Expression subExpressions : operatorexpression.getSubExpressions()) {
			format(subExpressions, document);
		}
	}

	def dispatch void format(ValuedObjectReference valuedobjectreference, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Expression indices : valuedobjectreference.getIndices()) {
			format(indices, document);
		}
		format(valuedobjectreference.getSubReference(), document);
	}

	def dispatch void format(ReferenceCall referencecall, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Parameter parameters : referencecall.getParameters()) {
			format(parameters, document);
		}
	}

	def dispatch void format(FunctionCall functioncall, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Parameter parameters : functioncall.getParameters()) {
			format(parameters, document);
		}
	}

	def dispatch void format(Parameter parameter, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		format(parameter.getExpression(), document);
	}
}
