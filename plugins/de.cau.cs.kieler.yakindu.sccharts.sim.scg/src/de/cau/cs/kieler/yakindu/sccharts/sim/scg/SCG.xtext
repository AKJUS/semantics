grammar de.cau.cs.kieler.yakindu.sccharts.sim.scg.SCG 
with de.cau.cs.kieler.yakindu.sccharts.sim.scl.SCL

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate scg "http://www.cau.de/cs/kieler/yakindu/sccharts/sim/scg/scg"

Instruction:
    Assignment | Conditional | Goto | Parallel | Pause
    'priority' priority=INT
    ('dependency' dependencies += Instruction)* 
;

InstructionSet:
    (instructions += Instruction)+ 
;

Label:
    'label:' name = ID
;

Assignment returns SCLExpression:
//    {Label}
    assignment=STRING
;

Conditional:
//    {Label}
    'if' expression = SCLExpression 'then'
        conditional = InstructionSet
    'end'
;

Goto:
//    {Label}
    'goto' name = ID 
;

Parallel:
//    {Label}
    'fork'
    (    threads += InstructionSet
    ('par'
         threads += InstructionSet)+)
    'join'
;

Pause:
//    {Label}
    pause = 'pause'
;
