grammar de.cau.cs.kieler.yakindu.sccharts.sim.scg.SCG 
with de.cau.cs.kieler.yakindu.sccharts.sim.scl.SCL

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate scg "http://www.cau.de/cs/kieler/yakindu/sccharts/sim/scg/scg"

Instruction:
    Assignment | Conditional | Label | Goto | Parallel | Pause
    'priority' priority=INT
    ('dependency' dependencies += Instruction)* 
    (';' secondInstructions = Instruction)?
;

Assignment returns SCLExpression:
    assignment=STRING
;

Conditional:
    'if' expression = SCLExpression 'then'
        instructions = Instruction
    'end'
;

Label:
    'label:' instruction = Instruction
;

Goto:
    'goto' name = ID 
;

Parallel:
    'fork'
        firstInstruction = Instruction
    'par'
        secondInstruction = Instruction
    'join'
;

Pause:
    pause = 'pause'
;