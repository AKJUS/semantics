<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
       "http://www.w3.org/TR/html4/loose.dtd"><head>
<title>KIELER SCCharts Compiler - Sequentially Constructive Charts - KIELER Compiler - KiCo </title>	   
<meta http-equiv="expires" content="0">
</head>

	   <style type="text/css">
<!--
.Stil1 {
	font-size: xx-large;
	font-weight: bold;
	font-family: Verdana, Arial, Helvetica, sans-serif;
}
.Stil3 {font-family: Verdana, Arial, Helvetica, sans-serif; font-size: xx-large;}
.Stil4 {color: #0000FF}
-->
</style>

<script>


function setResultText() {
    var scale = document.getElementById("scale");
	scale.disabled = true;
    var image = document.getElementById("resultImageDiv");
    var text = document.getElementById("resultTextDiv");
	text.style.display="block";
	image.style.display="none";
	compile();
//	alert("setResultText" + image + text);
}

function setResultImage() {
    var scale = document.getElementById("scale");
	scale.disabled = false;
//	alert("setResultImage");
    var image = document.getElementById("resultImageDiv");
    var text = document.getElementById("resultTextDiv");
	image.style.display="block";
	text.style.display="none";
	compile();
}

function compile() {
    var outputText = document.getElementById("outputText");
    if(outputText.checked) {
		compileText();
	} 
	else {
		compileImage();
	}
}

function compileText()
{
}


function compileImage()
{
    var image = document.getElementById("resultImage");
    if(image.complete) {
	    var model = document.getElementById("model")
	    var transformations = document.getElementById("transformations")
	    var scale = document.getElementById("scale")
        var new_image = new Image();
        //set up the new image
        new_image.id = "resultImage";
		var imageUrl = "http://localhost:4444/?model="+encodeURIComponent(model.value) + "&transformations=" + encodeURIComponent(transformations.value) + "&scale=" + encodeURIComponent(scale.value);
        new_image.src = imageUrl;
        // insert new image and remove old
        image.parentNode.insertBefore(new_image, image);
        image.parentNode.removeChild(image);
    }
    setTimeout(updateImage, 1000);
}

</script>

<div align="center">
  <p><img src="sccharts.png" width="512" height="150" /></p>
  <p><span class="Stil3">Sequentially Constructive Charts - SCCharts</span><span class="Stil1"><br />
      <span class="Stil4">ONLINE COMPILER</span></span></p>
    <table width="300" border="0" cellspacing="5">
      <tr>
        <th valign="top" scope="row"><div align="right">1. SCChart  </div></th>
        <td><label>
          <textarea name="model" cols="70" rows="25" id="model" onchange="compile();">
@HVLayout
scchart ABRO {
  input bool A;
  input bool B;
  input bool R;
  output bool O = false;

  region Main:

  initial state ABO {

    initial state WaitAB {

      region HandleA:

      initial state WA
      --> DA with A;

      final state DA;

      region HandleB:

      initial state WB
      --> DB with B;

      final state DB;
    }
    >-> Done with / O = true;

    state Done;
  }
  o-> ABO with R;
}
</textarea>
        </label></td>
		<td rowspan="3"  valign="top">
		<div id="resultImageDiv" style="font:24px bold; display: none">
        <img src="xxx" name="resultImage" id="resultImage" /></div>
		<div id="resultTextDiv" style="font:24px bold; display: none">
          <textarea name="resultText" cols="70" rows="25" id="resultText" readonly=true style="background-color: #CCCCCC">compiling...</textarea>
		  </div>       </td>
      </tr>
      <tr>
        <th valign="top" scope="row"><div align="right">2. Compile Transformations  </div></th>
        <td><label>
          <input name="transformations" type="text" id="transformations" size="94" value="ABORT" />
        </label></td>
      </tr>
      <tr>
        <th valign="top" scope="row"><p align="right">3. Other Options </p>        </th>
        <td><p>
			<label>
            <input type="radio" name="output" value="text" id="outputText" onclick="setResultText();" />
            textual output </label>
          <br />
		  <label>
            <input type="radio" name="output" value="graph" id="outputImage" onclick="setResultImage();" />
            graphical output, scale:  </label>
          <select name="scale" id="scale" onchange="compile();">
            <option>1</option>
            <option>2</option>
            <option>3</option>
            <option>4</option>
            <option>5</option>
          </select>
          <br />
        </p></td>
      </tr>
      <tr>
        <th scope="row"><label></label></th>
        <th scope="row"><div align="left">
          <input type="submit" name="Submit" value=" Compile / Update " onclick="compile();" />
        </div></th>
      </tr>
    </table>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
</div>

<script>
var myVar=setInterval(function(){compile()},2000);

var area = document.getElementById("model");
if (area.addEventListener) {
  area.addEventListener('input', function() {
    // event handling code for sane browsers
	window.clearInterval(myVar);
	myVar=setInterval(function(){compile()},2000);
  }, false);
} else if (area.attachEvent) {
  area.attachEvent('onpropertychange', function() {
    // IE-specific event handling code
	window.clearInterval(myVar);
	myVar=setInterval(function(){compile()},2000);
  });
}
</script>