/*
 * generated by Xtext
 */
grammar InternalSCEst;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package de.cau.cs.kieler.esterel.scest.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.cau.cs.kieler.esterel.scest.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.cau.cs.kieler.esterel.scest.services.SCEstGrammarAccess;

}

@parser::members {
 
 	private SCEstGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SCEstGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleSCEstProgram
entryRuleSCEstProgram 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_ML_COMMENT", "RULE_WS");
}
:
{ before(grammarAccess.getSCEstProgramRule()); }
	 ruleSCEstProgram
{ after(grammarAccess.getSCEstProgramRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule SCEstProgram
ruleSCEstProgram
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_ML_COMMENT", "RULE_WS");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSCEstProgramAccess().getModulesAssignment()); }
(rule__SCEstProgram__ModulesAssignment)*
{ after(grammarAccess.getSCEstProgramAccess().getModulesAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}





// Entry rule entryRuleSCEstModule
entryRuleSCEstModule 
:
{ before(grammarAccess.getSCEstModuleRule()); }
	 ruleSCEstModule
{ after(grammarAccess.getSCEstModuleRule()); } 
	 EOF 
;

// Rule SCEstModule
ruleSCEstModule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSCEstModuleAccess().getGroup()); }
(rule__SCEstModule__Group__0)
{ after(grammarAccess.getSCEstModuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleSCEstStatement
entryRuleSCEstStatement 
:
{ before(grammarAccess.getSCEstStatementRule()); }
	 ruleSCEstStatement
{ after(grammarAccess.getSCEstStatementRule()); } 
	 EOF 
;

// Rule SCEstStatement
ruleSCEstStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSCEstStatementAccess().getAlternatives()); }
(rule__SCEstStatement__Alternatives)
{ after(grammarAccess.getSCEstStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSCEstAtomicStatement
entryRuleSCEstAtomicStatement 
:
{ before(grammarAccess.getSCEstAtomicStatementRule()); }
	 ruleSCEstAtomicStatement
{ after(grammarAccess.getSCEstAtomicStatementRule()); } 
	 EOF 
;

// Rule SCEstAtomicStatement
ruleSCEstAtomicStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getAlternatives()); }
(rule__SCEstAtomicStatement__Alternatives)
{ after(grammarAccess.getSCEstAtomicStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEsterelParallel
entryRuleEsterelParallel 
:
{ before(grammarAccess.getEsterelParallelRule()); }
	 ruleEsterelParallel
{ after(grammarAccess.getEsterelParallelRule()); } 
	 EOF 
;

// Rule EsterelParallel
ruleEsterelParallel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEsterelParallelAccess().getGroup()); }
(rule__EsterelParallel__Group__0)
{ after(grammarAccess.getEsterelParallelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEsterelThread
entryRuleEsterelThread 
:
{ before(grammarAccess.getEsterelThreadRule()); }
	 ruleEsterelThread
{ after(grammarAccess.getEsterelThreadRule()); } 
	 EOF 
;

// Rule EsterelThread
ruleEsterelThread
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEsterelThreadAccess().getGroup()); }
(rule__EsterelThread__Group__0)
{ after(grammarAccess.getEsterelThreadAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlock
entryRuleBlock 
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockAccess().getGroup()); }
(rule__Block__Group__0)
{ after(grammarAccess.getBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePresent
entryRulePresent 
:
{ before(grammarAccess.getPresentRule()); }
	 rulePresent
{ after(grammarAccess.getPresentRule()); } 
	 EOF 
;

// Rule Present
rulePresent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPresentAccess().getGroup()); }
(rule__Present__Group__0)
{ after(grammarAccess.getPresentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePresentCase
entryRulePresentCase 
:
{ before(grammarAccess.getPresentCaseRule()); }
	 rulePresentCase
{ after(grammarAccess.getPresentCaseRule()); } 
	 EOF 
;

// Rule PresentCase
rulePresentCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPresentCaseAccess().getGroup()); }
(rule__PresentCase__Group__0)
{ after(grammarAccess.getPresentCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfTest
entryRuleIfTest 
:
{ before(grammarAccess.getIfTestRule()); }
	 ruleIfTest
{ after(grammarAccess.getIfTestRule()); } 
	 EOF 
;

// Rule IfTest
ruleIfTest
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfTestAccess().getGroup()); }
(rule__IfTest__Group__0)
{ after(grammarAccess.getIfTestAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElsIf
entryRuleElsIf 
:
{ before(grammarAccess.getElsIfRule()); }
	 ruleElsIf
{ after(grammarAccess.getElsIfRule()); } 
	 EOF 
;

// Rule ElsIf
ruleElsIf
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElsIfAccess().getGroup()); }
(rule__ElsIf__Group__0)
{ after(grammarAccess.getElsIfAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLoop
entryRuleLoop 
:
{ before(grammarAccess.getLoopRule()); }
	 ruleLoop
{ after(grammarAccess.getLoopRule()); } 
	 EOF 
;

// Rule Loop
ruleLoop
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLoopAccess().getGroup()); }
(rule__Loop__Group__0)
{ after(grammarAccess.getLoopAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRepeat
entryRuleRepeat 
:
{ before(grammarAccess.getRepeatRule()); }
	 ruleRepeat
{ after(grammarAccess.getRepeatRule()); } 
	 EOF 
;

// Rule Repeat
ruleRepeat
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRepeatAccess().getGroup()); }
(rule__Repeat__Group__0)
{ after(grammarAccess.getRepeatAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbort
entryRuleAbort 
:
{ before(grammarAccess.getAbortRule()); }
	 ruleAbort
{ after(grammarAccess.getAbortRule()); } 
	 EOF 
;

// Rule Abort
ruleAbort
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbortAccess().getGroup()); }
(rule__Abort__Group__0)
{ after(grammarAccess.getAbortAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCase
entryRuleCase 
:
{ before(grammarAccess.getCaseRule()); }
	 ruleCase
{ after(grammarAccess.getCaseRule()); } 
	 EOF 
;

// Rule Case
ruleCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCaseAccess().getGroup()); }
(rule__Case__Group__0)
{ after(grammarAccess.getCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAwait
entryRuleAwait 
:
{ before(grammarAccess.getAwaitRule()); }
	 ruleAwait
{ after(grammarAccess.getAwaitRule()); } 
	 EOF 
;

// Rule Await
ruleAwait
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAwaitAccess().getGroup()); }
(rule__Await__Group__0)
{ after(grammarAccess.getAwaitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEveryDo
entryRuleEveryDo 
:
{ before(grammarAccess.getEveryDoRule()); }
	 ruleEveryDo
{ after(grammarAccess.getEveryDoRule()); } 
	 EOF 
;

// Rule EveryDo
ruleEveryDo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEveryDoAccess().getGroup()); }
(rule__EveryDo__Group__0)
{ after(grammarAccess.getEveryDoAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuspend
entryRuleSuspend 
:
{ before(grammarAccess.getSuspendRule()); }
	 ruleSuspend
{ after(grammarAccess.getSuspendRule()); } 
	 EOF 
;

// Rule Suspend
ruleSuspend
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuspendAccess().getGroup()); }
(rule__Suspend__Group__0)
{ after(grammarAccess.getSuspendAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrap
entryRuleTrap 
:
{ before(grammarAccess.getTrapRule()); }
	 ruleTrap
{ after(grammarAccess.getTrapRule()); } 
	 EOF 
;

// Rule Trap
ruleTrap
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTrapAccess().getGroup()); }
(rule__Trap__Group__0)
{ after(grammarAccess.getTrapAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrapHandler
entryRuleTrapHandler 
:
{ before(grammarAccess.getTrapHandlerRule()); }
	 ruleTrapHandler
{ after(grammarAccess.getTrapHandlerRule()); } 
	 EOF 
;

// Rule TrapHandler
ruleTrapHandler
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTrapHandlerAccess().getGroup()); }
(rule__TrapHandler__Group__0)
{ after(grammarAccess.getTrapHandlerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExec
entryRuleExec 
:
{ before(grammarAccess.getExecRule()); }
	 ruleExec
{ after(grammarAccess.getExecRule()); } 
	 EOF 
;

// Rule Exec
ruleExec
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExecAccess().getGroup()); }
(rule__Exec__Group__0)
{ after(grammarAccess.getExecAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExecCase
entryRuleExecCase 
:
{ before(grammarAccess.getExecCaseRule()); }
	 ruleExecCase
{ after(grammarAccess.getExecCaseRule()); } 
	 EOF 
;

// Rule ExecCase
ruleExecCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExecCaseAccess().getGroup()); }
(rule__ExecCase__Group__0)
{ after(grammarAccess.getExecCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalSignalDecl
entryRuleLocalSignalDecl 
:
{ before(grammarAccess.getLocalSignalDeclRule()); }
	 ruleLocalSignalDecl
{ after(grammarAccess.getLocalSignalDeclRule()); } 
	 EOF 
;

// Rule LocalSignalDecl
ruleLocalSignalDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getGroup()); }
(rule__LocalSignalDecl__Group__0)
{ after(grammarAccess.getLocalSignalDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalVariable
entryRuleLocalVariable 
:
{ before(grammarAccess.getLocalVariableRule()); }
	 ruleLocalVariable
{ after(grammarAccess.getLocalVariableRule()); } 
	 EOF 
;

// Rule LocalVariable
ruleLocalVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalVariableAccess().getGroup()); }
(rule__LocalVariable__Group__0)
{ after(grammarAccess.getLocalVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModuleRenaming
entryRuleModuleRenaming 
:
{ before(grammarAccess.getModuleRenamingRule()); }
	 ruleModuleRenaming
{ after(grammarAccess.getModuleRenamingRule()); } 
	 EOF 
;

// Rule ModuleRenaming
ruleModuleRenaming
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleRenamingAccess().getAlternatives()); }
(rule__ModuleRenaming__Alternatives)
{ after(grammarAccess.getModuleRenamingAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDo
entryRuleDo 
:
{ before(grammarAccess.getDoRule()); }
	 ruleDo
{ after(grammarAccess.getDoRule()); } 
	 EOF 
;

// Rule Do
ruleDo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoAccess().getGroup()); }
(rule__Do__Group__0)
{ after(grammarAccess.getDoAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnEmit
entryRuleUnEmit 
:
{ before(grammarAccess.getUnEmitRule()); }
	 ruleUnEmit
{ after(grammarAccess.getUnEmitRule()); } 
	 EOF 
;

// Rule UnEmit
ruleUnEmit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnEmitAccess().getGroup()); }
(rule__UnEmit__Group__0)
{ after(grammarAccess.getUnEmitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSet
entryRuleSet 
:
{ before(grammarAccess.getSetRule()); }
	 ruleSet
{ after(grammarAccess.getSetRule()); } 
	 EOF 
;

// Rule Set
ruleSet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSetAccess().getGroup()); }
(rule__Set__Group__0)
{ after(grammarAccess.getSetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditional
entryRuleConditional 
:
{ before(grammarAccess.getConditionalRule()); }
	 ruleConditional
{ after(grammarAccess.getConditionalRule()); } 
	 EOF 
;

// Rule Conditional
ruleConditional
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionalAccess().getGroup()); }
(rule__Conditional__Group__0)
{ after(grammarAccess.getConditionalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElseScope
entryRuleElseScope 
:
{ before(grammarAccess.getElseScopeRule()); }
	 ruleElseScope
{ after(grammarAccess.getElseScopeRule()); } 
	 EOF 
;

// Rule ElseScope
ruleElseScope
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElseScopeAccess().getGroup()); }
(rule__ElseScope__Group__0)
{ after(grammarAccess.getElseScopeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMetaStatement
entryRuleMetaStatement 
:
{ before(grammarAccess.getMetaStatementRule()); }
	 ruleMetaStatement
{ after(grammarAccess.getMetaStatementRule()); } 
	 EOF 
;

// Rule MetaStatement
ruleMetaStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMetaStatementAccess().getAlternatives()); }
(rule__MetaStatement__Alternatives)
{ after(grammarAccess.getMetaStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleThread
entryRuleThread 
:
{ before(grammarAccess.getThreadRule()); }
	 ruleThread
{ after(grammarAccess.getThreadRule()); } 
	 EOF 
;

// Rule Thread
ruleThread
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getThreadAccess().getGroup()); }
(rule__Thread__Group__0)
{ after(grammarAccess.getThreadAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParallel
entryRuleParallel 
:
{ before(grammarAccess.getParallelRule()); }
	 ruleParallel
{ after(grammarAccess.getParallelRule()); } 
	 EOF 
;

// Rule Parallel
ruleParallel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParallelAccess().getGroup()); }
(rule__Parallel__Group__0)
{ after(grammarAccess.getParallelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScopeStatement
entryRuleScopeStatement 
:
{ before(grammarAccess.getScopeStatementRule()); }
	 ruleScopeStatement
{ after(grammarAccess.getScopeStatementRule()); } 
	 EOF 
;

// Rule ScopeStatement
ruleScopeStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScopeStatementAccess().getGroup()); }
(rule__ScopeStatement__Group__0)
{ after(grammarAccess.getScopeStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicExpression
entryRuleAtomicExpression 
:
{ before(grammarAccess.getAtomicExpressionRule()); }
	 ruleAtomicExpression
{ after(grammarAccess.getAtomicExpressionRule()); } 
	 EOF 
;

// Rule AtomicExpression
ruleAtomicExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicExpressionAccess().getAlternatives()); }
(rule__AtomicExpression__Alternatives)
{ after(grammarAccess.getAtomicExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicValuedExpression
entryRuleAtomicValuedExpression 
:
{ before(grammarAccess.getAtomicValuedExpressionRule()); }
	 ruleAtomicValuedExpression
{ after(grammarAccess.getAtomicValuedExpressionRule()); } 
	 EOF 
;

// Rule AtomicValuedExpression
ruleAtomicValuedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getAlternatives()); }
(rule__AtomicValuedExpression__Alternatives)
{ after(grammarAccess.getAtomicValuedExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleModule
entryRuleModule 
:
{ before(grammarAccess.getModuleRule()); }
	 ruleModule
{ after(grammarAccess.getModuleRule()); } 
	 EOF 
;

// Rule Module
ruleModule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleAccess().getGroup()); }
(rule__Module__Group__0)
{ after(grammarAccess.getModuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeIdentifier
entryRuleTypeIdentifier 
:
{ before(grammarAccess.getTypeIdentifierRule()); }
	 ruleTypeIdentifier
{ after(grammarAccess.getTypeIdentifierRule()); } 
	 EOF 
;

// Rule TypeIdentifier
ruleTypeIdentifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeIdentifierAccess().getAlternatives()); }
(rule__TypeIdentifier__Alternatives)
{ after(grammarAccess.getTypeIdentifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeDecl
entryRuleTypeDecl 
:
{ before(grammarAccess.getTypeDeclRule()); }
	 ruleTypeDecl
{ after(grammarAccess.getTypeDeclRule()); } 
	 EOF 
;

// Rule TypeDecl
ruleTypeDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeDeclAccess().getGroup()); }
(rule__TypeDecl__Group__0)
{ after(grammarAccess.getTypeDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getNameAssignment()); }
(rule__Type__NameAssignment)
{ after(grammarAccess.getTypeAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantDecls
entryRuleConstantDecls 
:
{ before(grammarAccess.getConstantDeclsRule()); }
	 ruleConstantDecls
{ after(grammarAccess.getConstantDeclsRule()); } 
	 EOF 
;

// Rule ConstantDecls
ruleConstantDecls
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantDeclsAccess().getGroup()); }
(rule__ConstantDecls__Group__0)
{ after(grammarAccess.getConstantDeclsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOneTypeConstantDecls
entryRuleOneTypeConstantDecls 
:
{ before(grammarAccess.getOneTypeConstantDeclsRule()); }
	 ruleOneTypeConstantDecls
{ after(grammarAccess.getOneTypeConstantDeclsRule()); } 
	 EOF 
;

// Rule OneTypeConstantDecls
ruleOneTypeConstantDecls
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOneTypeConstantDeclsAccess().getGroup()); }
(rule__OneTypeConstantDecls__Group__0)
{ after(grammarAccess.getOneTypeConstantDeclsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstant
entryRuleConstant 
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantAccess().getGroup()); }
(rule__Constant__Group__0)
{ after(grammarAccess.getConstantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantValue
entryRuleConstantValue 
:
{ before(grammarAccess.getConstantValueRule()); }
	 ruleConstantValue
{ after(grammarAccess.getConstantValueRule()); } 
	 EOF 
;

// Rule ConstantValue
ruleConstantValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantValueAccess().getAlternatives()); }
(rule__ConstantValue__Alternatives)
{ after(grammarAccess.getConstantValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionDecl
entryRuleFunctionDecl 
:
{ before(grammarAccess.getFunctionDeclRule()); }
	 ruleFunctionDecl
{ after(grammarAccess.getFunctionDeclRule()); } 
	 EOF 
;

// Rule FunctionDecl
ruleFunctionDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionDeclAccess().getGroup()); }
(rule__FunctionDecl__Group__0)
{ after(grammarAccess.getFunctionDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunction
entryRuleFunction 
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionAccess().getGroup()); }
(rule__Function__Group__0)
{ after(grammarAccess.getFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProcedureDecl
entryRuleProcedureDecl 
:
{ before(grammarAccess.getProcedureDeclRule()); }
	 ruleProcedureDecl
{ after(grammarAccess.getProcedureDeclRule()); } 
	 EOF 
;

// Rule ProcedureDecl
ruleProcedureDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProcedureDeclAccess().getGroup()); }
(rule__ProcedureDecl__Group__0)
{ after(grammarAccess.getProcedureDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProcedure
entryRuleProcedure 
:
{ before(grammarAccess.getProcedureRule()); }
	 ruleProcedure
{ after(grammarAccess.getProcedureRule()); } 
	 EOF 
;

// Rule Procedure
ruleProcedure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProcedureAccess().getGroup()); }
(rule__Procedure__Group__0)
{ after(grammarAccess.getProcedureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTaskDecl
entryRuleTaskDecl 
:
{ before(grammarAccess.getTaskDeclRule()); }
	 ruleTaskDecl
{ after(grammarAccess.getTaskDeclRule()); } 
	 EOF 
;

// Rule TaskDecl
ruleTaskDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTaskDeclAccess().getGroup()); }
(rule__TaskDecl__Group__0)
{ after(grammarAccess.getTaskDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTask
entryRuleTask 
:
{ before(grammarAccess.getTaskRule()); }
	 ruleTask
{ after(grammarAccess.getTaskRule()); } 
	 EOF 
;

// Rule Task
ruleTask
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTaskAccess().getGroup()); }
(rule__Task__Group__0)
{ after(grammarAccess.getTaskAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfaceSignalDecl
entryRuleInterfaceSignalDecl 
:
{ before(grammarAccess.getInterfaceSignalDeclRule()); }
	 ruleInterfaceSignalDecl
{ after(grammarAccess.getInterfaceSignalDeclRule()); } 
	 EOF 
;

// Rule InterfaceSignalDecl
ruleInterfaceSignalDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getAlternatives()); }
(rule__InterfaceSignalDecl__Alternatives)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleISignal
entryRuleISignal 
:
{ before(grammarAccess.getISignalRule()); }
	 ruleISignal
{ after(grammarAccess.getISignalRule()); } 
	 EOF 
;

// Rule ISignal
ruleISignal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getISignalAccess().getGroup()); }
(rule__ISignal__Group__0)
{ after(grammarAccess.getISignalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSensorDecl
entryRuleSensorDecl 
:
{ before(grammarAccess.getSensorDeclRule()); }
	 ruleSensorDecl
{ after(grammarAccess.getSensorDeclRule()); } 
	 EOF 
;

// Rule SensorDecl
ruleSensorDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSensorDeclAccess().getGroup()); }
(rule__SensorDecl__Group__0)
{ after(grammarAccess.getSensorDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSensorWithType
entryRuleSensorWithType 
:
{ before(grammarAccess.getSensorWithTypeRule()); }
	 ruleSensorWithType
{ after(grammarAccess.getSensorWithTypeRule()); } 
	 EOF 
;

// Rule SensorWithType
ruleSensorWithType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSensorWithTypeAccess().getGroup()); }
(rule__SensorWithType__Group__0)
{ after(grammarAccess.getSensorWithTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSensor
entryRuleSensor 
:
{ before(grammarAccess.getSensorRule()); }
	 ruleSensor
{ after(grammarAccess.getSensorRule()); } 
	 EOF 
;

// Rule Sensor
ruleSensor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSensorAccess().getNameAssignment()); }
(rule__Sensor__NameAssignment)
{ after(grammarAccess.getSensorAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationDecl
entryRuleRelationDecl 
:
{ before(grammarAccess.getRelationDeclRule()); }
	 ruleRelationDecl
{ after(grammarAccess.getRelationDeclRule()); } 
	 EOF 
;

// Rule RelationDecl
ruleRelationDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationDeclAccess().getGroup()); }
(rule__RelationDecl__Group__0)
{ after(grammarAccess.getRelationDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationType
entryRuleRelationType 
:
{ before(grammarAccess.getRelationTypeRule()); }
	 ruleRelationType
{ after(grammarAccess.getRelationTypeRule()); } 
	 EOF 
;

// Rule RelationType
ruleRelationType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationTypeAccess().getAlternatives()); }
(rule__RelationType__Alternatives)
{ after(grammarAccess.getRelationTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationImplication
entryRuleRelationImplication 
:
{ before(grammarAccess.getRelationImplicationRule()); }
	 ruleRelationImplication
{ after(grammarAccess.getRelationImplicationRule()); } 
	 EOF 
;

// Rule RelationImplication
ruleRelationImplication
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationImplicationAccess().getGroup()); }
(rule__RelationImplication__Group__0)
{ after(grammarAccess.getRelationImplicationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationIncompatibility
entryRuleRelationIncompatibility 
:
{ before(grammarAccess.getRelationIncompatibilityRule()); }
	 ruleRelationIncompatibility
{ after(grammarAccess.getRelationIncompatibilityRule()); } 
	 EOF 
;

// Rule RelationIncompatibility
ruleRelationIncompatibility
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getGroup()); }
(rule__RelationIncompatibility__Group__0)
{ after(grammarAccess.getRelationIncompatibilityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEsterelStatement
entryRuleEsterelStatement 
:
{ before(grammarAccess.getEsterelStatementRule()); }
	 ruleEsterelStatement
{ after(grammarAccess.getEsterelStatementRule()); } 
	 EOF 
;

// Rule EsterelStatement
ruleEsterelStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEsterelStatementAccess().getAlternatives()); }
(rule__EsterelStatement__Alternatives)
{ after(grammarAccess.getEsterelStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicStatement
entryRuleAtomicStatement 
:
{ before(grammarAccess.getAtomicStatementRule()); }
	 ruleAtomicStatement
{ after(grammarAccess.getAtomicStatementRule()); } 
	 EOF 
;

// Rule AtomicStatement
ruleAtomicStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicStatementAccess().getAlternatives()); }
(rule__AtomicStatement__Alternatives)
{ after(grammarAccess.getAtomicStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNothing
entryRuleNothing 
:
{ before(grammarAccess.getNothingRule()); }
	 ruleNothing
{ after(grammarAccess.getNothingRule()); } 
	 EOF 
;

// Rule Nothing
ruleNothing
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNothingAccess().getGroup()); }
(rule__Nothing__Group__0)
{ after(grammarAccess.getNothingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHalt
entryRuleHalt 
:
{ before(grammarAccess.getHaltRule()); }
	 ruleHalt
{ after(grammarAccess.getHaltRule()); } 
	 EOF 
;

// Rule Halt
ruleHalt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHaltAccess().getGroup()); }
(rule__Halt__Group__0)
{ after(grammarAccess.getHaltAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEmit
entryRuleEmit 
:
{ before(grammarAccess.getEmitRule()); }
	 ruleEmit
{ after(grammarAccess.getEmitRule()); } 
	 EOF 
;

// Rule Emit
ruleEmit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEmitAccess().getGroup()); }
(rule__Emit__Group__0)
{ after(grammarAccess.getEmitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSustain
entryRuleSustain 
:
{ before(grammarAccess.getSustainRule()); }
	 ruleSustain
{ after(grammarAccess.getSustainRule()); } 
	 EOF 
;

// Rule Sustain
ruleSustain
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSustainAccess().getGroup()); }
(rule__Sustain__Group__0)
{ after(grammarAccess.getSustainAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEsterelAssignment
entryRuleEsterelAssignment 
:
{ before(grammarAccess.getEsterelAssignmentRule()); }
	 ruleEsterelAssignment
{ after(grammarAccess.getEsterelAssignmentRule()); } 
	 EOF 
;

// Rule EsterelAssignment
ruleEsterelAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEsterelAssignmentAccess().getGroup()); }
(rule__EsterelAssignment__Group__0)
{ after(grammarAccess.getEsterelAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProcCall
entryRuleProcCall 
:
{ before(grammarAccess.getProcCallRule()); }
	 ruleProcCall
{ after(grammarAccess.getProcCallRule()); } 
	 EOF 
;

// Rule ProcCall
ruleProcCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProcCallAccess().getGroup()); }
(rule__ProcCall__Group__0)
{ after(grammarAccess.getProcCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrapSignal
entryRuleTrapSignal 
:
{ before(grammarAccess.getTrapSignalRule()); }
	 ruleTrapSignal
{ after(grammarAccess.getTrapSignalRule()); } 
	 EOF 
;

// Rule TrapSignal
ruleTrapSignal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTrapSignalAccess().getGroup()); }
(rule__TrapSignal__Group__0)
{ after(grammarAccess.getTrapSignalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExit
entryRuleExit 
:
{ before(grammarAccess.getExitRule()); }
	 ruleExit
{ after(grammarAccess.getExitRule()); } 
	 EOF 
;

// Rule Exit
ruleExit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExitAccess().getGroup()); }
(rule__Exit__Group__0)
{ after(grammarAccess.getExitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDecl
entryRuleVariableDecl 
:
{ before(grammarAccess.getVariableDeclRule()); }
	 ruleVariableDecl
{ after(grammarAccess.getVariableDeclRule()); } 
	 EOF 
;

// Rule VariableDecl
ruleVariableDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclAccess().getGroup()); }
(rule__VariableDecl__Group__0)
{ after(grammarAccess.getVariableDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIVariable
entryRuleIVariable 
:
{ before(grammarAccess.getIVariableRule()); }
	 ruleIVariable
{ after(grammarAccess.getIVariableRule()); } 
	 EOF 
;

// Rule IVariable
ruleIVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIVariableAccess().getGroup()); }
(rule__IVariable__Group__0)
{ after(grammarAccess.getIVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRun
entryRuleRun 
:
{ before(grammarAccess.getRunRule()); }
	 ruleRun
{ after(grammarAccess.getRunRule()); } 
	 EOF 
;

// Rule Run
ruleRun
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRunAccess().getGroup()); }
(rule__Run__Group__0)
{ after(grammarAccess.getRunAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRenaming
entryRuleRenaming 
:
{ before(grammarAccess.getRenamingRule()); }
	 ruleRenaming
{ after(grammarAccess.getRenamingRule()); } 
	 EOF 
;

// Rule Renaming
ruleRenaming
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRenamingAccess().getGroup()); }
(rule__Renaming__Group__0)
{ after(grammarAccess.getRenamingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeRenaming
entryRuleTypeRenaming 
:
{ before(grammarAccess.getTypeRenamingRule()); }
	 ruleTypeRenaming
{ after(grammarAccess.getTypeRenamingRule()); } 
	 EOF 
;

// Rule TypeRenaming
ruleTypeRenaming
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeRenamingAccess().getGroup()); }
(rule__TypeRenaming__Group__0)
{ after(grammarAccess.getTypeRenamingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantRenaming
entryRuleConstantRenaming 
:
{ before(grammarAccess.getConstantRenamingRule()); }
	 ruleConstantRenaming
{ after(grammarAccess.getConstantRenamingRule()); } 
	 EOF 
;

// Rule ConstantRenaming
ruleConstantRenaming
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantRenamingAccess().getGroup()); }
(rule__ConstantRenaming__Group__0)
{ after(grammarAccess.getConstantRenamingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionRenaming
entryRuleFunctionRenaming 
:
{ before(grammarAccess.getFunctionRenamingRule()); }
	 ruleFunctionRenaming
{ after(grammarAccess.getFunctionRenamingRule()); } 
	 EOF 
;

// Rule FunctionRenaming
ruleFunctionRenaming
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionRenamingAccess().getGroup()); }
(rule__FunctionRenaming__Group__0)
{ after(grammarAccess.getFunctionRenamingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProcedureRenaming
entryRuleProcedureRenaming 
:
{ before(grammarAccess.getProcedureRenamingRule()); }
	 ruleProcedureRenaming
{ after(grammarAccess.getProcedureRenamingRule()); } 
	 EOF 
;

// Rule ProcedureRenaming
ruleProcedureRenaming
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProcedureRenamingAccess().getGroup()); }
(rule__ProcedureRenaming__Group__0)
{ after(grammarAccess.getProcedureRenamingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTaskRenaming
entryRuleTaskRenaming 
:
{ before(grammarAccess.getTaskRenamingRule()); }
	 ruleTaskRenaming
{ after(grammarAccess.getTaskRenamingRule()); } 
	 EOF 
;

// Rule TaskRenaming
ruleTaskRenaming
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTaskRenamingAccess().getGroup()); }
(rule__TaskRenaming__Group__0)
{ after(grammarAccess.getTaskRenamingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalRenaming
entryRuleSignalRenaming 
:
{ before(grammarAccess.getSignalRenamingRule()); }
	 ruleSignalRenaming
{ after(grammarAccess.getSignalRenamingRule()); } 
	 EOF 
;

// Rule SignalRenaming
ruleSignalRenaming
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalRenamingAccess().getGroup()); }
(rule__SignalRenaming__Group__0)
{ after(grammarAccess.getSignalRenamingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBuildInFunction
entryRuleBuildInFunction 
:
{ before(grammarAccess.getBuildInFunctionRule()); }
	 ruleBuildInFunction
{ after(grammarAccess.getBuildInFunctionRule()); } 
	 EOF 
;

// Rule BuildInFunction
ruleBuildInFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBuildInFunctionAccess().getAlternatives()); }
(rule__BuildInFunction__Alternatives)
{ after(grammarAccess.getBuildInFunctionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrapExpression
entryRuleTrapExpression 
:
{ before(grammarAccess.getTrapExpressionRule()); }
	 ruleTrapExpression
{ after(grammarAccess.getTrapExpressionRule()); } 
	 EOF 
;

// Rule TrapExpression
ruleTrapExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTrapExpressionAccess().getGroup()); }
(rule__TrapExpression__Group__0)
{ after(grammarAccess.getTrapExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionExpression
entryRuleFunctionExpression 
:
{ before(grammarAccess.getFunctionExpressionRule()); }
	 ruleFunctionExpression
{ after(grammarAccess.getFunctionExpressionRule()); } 
	 EOF 
;

// Rule FunctionExpression
ruleFunctionExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionExpressionAccess().getGroup()); }
(rule__FunctionExpression__Group__0)
{ after(grammarAccess.getFunctionExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantExpression
entryRuleConstantExpression 
:
{ before(grammarAccess.getConstantExpressionRule()); }
	 ruleConstantExpression
{ after(grammarAccess.getConstantExpressionRule()); } 
	 EOF 
;

// Rule ConstantExpression
ruleConstantExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantExpressionAccess().getGroup()); }
(rule__ConstantExpression__Group__0)
{ after(grammarAccess.getConstantExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrapExpr
entryRuleTrapExpr 
:
{ before(grammarAccess.getTrapExprRule()); }
	 ruleTrapExpr
{ after(grammarAccess.getTrapExprRule()); } 
	 EOF 
;

// Rule TrapExpr
ruleTrapExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTrapExprAccess().getGroup()); }
(rule__TrapExpr__Group__0)
{ after(grammarAccess.getTrapExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrapAndExpression
entryRuleTrapAndExpression 
:
{ before(grammarAccess.getTrapAndExpressionRule()); }
	 ruleTrapAndExpression
{ after(grammarAccess.getTrapAndExpressionRule()); } 
	 EOF 
;

// Rule TrapAndExpression
ruleTrapAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTrapAndExpressionAccess().getGroup()); }
(rule__TrapAndExpression__Group__0)
{ after(grammarAccess.getTrapAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrapNotExpression
entryRuleTrapNotExpression 
:
{ before(grammarAccess.getTrapNotExpressionRule()); }
	 ruleTrapNotExpression
{ after(grammarAccess.getTrapNotExpressionRule()); } 
	 EOF 
;

// Rule TrapNotExpression
ruleTrapNotExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTrapNotExpressionAccess().getAlternatives()); }
(rule__TrapNotExpression__Alternatives)
{ after(grammarAccess.getTrapNotExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrapAtomicExpression
entryRuleTrapAtomicExpression 
:
{ before(grammarAccess.getTrapAtomicExpressionRule()); }
	 ruleTrapAtomicExpression
{ after(grammarAccess.getTrapAtomicExpressionRule()); } 
	 EOF 
;

// Rule TrapAtomicExpression
ruleTrapAtomicExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTrapAtomicExpressionAccess().getAlternatives()); }
(rule__TrapAtomicExpression__Alternatives)
{ after(grammarAccess.getTrapAtomicExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrapReferenceExpr
entryRuleTrapReferenceExpr 
:
{ before(grammarAccess.getTrapReferenceExprRule()); }
	 ruleTrapReferenceExpr
{ after(grammarAccess.getTrapReferenceExprRule()); } 
	 EOF 
;

// Rule TrapReferenceExpr
ruleTrapReferenceExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTrapReferenceExprAccess().getGroup()); }
(rule__TrapReferenceExpr__Group__0)
{ after(grammarAccess.getTrapReferenceExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalExpression
entryRuleSignalExpression 
:
{ before(grammarAccess.getSignalExpressionRule()); }
	 ruleSignalExpression
{ after(grammarAccess.getSignalExpressionRule()); } 
	 EOF 
;

// Rule SignalExpression
ruleSignalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalExpressionAccess().getGroup()); }
(rule__SignalExpression__Group__0)
{ after(grammarAccess.getSignalExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalAndExpression
entryRuleSignalAndExpression 
:
{ before(grammarAccess.getSignalAndExpressionRule()); }
	 ruleSignalAndExpression
{ after(grammarAccess.getSignalAndExpressionRule()); } 
	 EOF 
;

// Rule SignalAndExpression
ruleSignalAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalAndExpressionAccess().getGroup()); }
(rule__SignalAndExpression__Group__0)
{ after(grammarAccess.getSignalAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalNotExpression
entryRuleSignalNotExpression 
:
{ before(grammarAccess.getSignalNotExpressionRule()); }
	 ruleSignalNotExpression
{ after(grammarAccess.getSignalNotExpressionRule()); } 
	 EOF 
;

// Rule SignalNotExpression
ruleSignalNotExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalNotExpressionAccess().getAlternatives()); }
(rule__SignalNotExpression__Alternatives)
{ after(grammarAccess.getSignalNotExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalAtomicExpression
entryRuleSignalAtomicExpression 
:
{ before(grammarAccess.getSignalAtomicExpressionRule()); }
	 ruleSignalAtomicExpression
{ after(grammarAccess.getSignalAtomicExpressionRule()); } 
	 EOF 
;

// Rule SignalAtomicExpression
ruleSignalAtomicExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalAtomicExpressionAccess().getAlternatives()); }
(rule__SignalAtomicExpression__Alternatives)
{ after(grammarAccess.getSignalAtomicExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalReferenceExpr
entryRuleSignalReferenceExpr 
:
{ before(grammarAccess.getSignalReferenceExprRule()); }
	 ruleSignalReferenceExpr
{ after(grammarAccess.getSignalReferenceExprRule()); } 
	 EOF 
;

// Rule SignalReferenceExpr
ruleSignalReferenceExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalReferenceExprAccess().getGroup()); }
(rule__SignalReferenceExpr__Group__0)
{ after(grammarAccess.getSignalReferenceExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalPreExpr
entryRuleSignalPreExpr 
:
{ before(grammarAccess.getSignalPreExprRule()); }
	 ruleSignalPreExpr
{ after(grammarAccess.getSignalPreExprRule()); } 
	 EOF 
;

// Rule SignalPreExpr
ruleSignalPreExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalPreExprAccess().getGroup()); }
(rule__SignalPreExpr__Group__0)
{ after(grammarAccess.getSignalPreExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDelayExpr
entryRuleDelayExpr 
:
{ before(grammarAccess.getDelayExprRule()); }
	 ruleDelayExpr
{ after(grammarAccess.getDelayExprRule()); } 
	 EOF 
;

// Rule DelayExpr
ruleDelayExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDelayExprAccess().getGroup()); }
(rule__DelayExpr__Group__0)
{ after(grammarAccess.getDelayExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
(rule__Expression__Alternatives)
{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression 
:
{ before(grammarAccess.getBooleanExpressionRule()); }
	 ruleBooleanExpression
{ after(grammarAccess.getBooleanExpressionRule()); } 
	 EOF 
;

// Rule BooleanExpression
ruleBooleanExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanExpressionAccess().getOrExpressionParserRuleCall()); }
	ruleOrExpression
{ after(grammarAccess.getBooleanExpressionAccess().getOrExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrExpression
entryRuleOrExpression 
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
(rule__OrExpression__Group__0)
{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExpression
entryRuleAndExpression 
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
(rule__AndExpression__Group__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompareOperation
entryRuleCompareOperation 
:
{ before(grammarAccess.getCompareOperationRule()); }
	 ruleCompareOperation
{ after(grammarAccess.getCompareOperationRule()); } 
	 EOF 
;

// Rule CompareOperation
ruleCompareOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompareOperationAccess().getGroup()); }
(rule__CompareOperation__Group__0)
{ after(grammarAccess.getCompareOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNotOrValuedExpression
entryRuleNotOrValuedExpression 
:
{ before(grammarAccess.getNotOrValuedExpressionRule()); }
	 ruleNotOrValuedExpression
{ after(grammarAccess.getNotOrValuedExpressionRule()); } 
	 EOF 
;

// Rule NotOrValuedExpression
ruleNotOrValuedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNotOrValuedExpressionAccess().getAlternatives()); }
(rule__NotOrValuedExpression__Alternatives)
{ after(grammarAccess.getNotOrValuedExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNotExpression
entryRuleNotExpression 
:
{ before(grammarAccess.getNotExpressionRule()); }
	 ruleNotExpression
{ after(grammarAccess.getNotExpressionRule()); } 
	 EOF 
;

// Rule NotExpression
ruleNotExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNotExpressionAccess().getAlternatives()); }
(rule__NotExpression__Alternatives)
{ after(grammarAccess.getNotExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValuedExpression
entryRuleValuedExpression 
:
{ before(grammarAccess.getValuedExpressionRule()); }
	 ruleValuedExpression
{ after(grammarAccess.getValuedExpressionRule()); } 
	 EOF 
;

// Rule ValuedExpression
ruleValuedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValuedExpressionAccess().getAddExpressionParserRuleCall()); }
	ruleAddExpression
{ after(grammarAccess.getValuedExpressionAccess().getAddExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddExpression
entryRuleAddExpression 
:
{ before(grammarAccess.getAddExpressionRule()); }
	 ruleAddExpression
{ after(grammarAccess.getAddExpressionRule()); } 
	 EOF 
;

// Rule AddExpression
ruleAddExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAddExpressionAccess().getGroup()); }
(rule__AddExpression__Group__0)
{ after(grammarAccess.getAddExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubExpression
entryRuleSubExpression 
:
{ before(grammarAccess.getSubExpressionRule()); }
	 ruleSubExpression
{ after(grammarAccess.getSubExpressionRule()); } 
	 EOF 
;

// Rule SubExpression
ruleSubExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubExpressionAccess().getGroup()); }
(rule__SubExpression__Group__0)
{ after(grammarAccess.getSubExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultExpression
entryRuleMultExpression 
:
{ before(grammarAccess.getMultExpressionRule()); }
	 ruleMultExpression
{ after(grammarAccess.getMultExpressionRule()); } 
	 EOF 
;

// Rule MultExpression
ruleMultExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultExpressionAccess().getGroup()); }
(rule__MultExpression__Group__0)
{ after(grammarAccess.getMultExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDivExpression
entryRuleDivExpression 
:
{ before(grammarAccess.getDivExpressionRule()); }
	 ruleDivExpression
{ after(grammarAccess.getDivExpressionRule()); } 
	 EOF 
;

// Rule DivExpression
ruleDivExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDivExpressionAccess().getGroup()); }
(rule__DivExpression__Group__0)
{ after(grammarAccess.getDivExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModExpression
entryRuleModExpression 
:
{ before(grammarAccess.getModExpressionRule()); }
	 ruleModExpression
{ after(grammarAccess.getModExpressionRule()); } 
	 EOF 
;

// Rule ModExpression
ruleModExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModExpressionAccess().getGroup()); }
(rule__ModExpression__Group__0)
{ after(grammarAccess.getModExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNegExpression
entryRuleNegExpression 
:
{ before(grammarAccess.getNegExpressionRule()); }
	 ruleNegExpression
{ after(grammarAccess.getNegExpressionRule()); } 
	 EOF 
;

// Rule NegExpression
ruleNegExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNegExpressionAccess().getAlternatives()); }
(rule__NegExpression__Alternatives)
{ after(grammarAccess.getNegExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValuedObjectTestExpression
entryRuleValuedObjectTestExpression 
:
{ before(grammarAccess.getValuedObjectTestExpressionRule()); }
	 ruleValuedObjectTestExpression
{ after(grammarAccess.getValuedObjectTestExpressionRule()); } 
	 EOF 
;

// Rule ValuedObjectTestExpression
ruleValuedObjectTestExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getAlternatives()); }
(rule__ValuedObjectTestExpression__Alternatives)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstructionStatement
entryRuleInstructionStatement 
:
{ before(grammarAccess.getInstructionStatementRule()); }
	 ruleInstructionStatement
{ after(grammarAccess.getInstructionStatementRule()); } 
	 EOF 
;

// Rule InstructionStatement
ruleInstructionStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstructionStatementAccess().getAlternatives()); }
(rule__InstructionStatement__Alternatives)
{ after(grammarAccess.getInstructionStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePause
entryRulePause 
:
{ before(grammarAccess.getPauseRule()); }
	 rulePause
{ after(grammarAccess.getPauseRule()); } 
	 EOF 
;

// Rule Pause
rulePause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPauseAccess().getGroup()); }
(rule__Pause__Group__0)
{ after(grammarAccess.getPauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLabel
entryRuleLabel 
:
{ before(grammarAccess.getLabelRule()); }
	 ruleLabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule Label
ruleLabel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLabelAccess().getGroup()); }
(rule__Label__Group__0)
{ after(grammarAccess.getLabelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGoto
entryRuleGoto 
:
{ before(grammarAccess.getGotoRule()); }
	 ruleGoto
{ after(grammarAccess.getGotoRule()); } 
	 EOF 
;

// Rule Goto
ruleGoto
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGotoAccess().getGroup()); }
(rule__Goto__Group__0)
{ after(grammarAccess.getGotoAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignment
entryRuleAssignment 
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentAccess().getGroup()); }
(rule__Assignment__Group__0)
{ after(grammarAccess.getAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleTestEntity
entryRuleTestEntity 
:
{ before(grammarAccess.getTestEntityRule()); }
	 ruleTestEntity
{ after(grammarAccess.getTestEntityRule()); } 
	 EOF 
;

// Rule TestEntity
ruleTestEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTestEntityAccess().getAlternatives()); }
(rule__TestEntity__Alternatives)
{ after(grammarAccess.getTestEntityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotatedExpression
entryRuleAnnotatedExpression 
:
{ before(grammarAccess.getAnnotatedExpressionRule()); }
	 ruleAnnotatedExpression
{ after(grammarAccess.getAnnotatedExpressionRule()); } 
	 EOF 
;

// Rule AnnotatedExpression
ruleAnnotatedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotatedExpressionAccess().getGroup()); }
(rule__AnnotatedExpression__Group__0)
{ after(grammarAccess.getAnnotatedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclaration
entryRuleDeclaration 
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclarationAccess().getGroup()); }
(rule__Declaration__Group__0)
{ after(grammarAccess.getDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValuedObject
entryRuleValuedObject 
:
{ before(grammarAccess.getValuedObjectRule()); }
	 ruleValuedObject
{ after(grammarAccess.getValuedObjectRule()); } 
	 EOF 
;

// Rule ValuedObject
ruleValuedObject
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValuedObjectAccess().getGroup()); }
(rule__ValuedObject__Group__0)
{ after(grammarAccess.getValuedObjectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEffect
entryRuleEffect 
:
{ before(grammarAccess.getEffectRule()); }
	 ruleEffect
{ after(grammarAccess.getEffectRule()); } 
	 EOF 
;

// Rule Effect
ruleEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEffectAccess().getAlternatives()); }
(rule__Effect__Alternatives)
{ after(grammarAccess.getEffectAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEmission
entryRuleEmission 
:
{ before(grammarAccess.getEmissionRule()); }
	 ruleEmission
{ after(grammarAccess.getEmissionRule()); } 
	 EOF 
;

// Rule Emission
ruleEmission
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEmissionAccess().getGroup()); }
(rule__Emission__Group__0)
{ after(grammarAccess.getEmissionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePostfixEffect
entryRulePostfixEffect 
:
{ before(grammarAccess.getPostfixEffectRule()); }
	 rulePostfixEffect
{ after(grammarAccess.getPostfixEffectRule()); } 
	 EOF 
;

// Rule PostfixEffect
rulePostfixEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPostfixEffectAccess().getGroup()); }
(rule__PostfixEffect__Group__0)
{ after(grammarAccess.getPostfixEffectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHostcodeEffect
entryRuleHostcodeEffect 
:
{ before(grammarAccess.getHostcodeEffectRule()); }
	 ruleHostcodeEffect
{ after(grammarAccess.getHostcodeEffectRule()); } 
	 EOF 
;

// Rule HostcodeEffect
ruleHostcodeEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHostcodeEffectAccess().getGroup()); }
(rule__HostcodeEffect__Group__0)
{ after(grammarAccess.getHostcodeEffectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionCallEffect
entryRuleFunctionCallEffect 
:
{ before(grammarAccess.getFunctionCallEffectRule()); }
	 ruleFunctionCallEffect
{ after(grammarAccess.getFunctionCallEffectRule()); } 
	 EOF 
;

// Rule FunctionCallEffect
ruleFunctionCallEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getGroup()); }
(rule__FunctionCallEffect__Group__0)
{ after(grammarAccess.getFunctionCallEffectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleLogicalOrExpression
entryRuleLogicalOrExpression 
:
{ before(grammarAccess.getLogicalOrExpressionRule()); }
	 ruleLogicalOrExpression
{ after(grammarAccess.getLogicalOrExpressionRule()); } 
	 EOF 
;

// Rule LogicalOrExpression
ruleLogicalOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getGroup()); }
(rule__LogicalOrExpression__Group__0)
{ after(grammarAccess.getLogicalOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLogicalAndExpression
entryRuleLogicalAndExpression 
:
{ before(grammarAccess.getLogicalAndExpressionRule()); }
	 ruleLogicalAndExpression
{ after(grammarAccess.getLogicalAndExpressionRule()); } 
	 EOF 
;

// Rule LogicalAndExpression
ruleLogicalAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getGroup()); }
(rule__LogicalAndExpression__Group__0)
{ after(grammarAccess.getLogicalAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitwiseOrExpression
entryRuleBitwiseOrExpression 
:
{ before(grammarAccess.getBitwiseOrExpressionRule()); }
	 ruleBitwiseOrExpression
{ after(grammarAccess.getBitwiseOrExpressionRule()); } 
	 EOF 
;

// Rule BitwiseOrExpression
ruleBitwiseOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getGroup()); }
(rule__BitwiseOrExpression__Group__0)
{ after(grammarAccess.getBitwiseOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitwiseAndExpression
entryRuleBitwiseAndExpression 
:
{ before(grammarAccess.getBitwiseAndExpressionRule()); }
	 ruleBitwiseAndExpression
{ after(grammarAccess.getBitwiseAndExpressionRule()); } 
	 EOF 
;

// Rule BitwiseAndExpression
ruleBitwiseAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getGroup()); }
(rule__BitwiseAndExpression__Group__0)
{ after(grammarAccess.getBitwiseAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValuedObjectReference
entryRuleValuedObjectReference 
:
{ before(grammarAccess.getValuedObjectReferenceRule()); }
	 ruleValuedObjectReference
{ after(grammarAccess.getValuedObjectReferenceRule()); } 
	 EOF 
;

// Rule ValuedObjectReference
ruleValuedObjectReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getGroup()); }
(rule__ValuedObjectReference__Group__0)
{ after(grammarAccess.getValuedObjectReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionCall
entryRuleFunctionCall 
:
{ before(grammarAccess.getFunctionCallRule()); }
	 ruleFunctionCall
{ after(grammarAccess.getFunctionCallRule()); } 
	 EOF 
;

// Rule FunctionCall
ruleFunctionCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup()); }
(rule__FunctionCall__Group__0)
{ after(grammarAccess.getFunctionCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTextExpression
entryRuleTextExpression 
:
{ before(grammarAccess.getTextExpressionRule()); }
	 ruleTextExpression
{ after(grammarAccess.getTextExpressionRule()); } 
	 EOF 
;

// Rule TextExpression
ruleTextExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTextExpressionAccess().getTextAssignment()); }
(rule__TextExpression__TextAssignment)
{ after(grammarAccess.getTextExpressionAccess().getTextAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntValue
entryRuleIntValue 
:
{ before(grammarAccess.getIntValueRule()); }
	 ruleIntValue
{ after(grammarAccess.getIntValueRule()); } 
	 EOF 
;

// Rule IntValue
ruleIntValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntValueAccess().getValueAssignment()); }
(rule__IntValue__ValueAssignment)
{ after(grammarAccess.getIntValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFloatValue
entryRuleFloatValue 
:
{ before(grammarAccess.getFloatValueRule()); }
	 ruleFloatValue
{ after(grammarAccess.getFloatValueRule()); } 
	 EOF 
;

// Rule FloatValue
ruleFloatValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFloatValueAccess().getValueAssignment()); }
(rule__FloatValue__ValueAssignment)
{ after(grammarAccess.getFloatValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBoolValue
entryRuleBoolValue 
:
{ before(grammarAccess.getBoolValueRule()); }
	 ruleBoolValue
{ after(grammarAccess.getBoolValueRule()); } 
	 EOF 
;

// Rule BoolValue
ruleBoolValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBoolValueAccess().getValueAssignment()); }
(rule__BoolValue__ValueAssignment)
{ after(grammarAccess.getBoolValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringValue
entryRuleStringValue 
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringValueAccess().getValueAssignment()); }
(rule__StringValue__ValueAssignment)
{ after(grammarAccess.getStringValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleAnnotation
entryRuleAnnotation 
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationAccess().getAlternatives()); }
(rule__Annotation__Alternatives)
{ after(grammarAccess.getAnnotationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleRestrictedAnnotation
entryRuleRestrictedAnnotation 
:
{ before(grammarAccess.getRestrictedAnnotationRule()); }
	 ruleRestrictedAnnotation
{ after(grammarAccess.getRestrictedAnnotationRule()); } 
	 EOF 
;

// Rule RestrictedAnnotation
ruleRestrictedAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRestrictedAnnotationAccess().getAlternatives()); }
(rule__RestrictedAnnotation__Alternatives)
{ after(grammarAccess.getRestrictedAnnotationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCommentAnnotation
entryRuleCommentAnnotation 
:
{ before(grammarAccess.getCommentAnnotationRule()); }
	 ruleCommentAnnotation
{ after(grammarAccess.getCommentAnnotationRule()); } 
	 EOF 
;

// Rule CommentAnnotation
ruleCommentAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommentAnnotationAccess().getValuesAssignment()); }
(rule__CommentAnnotation__ValuesAssignment)
{ after(grammarAccess.getCommentAnnotationAccess().getValuesAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTagAnnotation
entryRuleTagAnnotation 
:
{ before(grammarAccess.getTagAnnotationRule()); }
	 ruleTagAnnotation
{ after(grammarAccess.getTagAnnotationRule()); } 
	 EOF 
;

// Rule TagAnnotation
ruleTagAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTagAnnotationAccess().getGroup()); }
(rule__TagAnnotation__Group__0)
{ after(grammarAccess.getTagAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyStringValueAnnotation
entryRuleKeyStringValueAnnotation 
:
{ before(grammarAccess.getKeyStringValueAnnotationRule()); }
	 ruleKeyStringValueAnnotation
{ after(grammarAccess.getKeyStringValueAnnotationRule()); } 
	 EOF 
;

// Rule KeyStringValueAnnotation
ruleKeyStringValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getGroup()); }
(rule__KeyStringValueAnnotation__Group__0)
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypedKeyStringValueAnnotation
entryRuleTypedKeyStringValueAnnotation 
:
{ before(grammarAccess.getTypedKeyStringValueAnnotationRule()); }
	 ruleTypedKeyStringValueAnnotation
{ after(grammarAccess.getTypedKeyStringValueAnnotationRule()); } 
	 EOF 
;

// Rule TypedKeyStringValueAnnotation
ruleTypedKeyStringValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup()); }
(rule__TypedKeyStringValueAnnotation__Group__0)
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQuotedKeyStringValueAnnotation
entryRuleQuotedKeyStringValueAnnotation 
:
{ before(grammarAccess.getQuotedKeyStringValueAnnotationRule()); }
	 ruleQuotedKeyStringValueAnnotation
{ after(grammarAccess.getQuotedKeyStringValueAnnotationRule()); } 
	 EOF 
;

// Rule QuotedKeyStringValueAnnotation
ruleQuotedKeyStringValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getGroup()); }
(rule__QuotedKeyStringValueAnnotation__Group__0)
{ after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQuotedTypedKeyStringValueAnnotation
entryRuleQuotedTypedKeyStringValueAnnotation 
:
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule()); }
	 ruleQuotedTypedKeyStringValueAnnotation
{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule()); } 
	 EOF 
;

// Rule QuotedTypedKeyStringValueAnnotation
ruleQuotedTypedKeyStringValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getGroup()); }
(rule__QuotedTypedKeyStringValueAnnotation__Group__0)
{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyBooleanValueAnnotation
entryRuleKeyBooleanValueAnnotation 
:
{ before(grammarAccess.getKeyBooleanValueAnnotationRule()); }
	 ruleKeyBooleanValueAnnotation
{ after(grammarAccess.getKeyBooleanValueAnnotationRule()); } 
	 EOF 
;

// Rule KeyBooleanValueAnnotation
ruleKeyBooleanValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getGroup()); }
(rule__KeyBooleanValueAnnotation__Group__0)
{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyIntValueAnnotation
entryRuleKeyIntValueAnnotation 
:
{ before(grammarAccess.getKeyIntValueAnnotationRule()); }
	 ruleKeyIntValueAnnotation
{ after(grammarAccess.getKeyIntValueAnnotationRule()); } 
	 EOF 
;

// Rule KeyIntValueAnnotation
ruleKeyIntValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getGroup()); }
(rule__KeyIntValueAnnotation__Group__0)
{ after(grammarAccess.getKeyIntValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyFloatValueAnnotation
entryRuleKeyFloatValueAnnotation 
:
{ before(grammarAccess.getKeyFloatValueAnnotationRule()); }
	 ruleKeyFloatValueAnnotation
{ after(grammarAccess.getKeyFloatValueAnnotationRule()); } 
	 EOF 
;

// Rule KeyFloatValueAnnotation
ruleKeyFloatValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getGroup()); }
(rule__KeyFloatValueAnnotation__Group__0)
{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEStringBoolean
entryRuleEStringBoolean 
:
{ before(grammarAccess.getEStringBooleanRule()); }
	 ruleEStringBoolean
{ after(grammarAccess.getEStringBooleanRule()); } 
	 EOF 
;

// Rule EStringBoolean
ruleEStringBoolean
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringBooleanAccess().getAlternatives()); }
(rule__EStringBoolean__Alternatives)
{ after(grammarAccess.getEStringBooleanAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExtendedID
entryRuleExtendedID 
:
{ before(grammarAccess.getExtendedIDRule()); }
	 ruleExtendedID
{ after(grammarAccess.getExtendedIDRule()); } 
	 EOF 
;

// Rule ExtendedID
ruleExtendedID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExtendedIDAccess().getGroup()); }
(rule__ExtendedID__Group__0)
{ after(grammarAccess.getExtendedIDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInteger
entryRuleInteger 
:
{ before(grammarAccess.getIntegerRule()); }
	 ruleInteger
{ after(grammarAccess.getIntegerRule()); } 
	 EOF 
;

// Rule Integer
ruleInteger
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerAccess().getGroup()); }
(rule__Integer__Group__0)
{ after(grammarAccess.getIntegerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFloateger
entryRuleFloateger 
:
{ before(grammarAccess.getFloategerRule()); }
	 ruleFloateger
{ after(grammarAccess.getFloategerRule()); } 
	 EOF 
;

// Rule Floateger
ruleFloateger
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFloategerAccess().getGroup()); }
(rule__Floateger__Group__0)
{ after(grammarAccess.getFloategerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule Esterel_CompareOperator
ruleEsterel_CompareOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterel_CompareOperatorAccess().getAlternatives()); }
(rule__Esterel_CompareOperator__Alternatives)
{ after(grammarAccess.getEsterel_CompareOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Esterel_PreOperator
ruleEsterel_PreOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterel_PreOperatorAccess().getPREEnumLiteralDeclaration()); }
(	'pre' 
)
{ after(grammarAccess.getEsterel_PreOperatorAccess().getPREEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Esterel_OrOperator
ruleEsterel_OrOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterel_OrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration()); }
(	'or' 
)
{ after(grammarAccess.getEsterel_OrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Esterel_AndOperator
ruleEsterel_AndOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterel_AndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration()); }
(	'and' 
)
{ after(grammarAccess.getEsterel_AndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Esterel_NotOperator
ruleEsterel_NotOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterel_NotOperatorAccess().getNOTEnumLiteralDeclaration()); }
(	'not' 
)
{ after(grammarAccess.getEsterel_NotOperatorAccess().getNOTEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Esterel_AddOperator
ruleEsterel_AddOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterel_AddOperatorAccess().getADDEnumLiteralDeclaration()); }
(	'+' 
)
{ after(grammarAccess.getEsterel_AddOperatorAccess().getADDEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Esterel_SubOperator
ruleEsterel_SubOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterel_SubOperatorAccess().getSUBEnumLiteralDeclaration()); }
(	'-' 
)
{ after(grammarAccess.getEsterel_SubOperatorAccess().getSUBEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Esterel_MultOperator
ruleEsterel_MultOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterel_MultOperatorAccess().getMULTEnumLiteralDeclaration()); }
(	'*' 
)
{ after(grammarAccess.getEsterel_MultOperatorAccess().getMULTEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Esterel_ModOperator
ruleEsterel_ModOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterel_ModOperatorAccess().getMODEnumLiteralDeclaration()); }
(	'mod' 
)
{ after(grammarAccess.getEsterel_ModOperatorAccess().getMODEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Esterel_DivOperator
ruleEsterel_DivOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterel_DivOperatorAccess().getDIVEnumLiteralDeclaration()); }
(	'/' 
)
{ after(grammarAccess.getEsterel_DivOperatorAccess().getDIVEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Esterel_ValueTestOperator
ruleEsterel_ValueTestOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterel_ValueTestOperatorAccess().getVALEnumLiteralDeclaration()); }
(	'?' 
)
{ after(grammarAccess.getEsterel_ValueTestOperatorAccess().getVALEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Esterel_ValueType
ruleEsterel_ValueType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterel_ValueTypeAccess().getAlternatives()); }
(rule__Esterel_ValueType__Alternatives)
{ after(grammarAccess.getEsterel_ValueTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Esterel_CombineOperator
ruleEsterel_CombineOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterel_CombineOperatorAccess().getAlternatives()); }
(rule__Esterel_CombineOperator__Alternatives)
{ after(grammarAccess.getEsterel_CombineOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Rule PostfixOperator
rulePostfixOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixOperatorAccess().getAlternatives()); }
(rule__PostfixOperator__Alternatives)
{ after(grammarAccess.getPostfixOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Rule BitwiseOrOperator
ruleBitwiseOrOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration()); }
(	'|' 
)
{ after(grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule BitwiseAndOperator
ruleBitwiseAndOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration()); }
(	'&' 
)
{ after(grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}

















// Rule LogicalOrOperator
ruleLogicalOrOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration()); }
(	'||' 
)
{ after(grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule LogicalAndOperator
ruleLogicalAndOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration()); }
(	'&&' 
)
{ after(grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Rule ValueType
ruleValueType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getAlternatives()); }
(rule__ValueType__Alternatives)
{ after(grammarAccess.getValueTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Rule CombineOperator
ruleCombineOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombineOperatorAccess().getAlternatives()); }
(rule__CombineOperator__Alternatives)
{ after(grammarAccess.getCombineOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__SCEstModule__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getGroup_5_0()); }
(rule__SCEstModule__Group_5_0__0)
{ after(grammarAccess.getSCEstModuleAccess().getGroup_5_0()); }
)

    |(
{ before(grammarAccess.getSCEstModuleAccess().getGroup_5_1()); }
(rule__SCEstModule__Group_5_1__0)
{ after(grammarAccess.getSCEstModuleAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__Alternatives_5_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getIntSignalDeclsAssignment_5_0_0_0()); }
(rule__SCEstModule__IntSignalDeclsAssignment_5_0_0_0)
{ after(grammarAccess.getSCEstModuleAccess().getIntSignalDeclsAssignment_5_0_0_0()); }
)

    |(
{ before(grammarAccess.getSCEstModuleAccess().getIntTypeDeclsAssignment_5_0_0_1()); }
(rule__SCEstModule__IntTypeDeclsAssignment_5_0_0_1)
{ after(grammarAccess.getSCEstModuleAccess().getIntTypeDeclsAssignment_5_0_0_1()); }
)

    |(
{ before(grammarAccess.getSCEstModuleAccess().getIntSensorDeclsAssignment_5_0_0_2()); }
(rule__SCEstModule__IntSensorDeclsAssignment_5_0_0_2)
{ after(grammarAccess.getSCEstModuleAccess().getIntSensorDeclsAssignment_5_0_0_2()); }
)

    |(
{ before(grammarAccess.getSCEstModuleAccess().getIntConstantDeclsAssignment_5_0_0_3()); }
(rule__SCEstModule__IntConstantDeclsAssignment_5_0_0_3)
{ after(grammarAccess.getSCEstModuleAccess().getIntConstantDeclsAssignment_5_0_0_3()); }
)

    |(
{ before(grammarAccess.getSCEstModuleAccess().getIntRelationDeclsAssignment_5_0_0_4()); }
(rule__SCEstModule__IntRelationDeclsAssignment_5_0_0_4)
{ after(grammarAccess.getSCEstModuleAccess().getIntRelationDeclsAssignment_5_0_0_4()); }
)

    |(
{ before(grammarAccess.getSCEstModuleAccess().getIntTaskDeclsAssignment_5_0_0_5()); }
(rule__SCEstModule__IntTaskDeclsAssignment_5_0_0_5)
{ after(grammarAccess.getSCEstModuleAccess().getIntTaskDeclsAssignment_5_0_0_5()); }
)

    |(
{ before(grammarAccess.getSCEstModuleAccess().getIntFunctionDeclsAssignment_5_0_0_6()); }
(rule__SCEstModule__IntFunctionDeclsAssignment_5_0_0_6)
{ after(grammarAccess.getSCEstModuleAccess().getIntFunctionDeclsAssignment_5_0_0_6()); }
)

    |(
{ before(grammarAccess.getSCEstModuleAccess().getIntProcedureDeclsAssignment_5_0_0_7()); }
(rule__SCEstModule__IntProcedureDeclsAssignment_5_0_0_7)
{ after(grammarAccess.getSCEstModuleAccess().getIntProcedureDeclsAssignment_5_0_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__Alternatives_5_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getGroup_5_0_1_0_0()); }
(rule__SCEstModule__Group_5_0_1_0_0__0)
{ after(grammarAccess.getSCEstModuleAccess().getGroup_5_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getSCEstModuleAccess().getStatementsAssignment_5_0_1_0_1()); }
(rule__SCEstModule__StatementsAssignment_5_0_1_0_1)
{ after(grammarAccess.getSCEstModuleAccess().getStatementsAssignment_5_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__Alternatives_5_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getGroup_5_0_2_0()); }
(rule__SCEstModule__Group_5_0_2_0__0)
{ after(grammarAccess.getSCEstModuleAccess().getGroup_5_0_2_0()); }
)

    |(
{ before(grammarAccess.getSCEstModuleAccess().getFullStopKeyword_5_0_2_1()); }

	'.' 

{ after(grammarAccess.getSCEstModuleAccess().getFullStopKeyword_5_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__Alternatives_5_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getGroup_5_1_2_0_0()); }
(rule__SCEstModule__Group_5_1_2_0_0__0)
{ after(grammarAccess.getSCEstModuleAccess().getGroup_5_1_2_0_0()); }
)

    |(
{ before(grammarAccess.getSCEstModuleAccess().getStatementsAssignment_5_1_2_0_1()); }
(rule__SCEstModule__StatementsAssignment_5_1_2_0_1)
{ after(grammarAccess.getSCEstModuleAccess().getStatementsAssignment_5_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCEstStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstStatementAccess().getEsterelParallelParserRuleCall_0()); }
	ruleEsterelParallel
{ after(grammarAccess.getSCEstStatementAccess().getEsterelParallelParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSCEstStatementAccess().getSCEstAtomicStatementParserRuleCall_1()); }
	ruleSCEstAtomicStatement
{ after(grammarAccess.getSCEstStatementAccess().getSCEstAtomicStatementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstAtomicStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getAbortParserRuleCall_0()); }
	ruleAbort
{ after(grammarAccess.getSCEstAtomicStatementAccess().getAbortParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getEsterelAssignmentParserRuleCall_1()); }
	ruleEsterelAssignment
{ after(grammarAccess.getSCEstAtomicStatementAccess().getEsterelAssignmentParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getAwaitParserRuleCall_2()); }
	ruleAwait
{ after(grammarAccess.getSCEstAtomicStatementAccess().getAwaitParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getBlockParserRuleCall_3()); }
	ruleBlock
{ after(grammarAccess.getSCEstAtomicStatementAccess().getBlockParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getProcCallParserRuleCall_4()); }
	ruleProcCall
{ after(grammarAccess.getSCEstAtomicStatementAccess().getProcCallParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getDoParserRuleCall_5()); }
	ruleDo
{ after(grammarAccess.getSCEstAtomicStatementAccess().getDoParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getEmitParserRuleCall_6()); }
	ruleEmit
{ after(grammarAccess.getSCEstAtomicStatementAccess().getEmitParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getEveryDoParserRuleCall_7()); }
	ruleEveryDo
{ after(grammarAccess.getSCEstAtomicStatementAccess().getEveryDoParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getExitParserRuleCall_8()); }
	ruleExit
{ after(grammarAccess.getSCEstAtomicStatementAccess().getExitParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getExecParserRuleCall_9()); }
	ruleExec
{ after(grammarAccess.getSCEstAtomicStatementAccess().getExecParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getHaltParserRuleCall_10()); }
	ruleHalt
{ after(grammarAccess.getSCEstAtomicStatementAccess().getHaltParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getIfTestParserRuleCall_11()); }
	ruleIfTest
{ after(grammarAccess.getSCEstAtomicStatementAccess().getIfTestParserRuleCall_11()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getLocalSignalDeclParserRuleCall_12()); }
	ruleLocalSignalDecl
{ after(grammarAccess.getSCEstAtomicStatementAccess().getLocalSignalDeclParserRuleCall_12()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getLoopParserRuleCall_13()); }
	ruleLoop
{ after(grammarAccess.getSCEstAtomicStatementAccess().getLoopParserRuleCall_13()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getNothingParserRuleCall_14()); }
	ruleNothing
{ after(grammarAccess.getSCEstAtomicStatementAccess().getNothingParserRuleCall_14()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getPauseParserRuleCall_15()); }
	rulePause
{ after(grammarAccess.getSCEstAtomicStatementAccess().getPauseParserRuleCall_15()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getPresentParserRuleCall_16()); }
	rulePresent
{ after(grammarAccess.getSCEstAtomicStatementAccess().getPresentParserRuleCall_16()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getRepeatParserRuleCall_17()); }
	ruleRepeat
{ after(grammarAccess.getSCEstAtomicStatementAccess().getRepeatParserRuleCall_17()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getRunParserRuleCall_18()); }
	ruleRun
{ after(grammarAccess.getSCEstAtomicStatementAccess().getRunParserRuleCall_18()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getSuspendParserRuleCall_19()); }
	ruleSuspend
{ after(grammarAccess.getSCEstAtomicStatementAccess().getSuspendParserRuleCall_19()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getSustainParserRuleCall_20()); }
	ruleSustain
{ after(grammarAccess.getSCEstAtomicStatementAccess().getSustainParserRuleCall_20()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getTrapParserRuleCall_21()); }
	ruleTrap
{ after(grammarAccess.getSCEstAtomicStatementAccess().getTrapParserRuleCall_21()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getLocalVariableParserRuleCall_22()); }
	ruleLocalVariable
{ after(grammarAccess.getSCEstAtomicStatementAccess().getLocalVariableParserRuleCall_22()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getGotoParserRuleCall_23()); }
	ruleGoto
{ after(grammarAccess.getSCEstAtomicStatementAccess().getGotoParserRuleCall_23()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getUnEmitParserRuleCall_24()); }
	ruleUnEmit
{ after(grammarAccess.getSCEstAtomicStatementAccess().getUnEmitParserRuleCall_24()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getSetParserRuleCall_25()); }
	ruleSet
{ after(grammarAccess.getSCEstAtomicStatementAccess().getSetParserRuleCall_25()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getAssignmentParserRuleCall_26()); }
	ruleAssignment
{ after(grammarAccess.getSCEstAtomicStatementAccess().getAssignmentParserRuleCall_26()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getParallelParserRuleCall_27()); }
	ruleParallel
{ after(grammarAccess.getSCEstAtomicStatementAccess().getParallelParserRuleCall_27()); }
)

    |(
{ before(grammarAccess.getSCEstAtomicStatementAccess().getConditionalParserRuleCall_28()); }
	ruleConditional
{ after(grammarAccess.getSCEstAtomicStatementAccess().getConditionalParserRuleCall_28()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelThread__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelThreadAccess().getGroup_1_0()); }
(rule__EsterelThread__Group_1_0__0)
{ after(grammarAccess.getEsterelThreadAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getEsterelThreadAccess().getStatementsAssignment_1_1()); }
(rule__EsterelThread__StatementsAssignment_1_1)
{ after(grammarAccess.getEsterelThreadAccess().getStatementsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Alternatives_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getGroup_3_0_0()); }
(rule__Block__Group_3_0_0__0)
{ after(grammarAccess.getBlockAccess().getGroup_3_0_0()); }
)

    |(
{ before(grammarAccess.getBlockAccess().getStatementsAssignment_3_0_1()); }
(rule__Block__StatementsAssignment_3_0_1)
{ after(grammarAccess.getBlockAccess().getStatementsAssignment_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getGroup_2_0()); }
(rule__Present__Group_2_0__0)
{ after(grammarAccess.getPresentAccess().getGroup_2_0()); }
)

    |(
(
{ before(grammarAccess.getPresentAccess().getCasesAssignment_2_1()); }
(rule__Present__CasesAssignment_2_1)
{ after(grammarAccess.getPresentAccess().getCasesAssignment_2_1()); }
)
(
{ before(grammarAccess.getPresentAccess().getCasesAssignment_2_1()); }
(rule__Present__CasesAssignment_2_1)*
{ after(grammarAccess.getPresentAccess().getCasesAssignment_2_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Alternatives_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getExpressionAssignment_2_0_0_0()); }
(rule__Present__ExpressionAssignment_2_0_0_0)
{ after(grammarAccess.getPresentAccess().getExpressionAssignment_2_0_0_0()); }
)

    |(
{ before(grammarAccess.getPresentAccess().getGroup_2_0_0_1()); }
(rule__Present__Group_2_0_0_1__0)
{ after(grammarAccess.getPresentAccess().getGroup_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Alternatives_2_0_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getGroup_2_0_1_2_0_0()); }
(rule__Present__Group_2_0_1_2_0_0__0)
{ after(grammarAccess.getPresentAccess().getGroup_2_0_1_2_0_0()); }
)

    |(
{ before(grammarAccess.getPresentAccess().getThenStatementsAssignment_2_0_1_2_0_1()); }
(rule__Present__ThenStatementsAssignment_2_0_1_2_0_1)
{ after(grammarAccess.getPresentAccess().getThenStatementsAssignment_2_0_1_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Alternatives_3_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getGroup_3_2_0_0()); }
(rule__Present__Group_3_2_0_0__0)
{ after(grammarAccess.getPresentAccess().getGroup_3_2_0_0()); }
)

    |(
{ before(grammarAccess.getPresentAccess().getElseStatementsAssignment_3_2_0_1()); }
(rule__Present__ElseStatementsAssignment_3_2_0_1)
{ after(grammarAccess.getPresentAccess().getElseStatementsAssignment_3_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getExpressionAssignment_2_0()); }
(rule__PresentCase__ExpressionAssignment_2_0)
{ after(grammarAccess.getPresentCaseAccess().getExpressionAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getPresentCaseAccess().getGroup_2_1()); }
(rule__PresentCase__Group_2_1__0)
{ after(grammarAccess.getPresentCaseAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__Alternatives_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getGroup_3_1_0_0()); }
(rule__PresentCase__Group_3_1_0_0__0)
{ after(grammarAccess.getPresentCaseAccess().getGroup_3_1_0_0()); }
)

    |(
{ before(grammarAccess.getPresentCaseAccess().getStatementsAssignment_3_1_0_1()); }
(rule__PresentCase__StatementsAssignment_3_1_0_1)
{ after(grammarAccess.getPresentCaseAccess().getStatementsAssignment_3_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Alternatives_3_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getGroup_3_2_0_0()); }
(rule__IfTest__Group_3_2_0_0__0)
{ after(grammarAccess.getIfTestAccess().getGroup_3_2_0_0()); }
)

    |(
{ before(grammarAccess.getIfTestAccess().getThenStatementsAssignment_3_2_0_1()); }
(rule__IfTest__ThenStatementsAssignment_3_2_0_1)
{ after(grammarAccess.getIfTestAccess().getThenStatementsAssignment_3_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Alternatives_5_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getGroup_5_2_0_0()); }
(rule__IfTest__Group_5_2_0_0__0)
{ after(grammarAccess.getIfTestAccess().getGroup_5_2_0_0()); }
)

    |(
{ before(grammarAccess.getIfTestAccess().getElseStatementsAssignment_5_2_0_1()); }
(rule__IfTest__ElseStatementsAssignment_5_2_0_1)
{ after(grammarAccess.getIfTestAccess().getElseStatementsAssignment_5_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElsIf__Alternatives_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfAccess().getGroup_3_1_0_0()); }
(rule__ElsIf__Group_3_1_0_0__0)
{ after(grammarAccess.getElsIfAccess().getGroup_3_1_0_0()); }
)

    |(
{ before(grammarAccess.getElsIfAccess().getThenStatementsAssignment_3_1_0_1()); }
(rule__ElsIf__ThenStatementsAssignment_3_1_0_1)
{ after(grammarAccess.getElsIfAccess().getThenStatementsAssignment_3_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Alternatives_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getGroup_3_0_0()); }
(rule__Loop__Group_3_0_0__0)
{ after(grammarAccess.getLoopAccess().getGroup_3_0_0()); }
)

    |(
{ before(grammarAccess.getLoopAccess().getStatementsAssignment_3_0_1()); }
(rule__Loop__StatementsAssignment_3_0_1)
{ after(grammarAccess.getLoopAccess().getStatementsAssignment_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getGroup_4_0()); }
(rule__Loop__Group_4_0__0)
{ after(grammarAccess.getLoopAccess().getGroup_4_0()); }
)

    |(
{ before(grammarAccess.getLoopAccess().getGroup_4_1()); }
(rule__Loop__Group_4_1__0)
{ after(grammarAccess.getLoopAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Alternatives_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getGroup_5_0_0()); }
(rule__Repeat__Group_5_0_0__0)
{ after(grammarAccess.getRepeatAccess().getGroup_5_0_0()); }
)

    |(
{ before(grammarAccess.getRepeatAccess().getStatementsAssignment_5_0_1()); }
(rule__Repeat__StatementsAssignment_5_0_1)
{ after(grammarAccess.getRepeatAccess().getStatementsAssignment_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Alternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getGroup_2_0_0()); }
(rule__Abort__Group_2_0_0__0)
{ after(grammarAccess.getAbortAccess().getGroup_2_0_0()); }
)

    |(
{ before(grammarAccess.getAbortAccess().getStatementsAssignment_2_0_1()); }
(rule__Abort__StatementsAssignment_2_0_1)
{ after(grammarAccess.getAbortAccess().getStatementsAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getGroup_4_0()); }
(rule__Abort__Group_4_0__0)
{ after(grammarAccess.getAbortAccess().getGroup_4_0()); }
)

    |(
{ before(grammarAccess.getAbortAccess().getGroup_4_1()); }
(rule__Abort__Group_4_1__0)
{ after(grammarAccess.getAbortAccess().getGroup_4_1()); }
)

    |(
{ before(grammarAccess.getAbortAccess().getGroup_4_2()); }
(rule__Abort__Group_4_2__0)
{ after(grammarAccess.getAbortAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Alternatives_4_0_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getGroup_4_0_1_1_0_0()); }
(rule__Abort__Group_4_0_1_1_0_0__0)
{ after(grammarAccess.getAbortAccess().getGroup_4_0_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getAbortAccess().getDoStatementsAssignment_4_0_1_1_0_1()); }
(rule__Abort__DoStatementsAssignment_4_0_1_1_0_1)
{ after(grammarAccess.getAbortAccess().getDoStatementsAssignment_4_0_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Alternatives_4_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getGroup_4_0_3_0()); }
(rule__Abort__Group_4_0_3_0__0)
{ after(grammarAccess.getAbortAccess().getGroup_4_0_3_0()); }
)

    |(
{ before(grammarAccess.getAbortAccess().getAbortKeyword_4_0_3_1()); }

	'abort' 

{ after(grammarAccess.getAbortAccess().getAbortKeyword_4_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Alternatives_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getEndKeyword_4_1_1_0()); }

	'end' 

{ after(grammarAccess.getAbortAccess().getEndKeyword_4_1_1_0()); }
)

    |(
{ before(grammarAccess.getAbortAccess().getGroup_4_1_1_1()); }
(rule__Abort__Group_4_1_1_1__0)
{ after(grammarAccess.getAbortAccess().getGroup_4_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Alternatives_4_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getGroup_4_2_2_0()); }
(rule__Abort__Group_4_2_2_0__0)
{ after(grammarAccess.getAbortAccess().getGroup_4_2_2_0()); }
)

    |(
{ before(grammarAccess.getAbortAccess().getAbortKeyword_4_2_2_1()); }

	'abort' 

{ after(grammarAccess.getAbortAccess().getAbortKeyword_4_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Alternatives_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getGroup_3_1_0_0()); }
(rule__Case__Group_3_1_0_0__0)
{ after(grammarAccess.getCaseAccess().getGroup_3_1_0_0()); }
)

    |(
{ before(grammarAccess.getCaseAccess().getStatementsAssignment_3_1_0_1()); }
(rule__Case__StatementsAssignment_3_1_0_1)
{ after(grammarAccess.getCaseAccess().getStatementsAssignment_3_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Await__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getGroup_2_0()); }
(rule__Await__Group_2_0__0)
{ after(grammarAccess.getAwaitAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getAwaitAccess().getGroup_2_1()); }
(rule__Await__Group_2_1__0)
{ after(grammarAccess.getAwaitAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Await__Alternatives_2_0_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getGroup_2_0_1_1_0_0()); }
(rule__Await__Group_2_0_1_1_0_0__0)
{ after(grammarAccess.getAwaitAccess().getGroup_2_0_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getAwaitAccess().getStatementsAssignment_2_0_1_1_0_1()); }
(rule__Await__StatementsAssignment_2_0_1_1_0_1)
{ after(grammarAccess.getAwaitAccess().getStatementsAssignment_2_0_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__Alternatives_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getGroup_4_0_0()); }
(rule__EveryDo__Group_4_0_0__0)
{ after(grammarAccess.getEveryDoAccess().getGroup_4_0_0()); }
)

    |(
{ before(grammarAccess.getEveryDoAccess().getStatementsAssignment_4_0_1()); }
(rule__EveryDo__StatementsAssignment_4_0_1)
{ after(grammarAccess.getEveryDoAccess().getStatementsAssignment_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Suspend__Alternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getGroup_2_0_0()); }
(rule__Suspend__Group_2_0_0__0)
{ after(grammarAccess.getSuspendAccess().getGroup_2_0_0()); }
)

    |(
{ before(grammarAccess.getSuspendAccess().getStatementsAssignment_2_0_1()); }
(rule__Suspend__StatementsAssignment_2_0_1)
{ after(grammarAccess.getSuspendAccess().getStatementsAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__Alternatives_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getGroup_5_0_0()); }
(rule__Trap__Group_5_0_0__0)
{ after(grammarAccess.getTrapAccess().getGroup_5_0_0()); }
)

    |(
{ before(grammarAccess.getTrapAccess().getStatementsAssignment_5_0_1()); }
(rule__Trap__StatementsAssignment_5_0_1)
{ after(grammarAccess.getTrapAccess().getStatementsAssignment_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapHandler__Alternatives_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerAccess().getGroup_4_0_0()); }
(rule__TrapHandler__Group_4_0_0__0)
{ after(grammarAccess.getTrapHandlerAccess().getGroup_4_0_0()); }
)

    |(
{ before(grammarAccess.getTrapHandlerAccess().getStatementsAssignment_4_0_1()); }
(rule__TrapHandler__StatementsAssignment_4_0_1)
{ after(grammarAccess.getTrapHandlerAccess().getStatementsAssignment_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getGroup_1_0()); }
(rule__Exec__Group_1_0__0)
{ after(grammarAccess.getExecAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getExecAccess().getGroup_1_1()); }
(rule__Exec__Group_1_1__0)
{ after(grammarAccess.getExecAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Alternatives_1_0_10_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getGroup_1_0_10_1_0_0()); }
(rule__Exec__Group_1_0_10_1_0_0__0)
{ after(grammarAccess.getExecAccess().getGroup_1_0_10_1_0_0()); }
)

    |(
{ before(grammarAccess.getExecAccess().getStatementsAssignment_1_0_10_1_0_1()); }
(rule__Exec__StatementsAssignment_1_0_10_1_0_1)
{ after(grammarAccess.getExecAccess().getStatementsAssignment_1_0_10_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Alternatives_11_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getGroup_11_1_0_0()); }
(rule__ExecCase__Group_11_1_0_0__0)
{ after(grammarAccess.getExecCaseAccess().getGroup_11_1_0_0()); }
)

    |(
{ before(grammarAccess.getExecCaseAccess().getStatementsAssignment_11_1_0_1()); }
(rule__ExecCase__StatementsAssignment_11_1_0_1)
{ after(grammarAccess.getExecCaseAccess().getStatementsAssignment_11_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__Alternatives_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getGroup_5_0_0()); }
(rule__LocalSignalDecl__Group_5_0_0__0)
{ after(grammarAccess.getLocalSignalDeclAccess().getGroup_5_0_0()); }
)

    |(
{ before(grammarAccess.getLocalSignalDeclAccess().getStatementsAssignment_5_0_1()); }
(rule__LocalSignalDecl__StatementsAssignment_5_0_1)
{ after(grammarAccess.getLocalSignalDeclAccess().getStatementsAssignment_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Alternatives_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getGroup_5_0_0()); }
(rule__LocalVariable__Group_5_0_0__0)
{ after(grammarAccess.getLocalVariableAccess().getGroup_5_0_0()); }
)

    |(
{ before(grammarAccess.getLocalVariableAccess().getStatementsAssignment_5_0_1()); }
(rule__LocalVariable__StatementsAssignment_5_0_1)
{ after(grammarAccess.getLocalVariableAccess().getStatementsAssignment_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleRenaming__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleRenamingAccess().getModuleAssignment_0()); }
(rule__ModuleRenaming__ModuleAssignment_0)
{ after(grammarAccess.getModuleRenamingAccess().getModuleAssignment_0()); }
)

    |(
{ before(grammarAccess.getModuleRenamingAccess().getGroup_1()); }
(rule__ModuleRenaming__Group_1__0)
{ after(grammarAccess.getModuleRenamingAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Alternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getGroup_2_0_0()); }
(rule__Do__Group_2_0_0__0)
{ after(grammarAccess.getDoAccess().getGroup_2_0_0()); }
)

    |(
{ before(grammarAccess.getDoAccess().getStatementsAssignment_2_0_1()); }
(rule__Do__StatementsAssignment_2_0_1)
{ after(grammarAccess.getDoAccess().getStatementsAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getGroup_3_0()); }
(rule__Do__Group_3_0__0)
{ after(grammarAccess.getDoAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getDoAccess().getGroup_3_1()); }
(rule__Do__Group_3_1__0)
{ after(grammarAccess.getDoAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Alternatives_3_1_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getGroup_3_1_3_1_0_0()); }
(rule__Do__Group_3_1_3_1_0_0__0)
{ after(grammarAccess.getDoAccess().getGroup_3_1_3_1_0_0()); }
)

    |(
{ before(grammarAccess.getDoAccess().getWatchingStatementsAssignment_3_1_3_1_0_1()); }
(rule__Do__WatchingStatementsAssignment_3_1_3_1_0_1)
{ after(grammarAccess.getDoAccess().getWatchingStatementsAssignment_3_1_3_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Alternatives_3_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getGroup_3_3_0_0()); }
(rule__Conditional__Group_3_3_0_0__0)
{ after(grammarAccess.getConditionalAccess().getGroup_3_3_0_0()); }
)

    |(
{ before(grammarAccess.getConditionalAccess().getStatementsAssignment_3_3_0_1()); }
(rule__Conditional__StatementsAssignment_3_3_0_1)
{ after(grammarAccess.getConditionalAccess().getStatementsAssignment_3_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElseScope__Alternatives_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseScopeAccess().getGroup_5_0_0()); }
(rule__ElseScope__Group_5_0_0__0)
{ after(grammarAccess.getElseScopeAccess().getGroup_5_0_0()); }
)

    |(
{ before(grammarAccess.getElseScopeAccess().getStatementsAssignment_5_0_1()); }
(rule__ElseScope__StatementsAssignment_5_0_1)
{ after(grammarAccess.getElseScopeAccess().getStatementsAssignment_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetaStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetaStatementAccess().getLabelParserRuleCall_0()); }
	ruleLabel
{ after(grammarAccess.getMetaStatementAccess().getLabelParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMetaStatementAccess().getScopeStatementParserRuleCall_1()); }
	ruleScopeStatement
{ after(grammarAccess.getMetaStatementAccess().getScopeStatementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getGroup_1_0()); }
(rule__Thread__Group_1_0__0)
{ after(grammarAccess.getThreadAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getThreadAccess().getGroup_1_1()); }
(rule__Thread__Group_1_1__0)
{ after(grammarAccess.getThreadAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Alternatives_1_0_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getGroup_1_0_3_0_0()); }
(rule__Thread__Group_1_0_3_0_0__0)
{ after(grammarAccess.getThreadAccess().getGroup_1_0_3_0_0()); }
)

    |(
{ before(grammarAccess.getThreadAccess().getStatementsAssignment_1_0_3_0_1()); }
(rule__Thread__StatementsAssignment_1_0_3_0_1)
{ after(grammarAccess.getThreadAccess().getStatementsAssignment_1_0_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Alternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getGroup_1_1_0_0()); }
(rule__Thread__Group_1_1_0_0__0)
{ after(grammarAccess.getThreadAccess().getGroup_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getThreadAccess().getStatementsAssignment_1_1_0_1()); }
(rule__Thread__StatementsAssignment_1_1_0_1)
{ after(grammarAccess.getThreadAccess().getStatementsAssignment_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeStatement__Alternatives_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeStatementAccess().getGroup_4_0_0()); }
(rule__ScopeStatement__Group_4_0_0__0)
{ after(grammarAccess.getScopeStatementAccess().getGroup_4_0_0()); }
)

    |(
{ before(grammarAccess.getScopeStatementAccess().getStatementsAssignment_4_0_1()); }
(rule__ScopeStatement__StatementsAssignment_4_0_1)
{ after(grammarAccess.getScopeStatementAccess().getStatementsAssignment_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpressionAccess().getFunctionExpressionParserRuleCall_0()); }
	ruleFunctionExpression
{ after(grammarAccess.getAtomicExpressionAccess().getFunctionExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getTrapExpressionParserRuleCall_1()); }
	ruleTrapExpression
{ after(grammarAccess.getAtomicExpressionAccess().getTrapExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getBoolValueParserRuleCall_2()); }
	ruleBoolValue
{ after(grammarAccess.getAtomicExpressionAccess().getBoolValueParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getValuedObjectTestExpressionParserRuleCall_3()); }
	ruleValuedObjectTestExpression
{ after(grammarAccess.getAtomicExpressionAccess().getValuedObjectTestExpressionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getTextExpressionParserRuleCall_4()); }
	ruleTextExpression
{ after(grammarAccess.getAtomicExpressionAccess().getTextExpressionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getGroup_5()); }
(rule__AtomicExpression__Group_5__0)
{ after(grammarAccess.getAtomicExpressionAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getConstantExpressionParserRuleCall_6()); }
	ruleConstantExpression
{ after(grammarAccess.getAtomicExpressionAccess().getConstantExpressionParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getFunctionCallParserRuleCall_7()); }
	ruleFunctionCall
{ after(grammarAccess.getAtomicExpressionAccess().getFunctionCallParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicValuedExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getIntValueParserRuleCall_0()); }
	ruleIntValue
{ after(grammarAccess.getAtomicValuedExpressionAccess().getIntValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getFloatValueParserRuleCall_1()); }
	ruleFloatValue
{ after(grammarAccess.getAtomicValuedExpressionAccess().getFloatValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getGroup_2()); }
(rule__AtomicValuedExpression__Group_2__0)
{ after(grammarAccess.getAtomicValuedExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getAtomicExpressionParserRuleCall_3()); }
	ruleAtomicExpression
{ after(grammarAccess.getAtomicValuedExpressionAccess().getAtomicExpressionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getStringValueParserRuleCall_4()); }
	ruleStringValue
{ after(grammarAccess.getAtomicValuedExpressionAccess().getStringValueParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getIntSignalDeclsAssignment_4_0()); }
(rule__Module__IntSignalDeclsAssignment_4_0)
{ after(grammarAccess.getModuleAccess().getIntSignalDeclsAssignment_4_0()); }
)

    |(
{ before(grammarAccess.getModuleAccess().getIntTypeDeclsAssignment_4_1()); }
(rule__Module__IntTypeDeclsAssignment_4_1)
{ after(grammarAccess.getModuleAccess().getIntTypeDeclsAssignment_4_1()); }
)

    |(
{ before(grammarAccess.getModuleAccess().getIntSensorDeclsAssignment_4_2()); }
(rule__Module__IntSensorDeclsAssignment_4_2)
{ after(grammarAccess.getModuleAccess().getIntSensorDeclsAssignment_4_2()); }
)

    |(
{ before(grammarAccess.getModuleAccess().getIntConstantDeclsAssignment_4_3()); }
(rule__Module__IntConstantDeclsAssignment_4_3)
{ after(grammarAccess.getModuleAccess().getIntConstantDeclsAssignment_4_3()); }
)

    |(
{ before(grammarAccess.getModuleAccess().getIntRelationDeclsAssignment_4_4()); }
(rule__Module__IntRelationDeclsAssignment_4_4)
{ after(grammarAccess.getModuleAccess().getIntRelationDeclsAssignment_4_4()); }
)

    |(
{ before(grammarAccess.getModuleAccess().getIntTaskDeclsAssignment_4_5()); }
(rule__Module__IntTaskDeclsAssignment_4_5)
{ after(grammarAccess.getModuleAccess().getIntTaskDeclsAssignment_4_5()); }
)

    |(
{ before(grammarAccess.getModuleAccess().getIntFunctionDeclsAssignment_4_6()); }
(rule__Module__IntFunctionDeclsAssignment_4_6)
{ after(grammarAccess.getModuleAccess().getIntFunctionDeclsAssignment_4_6()); }
)

    |(
{ before(grammarAccess.getModuleAccess().getIntProcedureDeclsAssignment_4_7()); }
(rule__Module__IntProcedureDeclsAssignment_4_7)
{ after(grammarAccess.getModuleAccess().getIntProcedureDeclsAssignment_4_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Alternatives_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getGroup_6_0()); }
(rule__Module__Group_6_0__0)
{ after(grammarAccess.getModuleAccess().getGroup_6_0()); }
)

    |(
{ before(grammarAccess.getModuleAccess().getFullStopKeyword_6_1()); }

	'.' 

{ after(grammarAccess.getModuleAccess().getFullStopKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getTypeAssignment_0()); }
(rule__TypeIdentifier__TypeAssignment_0)
{ after(grammarAccess.getTypeIdentifierAccess().getTypeAssignment_0()); }
)

    |(
{ before(grammarAccess.getTypeIdentifierAccess().getTypeIDAssignment_1()); }
(rule__TypeIdentifier__TypeIDAssignment_1)
{ after(grammarAccess.getTypeIdentifierAccess().getTypeIDAssignment_1()); }
)

    |(
{ before(grammarAccess.getTypeIdentifierAccess().getGroup_2()); }
(rule__TypeIdentifier__Group_2__0)
{ after(grammarAccess.getTypeIdentifierAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getTypeIdentifierAccess().getGroup_3()); }
(rule__TypeIdentifier__Group_3__0)
{ after(grammarAccess.getTypeIdentifierAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__Alternatives_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getTypeAssignment_2_1_0()); }
(rule__TypeIdentifier__TypeAssignment_2_1_0)
{ after(grammarAccess.getTypeIdentifierAccess().getTypeAssignment_2_1_0()); }
)

    |(
{ before(grammarAccess.getTypeIdentifierAccess().getTypeIDAssignment_2_1_1()); }
(rule__TypeIdentifier__TypeIDAssignment_2_1_1)
{ after(grammarAccess.getTypeIdentifierAccess().getTypeIDAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantValueAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getConstantValueAccess().getINTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getConstantValueAccess().getFLOATTerminalRuleCall_1()); }
	RULE_FLOAT
{ after(grammarAccess.getConstantValueAccess().getFLOATTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getConstantValueAccess().getBOOLEANTerminalRuleCall_2()); }
	RULE_BOOLEAN
{ after(grammarAccess.getConstantValueAccess().getBOOLEANTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getConstantValueAccess().getIDTerminalRuleCall_3()); }
	RULE_ID
{ after(grammarAccess.getConstantValueAccess().getIDTerminalRuleCall_3()); }
)

    |(
{ before(grammarAccess.getConstantValueAccess().getSTRINGTerminalRuleCall_4()); }
	RULE_STRING
{ after(grammarAccess.getConstantValueAccess().getSTRINGTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getGroup_0()); }
(rule__InterfaceSignalDecl__Group_0__0)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getGroup_1()); }
(rule__InterfaceSignalDecl__Group_1__0)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getGroup_2()); }
(rule__InterfaceSignalDecl__Group_2__0)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getGroup_3()); }
(rule__InterfaceSignalDecl__Group_3__0)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getGroup_2_0()); }
(rule__ISignal__Group_2_0__0)
{ after(grammarAccess.getISignalAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getISignalAccess().getGroup_2_1()); }
(rule__ISignal__Group_2_1__0)
{ after(grammarAccess.getISignalAccess().getGroup_2_1()); }
)

    |(
{ before(grammarAccess.getISignalAccess().getGroup_2_2()); }
(rule__ISignal__Group_2_2__0)
{ after(grammarAccess.getISignalAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Alternatives_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getTypeAssignment_2_0_1_0()); }
(rule__ISignal__TypeAssignment_2_0_1_0)
{ after(grammarAccess.getISignalAccess().getTypeAssignment_2_0_1_0()); }
)

    |(
{ before(grammarAccess.getISignalAccess().getTypeIDAssignment_2_0_1_1()); }
(rule__ISignal__TypeIDAssignment_2_0_1_1)
{ after(grammarAccess.getISignalAccess().getTypeIDAssignment_2_0_1_1()); }
)

    |(
{ before(grammarAccess.getISignalAccess().getGroup_2_0_1_2()); }
(rule__ISignal__Group_2_0_1_2__0)
{ after(grammarAccess.getISignalAccess().getGroup_2_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Alternatives_2_0_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getTypeAssignment_2_0_1_2_1_0()); }
(rule__ISignal__TypeAssignment_2_0_1_2_1_0)
{ after(grammarAccess.getISignalAccess().getTypeAssignment_2_0_1_2_1_0()); }
)

    |(
{ before(grammarAccess.getISignalAccess().getTypeIDAssignment_2_0_1_2_1_1()); }
(rule__ISignal__TypeIDAssignment_2_0_1_2_1_1)
{ after(grammarAccess.getISignalAccess().getTypeIDAssignment_2_0_1_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Alternatives_2_0_1_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getFuncAssignment_2_0_1_2_3_0()); }
(rule__ISignal__FuncAssignment_2_0_1_2_3_0)
{ after(grammarAccess.getISignalAccess().getFuncAssignment_2_0_1_2_3_0()); }
)

    |(
{ before(grammarAccess.getISignalAccess().getCombineOperatorAssignment_2_0_1_2_3_1()); }
(rule__ISignal__CombineOperatorAssignment_2_0_1_2_3_1)
{ after(grammarAccess.getISignalAccess().getCombineOperatorAssignment_2_0_1_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Alternatives_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getTypeAssignment_2_1_1_0()); }
(rule__ISignal__TypeAssignment_2_1_1_0)
{ after(grammarAccess.getISignalAccess().getTypeAssignment_2_1_1_0()); }
)

    |(
{ before(grammarAccess.getISignalAccess().getTypeIDAssignment_2_1_1_1()); }
(rule__ISignal__TypeIDAssignment_2_1_1_1)
{ after(grammarAccess.getISignalAccess().getTypeIDAssignment_2_1_1_1()); }
)

    |(
{ before(grammarAccess.getISignalAccess().getGroup_2_1_1_2()); }
(rule__ISignal__Group_2_1_1_2__0)
{ after(grammarAccess.getISignalAccess().getGroup_2_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Alternatives_2_1_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getTypeAssignment_2_1_1_2_1_0()); }
(rule__ISignal__TypeAssignment_2_1_1_2_1_0)
{ after(grammarAccess.getISignalAccess().getTypeAssignment_2_1_1_2_1_0()); }
)

    |(
{ before(grammarAccess.getISignalAccess().getTypeIDAssignment_2_1_1_2_1_1()); }
(rule__ISignal__TypeIDAssignment_2_1_1_2_1_1)
{ after(grammarAccess.getISignalAccess().getTypeIDAssignment_2_1_1_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Alternatives_2_1_1_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getFuncAssignment_2_1_1_2_3_0()); }
(rule__ISignal__FuncAssignment_2_1_1_2_3_0)
{ after(grammarAccess.getISignalAccess().getFuncAssignment_2_1_1_2_3_0()); }
)

    |(
{ before(grammarAccess.getISignalAccess().getCombineOperatorAssignment_2_1_1_2_3_1()); }
(rule__ISignal__CombineOperatorAssignment_2_1_1_2_3_1)
{ after(grammarAccess.getISignalAccess().getCombineOperatorAssignment_2_1_1_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Alternatives_2_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getTypeAssignment_2_2_3_0()); }
(rule__ISignal__TypeAssignment_2_2_3_0)
{ after(grammarAccess.getISignalAccess().getTypeAssignment_2_2_3_0()); }
)

    |(
{ before(grammarAccess.getISignalAccess().getTypeIDAssignment_2_2_3_1()); }
(rule__ISignal__TypeIDAssignment_2_2_3_1)
{ after(grammarAccess.getISignalAccess().getTypeIDAssignment_2_2_3_1()); }
)

    |(
{ before(grammarAccess.getISignalAccess().getGroup_2_2_3_2()); }
(rule__ISignal__Group_2_2_3_2__0)
{ after(grammarAccess.getISignalAccess().getGroup_2_2_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Alternatives_2_2_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getTypeAssignment_2_2_3_2_1_0()); }
(rule__ISignal__TypeAssignment_2_2_3_2_1_0)
{ after(grammarAccess.getISignalAccess().getTypeAssignment_2_2_3_2_1_0()); }
)

    |(
{ before(grammarAccess.getISignalAccess().getTypeIDAssignment_2_2_3_2_1_1()); }
(rule__ISignal__TypeIDAssignment_2_2_3_2_1_1)
{ after(grammarAccess.getISignalAccess().getTypeIDAssignment_2_2_3_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Alternatives_2_2_3_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getFuncAssignment_2_2_3_2_3_0()); }
(rule__ISignal__FuncAssignment_2_2_3_2_3_0)
{ after(grammarAccess.getISignalAccess().getFuncAssignment_2_2_3_2_3_0()); }
)

    |(
{ before(grammarAccess.getISignalAccess().getCombineOperatorAssignment_2_2_3_2_3_1()); }
(rule__ISignal__CombineOperatorAssignment_2_2_3_2_3_1)
{ after(grammarAccess.getISignalAccess().getCombineOperatorAssignment_2_2_3_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SensorWithType__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorWithTypeAccess().getGroup_1_0()); }
(rule__SensorWithType__Group_1_0__0)
{ after(grammarAccess.getSensorWithTypeAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getSensorWithTypeAccess().getGroup_1_1()); }
(rule__SensorWithType__Group_1_1__0)
{ after(grammarAccess.getSensorWithTypeAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getRelationImplicationParserRuleCall_0()); }
	ruleRelationImplication
{ after(grammarAccess.getRelationTypeAccess().getRelationImplicationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRelationTypeAccess().getRelationIncompatibilityParserRuleCall_1()); }
	ruleRelationIncompatibility
{ after(grammarAccess.getRelationTypeAccess().getRelationIncompatibilityParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelStatementAccess().getEsterelParallelParserRuleCall_0()); }
	ruleEsterelParallel
{ after(grammarAccess.getEsterelStatementAccess().getEsterelParallelParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEsterelStatementAccess().getAtomicStatementParserRuleCall_1()); }
	ruleAtomicStatement
{ after(grammarAccess.getEsterelStatementAccess().getAtomicStatementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicStatementAccess().getAbortParserRuleCall_0()); }
	ruleAbort
{ after(grammarAccess.getAtomicStatementAccess().getAbortParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getEsterelAssignmentParserRuleCall_1()); }
	ruleEsterelAssignment
{ after(grammarAccess.getAtomicStatementAccess().getEsterelAssignmentParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getAwaitParserRuleCall_2()); }
	ruleAwait
{ after(grammarAccess.getAtomicStatementAccess().getAwaitParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getBlockParserRuleCall_3()); }
	ruleBlock
{ after(grammarAccess.getAtomicStatementAccess().getBlockParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getProcCallParserRuleCall_4()); }
	ruleProcCall
{ after(grammarAccess.getAtomicStatementAccess().getProcCallParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getDoParserRuleCall_5()); }
	ruleDo
{ after(grammarAccess.getAtomicStatementAccess().getDoParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getEmitParserRuleCall_6()); }
	ruleEmit
{ after(grammarAccess.getAtomicStatementAccess().getEmitParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getEveryDoParserRuleCall_7()); }
	ruleEveryDo
{ after(grammarAccess.getAtomicStatementAccess().getEveryDoParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getExitParserRuleCall_8()); }
	ruleExit
{ after(grammarAccess.getAtomicStatementAccess().getExitParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getExecParserRuleCall_9()); }
	ruleExec
{ after(grammarAccess.getAtomicStatementAccess().getExecParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getHaltParserRuleCall_10()); }
	ruleHalt
{ after(grammarAccess.getAtomicStatementAccess().getHaltParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getIfTestParserRuleCall_11()); }
	ruleIfTest
{ after(grammarAccess.getAtomicStatementAccess().getIfTestParserRuleCall_11()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getLocalSignalDeclParserRuleCall_12()); }
	ruleLocalSignalDecl
{ after(grammarAccess.getAtomicStatementAccess().getLocalSignalDeclParserRuleCall_12()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getLoopParserRuleCall_13()); }
	ruleLoop
{ after(grammarAccess.getAtomicStatementAccess().getLoopParserRuleCall_13()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getNothingParserRuleCall_14()); }
	ruleNothing
{ after(grammarAccess.getAtomicStatementAccess().getNothingParserRuleCall_14()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getPauseParserRuleCall_15()); }
	rulePause
{ after(grammarAccess.getAtomicStatementAccess().getPauseParserRuleCall_15()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getPresentParserRuleCall_16()); }
	rulePresent
{ after(grammarAccess.getAtomicStatementAccess().getPresentParserRuleCall_16()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getRepeatParserRuleCall_17()); }
	ruleRepeat
{ after(grammarAccess.getAtomicStatementAccess().getRepeatParserRuleCall_17()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getRunParserRuleCall_18()); }
	ruleRun
{ after(grammarAccess.getAtomicStatementAccess().getRunParserRuleCall_18()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getSuspendParserRuleCall_19()); }
	ruleSuspend
{ after(grammarAccess.getAtomicStatementAccess().getSuspendParserRuleCall_19()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getSustainParserRuleCall_20()); }
	ruleSustain
{ after(grammarAccess.getAtomicStatementAccess().getSustainParserRuleCall_20()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getTrapParserRuleCall_21()); }
	ruleTrap
{ after(grammarAccess.getAtomicStatementAccess().getTrapParserRuleCall_21()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getLocalVariableParserRuleCall_22()); }
	ruleLocalVariable
{ after(grammarAccess.getAtomicStatementAccess().getLocalVariableParserRuleCall_22()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getGroup_2_0()); }
(rule__TrapSignal__Group_2_0__0)
{ after(grammarAccess.getTrapSignalAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getTrapSignalAccess().getGroup_2_1()); }
(rule__TrapSignal__Group_2_1__0)
{ after(grammarAccess.getTrapSignalAccess().getGroup_2_1()); }
)

    |(
{ before(grammarAccess.getTrapSignalAccess().getGroup_2_2()); }
(rule__TrapSignal__Group_2_2__0)
{ after(grammarAccess.getTrapSignalAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Alternatives_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getTypeAssignment_2_0_1_0()); }
(rule__TrapSignal__TypeAssignment_2_0_1_0)
{ after(grammarAccess.getTrapSignalAccess().getTypeAssignment_2_0_1_0()); }
)

    |(
{ before(grammarAccess.getTrapSignalAccess().getTypeIDAssignment_2_0_1_1()); }
(rule__TrapSignal__TypeIDAssignment_2_0_1_1)
{ after(grammarAccess.getTrapSignalAccess().getTypeIDAssignment_2_0_1_1()); }
)

    |(
{ before(grammarAccess.getTrapSignalAccess().getGroup_2_0_1_2()); }
(rule__TrapSignal__Group_2_0_1_2__0)
{ after(grammarAccess.getTrapSignalAccess().getGroup_2_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Alternatives_2_0_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getTypeAssignment_2_0_1_2_1_0()); }
(rule__TrapSignal__TypeAssignment_2_0_1_2_1_0)
{ after(grammarAccess.getTrapSignalAccess().getTypeAssignment_2_0_1_2_1_0()); }
)

    |(
{ before(grammarAccess.getTrapSignalAccess().getTypeIDAssignment_2_0_1_2_1_1()); }
(rule__TrapSignal__TypeIDAssignment_2_0_1_2_1_1)
{ after(grammarAccess.getTrapSignalAccess().getTypeIDAssignment_2_0_1_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Alternatives_2_0_1_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getFuncAssignment_2_0_1_2_3_0()); }
(rule__TrapSignal__FuncAssignment_2_0_1_2_3_0)
{ after(grammarAccess.getTrapSignalAccess().getFuncAssignment_2_0_1_2_3_0()); }
)

    |(
{ before(grammarAccess.getTrapSignalAccess().getCombineOperatorAssignment_2_0_1_2_3_1()); }
(rule__TrapSignal__CombineOperatorAssignment_2_0_1_2_3_1)
{ after(grammarAccess.getTrapSignalAccess().getCombineOperatorAssignment_2_0_1_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Alternatives_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getTypeAssignment_2_1_1_0()); }
(rule__TrapSignal__TypeAssignment_2_1_1_0)
{ after(grammarAccess.getTrapSignalAccess().getTypeAssignment_2_1_1_0()); }
)

    |(
{ before(grammarAccess.getTrapSignalAccess().getTypeIDAssignment_2_1_1_1()); }
(rule__TrapSignal__TypeIDAssignment_2_1_1_1)
{ after(grammarAccess.getTrapSignalAccess().getTypeIDAssignment_2_1_1_1()); }
)

    |(
{ before(grammarAccess.getTrapSignalAccess().getGroup_2_1_1_2()); }
(rule__TrapSignal__Group_2_1_1_2__0)
{ after(grammarAccess.getTrapSignalAccess().getGroup_2_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Alternatives_2_1_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getTypeAssignment_2_1_1_2_1_0()); }
(rule__TrapSignal__TypeAssignment_2_1_1_2_1_0)
{ after(grammarAccess.getTrapSignalAccess().getTypeAssignment_2_1_1_2_1_0()); }
)

    |(
{ before(grammarAccess.getTrapSignalAccess().getTypeIDAssignment_2_1_1_2_1_1()); }
(rule__TrapSignal__TypeIDAssignment_2_1_1_2_1_1)
{ after(grammarAccess.getTrapSignalAccess().getTypeIDAssignment_2_1_1_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Alternatives_2_1_1_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getFuncAssignment_2_1_1_2_3_0()); }
(rule__TrapSignal__FuncAssignment_2_1_1_2_3_0)
{ after(grammarAccess.getTrapSignalAccess().getFuncAssignment_2_1_1_2_3_0()); }
)

    |(
{ before(grammarAccess.getTrapSignalAccess().getCombineOperatorAssignment_2_1_1_2_3_1()); }
(rule__TrapSignal__CombineOperatorAssignment_2_1_1_2_3_1)
{ after(grammarAccess.getTrapSignalAccess().getCombineOperatorAssignment_2_1_1_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Alternatives_2_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getTypeAssignment_2_2_3_0()); }
(rule__TrapSignal__TypeAssignment_2_2_3_0)
{ after(grammarAccess.getTrapSignalAccess().getTypeAssignment_2_2_3_0()); }
)

    |(
{ before(grammarAccess.getTrapSignalAccess().getTypeIDAssignment_2_2_3_1()); }
(rule__TrapSignal__TypeIDAssignment_2_2_3_1)
{ after(grammarAccess.getTrapSignalAccess().getTypeIDAssignment_2_2_3_1()); }
)

    |(
{ before(grammarAccess.getTrapSignalAccess().getGroup_2_2_3_2()); }
(rule__TrapSignal__Group_2_2_3_2__0)
{ after(grammarAccess.getTrapSignalAccess().getGroup_2_2_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Alternatives_2_2_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getTypeAssignment_2_2_3_2_1_0()); }
(rule__TrapSignal__TypeAssignment_2_2_3_2_1_0)
{ after(grammarAccess.getTrapSignalAccess().getTypeAssignment_2_2_3_2_1_0()); }
)

    |(
{ before(grammarAccess.getTrapSignalAccess().getTypeIDAssignment_2_2_3_2_1_1()); }
(rule__TrapSignal__TypeIDAssignment_2_2_3_2_1_1)
{ after(grammarAccess.getTrapSignalAccess().getTypeIDAssignment_2_2_3_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Alternatives_2_2_3_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getFuncAssignment_2_2_3_2_3_0()); }
(rule__TrapSignal__FuncAssignment_2_2_3_2_3_0)
{ after(grammarAccess.getTrapSignalAccess().getFuncAssignment_2_2_3_2_3_0()); }
)

    |(
{ before(grammarAccess.getTrapSignalAccess().getCombineOperatorAssignment_2_2_3_2_3_1()); }
(rule__TrapSignal__CombineOperatorAssignment_2_2_3_2_3_1)
{ after(grammarAccess.getTrapSignalAccess().getCombineOperatorAssignment_2_2_3_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getGroup_1_0()); }
(rule__Run__Group_1_0__0)
{ after(grammarAccess.getRunAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getRunAccess().getGroup_1_1()); }
(rule__Run__Group_1_1__0)
{ after(grammarAccess.getRunAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getGroup_1_0()); }
(rule__Renaming__Group_1_0__0)
{ after(grammarAccess.getRenamingAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getRenamingAccess().getGroup_1_1()); }
(rule__Renaming__Group_1_1__0)
{ after(grammarAccess.getRenamingAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getRenamingAccess().getGroup_1_2()); }
(rule__Renaming__Group_1_2__0)
{ after(grammarAccess.getRenamingAccess().getGroup_1_2()); }
)

    |(
{ before(grammarAccess.getRenamingAccess().getGroup_1_3()); }
(rule__Renaming__Group_1_3__0)
{ after(grammarAccess.getRenamingAccess().getGroup_1_3()); }
)

    |(
{ before(grammarAccess.getRenamingAccess().getGroup_1_4()); }
(rule__Renaming__Group_1_4__0)
{ after(grammarAccess.getRenamingAccess().getGroup_1_4()); }
)

    |(
{ before(grammarAccess.getRenamingAccess().getGroup_1_5()); }
(rule__Renaming__Group_1_5__0)
{ after(grammarAccess.getRenamingAccess().getGroup_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRenaming__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRenamingAccess().getNewNameAssignment_0_0()); }
(rule__TypeRenaming__NewNameAssignment_0_0)
{ after(grammarAccess.getTypeRenamingAccess().getNewNameAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getTypeRenamingAccess().getNewTypeAssignment_0_1()); }
(rule__TypeRenaming__NewTypeAssignment_0_1)
{ after(grammarAccess.getTypeRenamingAccess().getNewTypeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantRenaming__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantRenamingAccess().getNewNameAssignment_0_0()); }
(rule__ConstantRenaming__NewNameAssignment_0_0)
{ after(grammarAccess.getConstantRenamingAccess().getNewNameAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getConstantRenamingAccess().getNewValueAssignment_0_1()); }
(rule__ConstantRenaming__NewValueAssignment_0_1)
{ after(grammarAccess.getConstantRenamingAccess().getNewValueAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionRenaming__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionRenamingAccess().getNewNameAssignment_0_0()); }
(rule__FunctionRenaming__NewNameAssignment_0_0)
{ after(grammarAccess.getFunctionRenamingAccess().getNewNameAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getFunctionRenamingAccess().getNewFuncAssignment_0_1()); }
(rule__FunctionRenaming__NewFuncAssignment_0_1)
{ after(grammarAccess.getFunctionRenamingAccess().getNewFuncAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuildInFunction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuildInFunctionAccess().getAsteriskKeyword_0()); }

	'*' 

{ after(grammarAccess.getBuildInFunctionAccess().getAsteriskKeyword_0()); }
)

    |(
{ before(grammarAccess.getBuildInFunctionAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getBuildInFunctionAccess().getSolidusKeyword_1()); }
)

    |(
{ before(grammarAccess.getBuildInFunctionAccess().getPlusSignKeyword_2()); }

	'+' 

{ after(grammarAccess.getBuildInFunctionAccess().getPlusSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getBuildInFunctionAccess().getHyphenMinusKeyword_3()); }

	'-' 

{ after(grammarAccess.getBuildInFunctionAccess().getHyphenMinusKeyword_3()); }
)

    |(
{ before(grammarAccess.getBuildInFunctionAccess().getModKeyword_4()); }

	'mod' 

{ after(grammarAccess.getBuildInFunctionAccess().getModKeyword_4()); }
)

    |(
{ before(grammarAccess.getBuildInFunctionAccess().getEqualsSignKeyword_5()); }

	'=' 

{ after(grammarAccess.getBuildInFunctionAccess().getEqualsSignKeyword_5()); }
)

    |(
{ before(grammarAccess.getBuildInFunctionAccess().getLessThanSignGreaterThanSignKeyword_6()); }

	'<>' 

{ after(grammarAccess.getBuildInFunctionAccess().getLessThanSignGreaterThanSignKeyword_6()); }
)

    |(
{ before(grammarAccess.getBuildInFunctionAccess().getGreaterThanSignKeyword_7()); }

	'>' 

{ after(grammarAccess.getBuildInFunctionAccess().getGreaterThanSignKeyword_7()); }
)

    |(
{ before(grammarAccess.getBuildInFunctionAccess().getLessThanSignKeyword_8()); }

	'<' 

{ after(grammarAccess.getBuildInFunctionAccess().getLessThanSignKeyword_8()); }
)

    |(
{ before(grammarAccess.getBuildInFunctionAccess().getLessThanSignEqualsSignKeyword_9()); }

	'<=' 

{ after(grammarAccess.getBuildInFunctionAccess().getLessThanSignEqualsSignKeyword_9()); }
)

    |(
{ before(grammarAccess.getBuildInFunctionAccess().getGreaterThanSignEqualsSignKeyword_10()); }

	'>=' 

{ after(grammarAccess.getBuildInFunctionAccess().getGreaterThanSignEqualsSignKeyword_10()); }
)

    |(
{ before(grammarAccess.getBuildInFunctionAccess().getNotKeyword_11()); }

	'not' 

{ after(grammarAccess.getBuildInFunctionAccess().getNotKeyword_11()); }
)

    |(
{ before(grammarAccess.getBuildInFunctionAccess().getAndKeyword_12()); }

	'and' 

{ after(grammarAccess.getBuildInFunctionAccess().getAndKeyword_12()); }
)

    |(
{ before(grammarAccess.getBuildInFunctionAccess().getOrKeyword_13()); }

	'or' 

{ after(grammarAccess.getBuildInFunctionAccess().getOrKeyword_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantExpressionAccess().getConstantAssignment_1_0()); }
(rule__ConstantExpression__ConstantAssignment_1_0)
{ after(grammarAccess.getConstantExpressionAccess().getConstantAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getConstantExpressionAccess().getValueAssignment_1_1()); }
(rule__ConstantExpression__ValueAssignment_1_1)
{ after(grammarAccess.getConstantExpressionAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapNotExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapNotExpressionAccess().getGroup_0()); }
(rule__TrapNotExpression__Group_0__0)
{ after(grammarAccess.getTrapNotExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTrapNotExpressionAccess().getTrapAtomicExpressionParserRuleCall_1()); }
	ruleTrapAtomicExpression
{ after(grammarAccess.getTrapNotExpressionAccess().getTrapAtomicExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapAtomicExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAtomicExpressionAccess().getTrapReferenceExprParserRuleCall_0()); }
	ruleTrapReferenceExpr
{ after(grammarAccess.getTrapAtomicExpressionAccess().getTrapReferenceExprParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTrapAtomicExpressionAccess().getGroup_1()); }
(rule__TrapAtomicExpression__Group_1__0)
{ after(grammarAccess.getTrapAtomicExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalNotExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalNotExpressionAccess().getGroup_0()); }
(rule__SignalNotExpression__Group_0__0)
{ after(grammarAccess.getSignalNotExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSignalNotExpressionAccess().getSignalAtomicExpressionParserRuleCall_1()); }
	ruleSignalAtomicExpression
{ after(grammarAccess.getSignalNotExpressionAccess().getSignalAtomicExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAtomicExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAtomicExpressionAccess().getGroup_0()); }
(rule__SignalAtomicExpression__Group_0__0)
{ after(grammarAccess.getSignalAtomicExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSignalAtomicExpressionAccess().getSignalPreExprParserRuleCall_1()); }
	ruleSignalPreExpr
{ after(grammarAccess.getSignalAtomicExpressionAccess().getSignalPreExprParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getSignalAtomicExpressionAccess().getSignalReferenceExprParserRuleCall_2()); }
	ruleSignalReferenceExpr
{ after(grammarAccess.getSignalAtomicExpressionAccess().getSignalReferenceExprParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayExpr__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayExprAccess().getExpressionAssignment_0_0()); }
(rule__DelayExpr__ExpressionAssignment_0_0)
{ after(grammarAccess.getDelayExprAccess().getExpressionAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getDelayExprAccess().getIsImmediateAssignment_0_1()); }
(rule__DelayExpr__IsImmediateAssignment_0_1)
{ after(grammarAccess.getDelayExprAccess().getIsImmediateAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayExpr__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayExprAccess().getSignalExprAssignment_1_0()); }
(rule__DelayExpr__SignalExprAssignment_1_0)
{ after(grammarAccess.getDelayExprAccess().getSignalExprAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getDelayExprAccess().getGroup_1_1()); }
(rule__DelayExpr__Group_1_1__0)
{ after(grammarAccess.getDelayExprAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getBooleanExpressionParserRuleCall_0()); }
	ruleBooleanExpression
{ after(grammarAccess.getExpressionAccess().getBooleanExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getValuedExpressionParserRuleCall_1()); }
	ruleValuedExpression
{ after(grammarAccess.getExpressionAccess().getValuedExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotOrValuedExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotOrValuedExpressionAccess().getValuedExpressionParserRuleCall_0()); }
	ruleValuedExpression
{ after(grammarAccess.getNotOrValuedExpressionAccess().getValuedExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNotOrValuedExpressionAccess().getNotExpressionParserRuleCall_1()); }
	ruleNotExpression
{ after(grammarAccess.getNotOrValuedExpressionAccess().getNotExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getGroup_0()); }
(rule__NotExpression__Group_0__0)
{ after(grammarAccess.getNotExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNotExpressionAccess().getAtomicExpressionParserRuleCall_1()); }
	ruleAtomicExpression
{ after(grammarAccess.getNotExpressionAccess().getAtomicExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getGroup_0()); }
(rule__NegExpression__Group_0__0)
{ after(grammarAccess.getNegExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNegExpressionAccess().getAtomicValuedExpressionParserRuleCall_1()); }
	ruleAtomicValuedExpression
{ after(grammarAccess.getNegExpressionAccess().getAtomicValuedExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getGroup_0()); }
(rule__ValuedObjectTestExpression__Group_0__0)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getGroup_1()); }
(rule__ValuedObjectTestExpression__Group_1__0)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getValuedObjectReferenceParserRuleCall_2()); }
	ruleValuedObjectReference
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getValuedObjectReferenceParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getInstructionStatementParserRuleCall_0()); }
	ruleInstructionStatement
{ after(grammarAccess.getStatementAccess().getInstructionStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getMetaStatementParserRuleCall_1()); }
	ruleMetaStatement
{ after(grammarAccess.getStatementAccess().getMetaStatementParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstructionStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstructionStatementAccess().getAssignmentParserRuleCall_0()); }
	ruleAssignment
{ after(grammarAccess.getInstructionStatementAccess().getAssignmentParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInstructionStatementAccess().getConditionalParserRuleCall_1()); }
	ruleConditional
{ after(grammarAccess.getInstructionStatementAccess().getConditionalParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getInstructionStatementAccess().getGotoParserRuleCall_2()); }
	ruleGoto
{ after(grammarAccess.getInstructionStatementAccess().getGotoParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getInstructionStatementAccess().getParallelParserRuleCall_3()); }
	ruleParallel
{ after(grammarAccess.getInstructionStatementAccess().getParallelParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getInstructionStatementAccess().getPauseParserRuleCall_4()); }
	rulePause
{ after(grammarAccess.getInstructionStatementAccess().getPauseParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestEntity__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestEntityAccess().getExpressionAssignment_0()); }
(rule__TestEntity__ExpressionAssignment_0)
{ after(grammarAccess.getTestEntityAccess().getExpressionAssignment_0()); }
)

    |(
{ before(grammarAccess.getTestEntityAccess().getEffectAssignment_1()); }
(rule__TestEntity__EffectAssignment_1)
{ after(grammarAccess.getTestEntityAccess().getEffectAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Alternatives_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getGroup_7_0()); }
(rule__Declaration__Group_7_0__0)
{ after(grammarAccess.getDeclarationAccess().getGroup_7_0()); }
)

    |(
{ before(grammarAccess.getDeclarationAccess().getSignalAssignment_7_1()); }
(rule__Declaration__SignalAssignment_7_1)
{ after(grammarAccess.getDeclarationAccess().getSignalAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Effect__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectAccess().getAssignmentParserRuleCall_0()); }
	ruleAssignment
{ after(grammarAccess.getEffectAccess().getAssignmentParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEffectAccess().getPostfixEffectParserRuleCall_1()); }
	rulePostfixEffect
{ after(grammarAccess.getEffectAccess().getPostfixEffectParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getEffectAccess().getEmissionParserRuleCall_2()); }
	ruleEmission
{ after(grammarAccess.getEffectAccess().getEmissionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getEffectAccess().getHostcodeEffectParserRuleCall_3()); }
	ruleHostcodeEffect
{ after(grammarAccess.getEffectAccess().getHostcodeEffectParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getEffectAccess().getFunctionCallEffectParserRuleCall_4()); }
	ruleFunctionCallEffect
{ after(grammarAccess.getEffectAccess().getFunctionCallEffectParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getGroup_3_0()); }
(rule__FunctionCallEffect__Group_3_0__0)
{ after(grammarAccess.getFunctionCallEffectAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_3_1()); }

	'()' 

{ after(grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup_2_0()); }
(rule__FunctionCall__Group_2_0__0)
{ after(grammarAccess.getFunctionCallAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_2_1()); }

	'()' 

{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisRightParenthesisKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Annotation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getCommentAnnotationParserRuleCall_0()); }
	ruleCommentAnnotation
{ after(grammarAccess.getAnnotationAccess().getCommentAnnotationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getKeyBooleanValueAnnotationParserRuleCall_1()); }
	ruleKeyBooleanValueAnnotation
{ after(grammarAccess.getAnnotationAccess().getKeyBooleanValueAnnotationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_2()); }
	ruleKeyStringValueAnnotation
{ after(grammarAccess.getAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_3()); }
	ruleTypedKeyStringValueAnnotation
{ after(grammarAccess.getAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getKeyIntValueAnnotationParserRuleCall_4()); }
	ruleKeyIntValueAnnotation
{ after(grammarAccess.getAnnotationAccess().getKeyIntValueAnnotationParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getKeyFloatValueAnnotationParserRuleCall_5()); }
	ruleKeyFloatValueAnnotation
{ after(grammarAccess.getAnnotationAccess().getKeyFloatValueAnnotationParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getTagAnnotationParserRuleCall_6()); }
	ruleTagAnnotation
{ after(grammarAccess.getAnnotationAccess().getTagAnnotationParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RestrictedAnnotation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRestrictedAnnotationAccess().getCommentAnnotationParserRuleCall_0()); }
	ruleCommentAnnotation
{ after(grammarAccess.getRestrictedAnnotationAccess().getCommentAnnotationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRestrictedAnnotationAccess().getQuotedKeyStringValueAnnotationParserRuleCall_1()); }
	ruleQuotedKeyStringValueAnnotation
{ after(grammarAccess.getRestrictedAnnotationAccess().getQuotedKeyStringValueAnnotationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getRestrictedAnnotationAccess().getQuotedTypedKeyStringValueAnnotationParserRuleCall_2()); }
	ruleQuotedTypedKeyStringValueAnnotation
{ after(grammarAccess.getRestrictedAnnotationAccess().getQuotedTypedKeyStringValueAnnotationParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getRestrictedAnnotationAccess().getKeyBooleanValueAnnotationParserRuleCall_3()); }
	ruleKeyBooleanValueAnnotation
{ after(grammarAccess.getRestrictedAnnotationAccess().getKeyBooleanValueAnnotationParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getRestrictedAnnotationAccess().getKeyIntValueAnnotationParserRuleCall_4()); }
	ruleKeyIntValueAnnotation
{ after(grammarAccess.getRestrictedAnnotationAccess().getKeyIntValueAnnotationParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getRestrictedAnnotationAccess().getKeyFloatValueAnnotationParserRuleCall_5()); }
	ruleKeyFloatValueAnnotation
{ after(grammarAccess.getRestrictedAnnotationAccess().getKeyFloatValueAnnotationParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getRestrictedAnnotationAccess().getTagAnnotationParserRuleCall_6()); }
	ruleTagAnnotation
{ after(grammarAccess.getRestrictedAnnotationAccess().getTagAnnotationParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getExtendedIDParserRuleCall_1()); }
	ruleExtendedID
{ after(grammarAccess.getEStringAccess().getExtendedIDParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EStringBoolean__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringBooleanAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringBooleanAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringBooleanAccess().getExtendedIDParserRuleCall_1()); }
	ruleExtendedID
{ after(grammarAccess.getEStringBooleanAccess().getExtendedIDParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getEStringBooleanAccess().getBOOLEANTerminalRuleCall_2()); }
	RULE_BOOLEAN
{ after(grammarAccess.getEStringBooleanAccess().getBOOLEANTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Esterel_CompareOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterel_CompareOperatorAccess().getEQEnumLiteralDeclaration_0()); }
(	'=' 
)
{ after(grammarAccess.getEsterel_CompareOperatorAccess().getEQEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getEsterel_CompareOperatorAccess().getLTEnumLiteralDeclaration_1()); }
(	'<' 
)
{ after(grammarAccess.getEsterel_CompareOperatorAccess().getLTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getEsterel_CompareOperatorAccess().getLEQEnumLiteralDeclaration_2()); }
(	'<=' 
)
{ after(grammarAccess.getEsterel_CompareOperatorAccess().getLEQEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getEsterel_CompareOperatorAccess().getGTEnumLiteralDeclaration_3()); }
(	'>' 
)
{ after(grammarAccess.getEsterel_CompareOperatorAccess().getGTEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getEsterel_CompareOperatorAccess().getGEQEnumLiteralDeclaration_4()); }
(	'>=' 
)
{ after(grammarAccess.getEsterel_CompareOperatorAccess().getGEQEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getEsterel_CompareOperatorAccess().getNEEnumLiteralDeclaration_5()); }
(	'<>' 
)
{ after(grammarAccess.getEsterel_CompareOperatorAccess().getNEEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Esterel_ValueType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterel_ValueTypeAccess().getPUREEnumLiteralDeclaration_0()); }
(	'pure' 
)
{ after(grammarAccess.getEsterel_ValueTypeAccess().getPUREEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getEsterel_ValueTypeAccess().getBOOLEnumLiteralDeclaration_1()); }
(	'boolean' 
)
{ after(grammarAccess.getEsterel_ValueTypeAccess().getBOOLEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getEsterel_ValueTypeAccess().getUNSIGNEDEnumLiteralDeclaration_2()); }
(	'unsigned' 
)
{ after(grammarAccess.getEsterel_ValueTypeAccess().getUNSIGNEDEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getEsterel_ValueTypeAccess().getINTEnumLiteralDeclaration_3()); }
(	'integer' 
)
{ after(grammarAccess.getEsterel_ValueTypeAccess().getINTEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getEsterel_ValueTypeAccess().getFLOATEnumLiteralDeclaration_4()); }
(	'float' 
)
{ after(grammarAccess.getEsterel_ValueTypeAccess().getFLOATEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getEsterel_ValueTypeAccess().getDOUBLEEnumLiteralDeclaration_5()); }
(	'double' 
)
{ after(grammarAccess.getEsterel_ValueTypeAccess().getDOUBLEEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getEsterel_ValueTypeAccess().getSTRINGEnumLiteralDeclaration_6()); }
(	'string' 
)
{ after(grammarAccess.getEsterel_ValueTypeAccess().getSTRINGEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getEsterel_ValueTypeAccess().getHOSTEnumLiteralDeclaration_7()); }
(	'host' 
)
{ after(grammarAccess.getEsterel_ValueTypeAccess().getHOSTEnumLiteralDeclaration_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Esterel_CombineOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterel_CombineOperatorAccess().getNONEEnumLiteralDeclaration_0()); }
(	'none' 
)
{ after(grammarAccess.getEsterel_CombineOperatorAccess().getNONEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getEsterel_CombineOperatorAccess().getADDEnumLiteralDeclaration_1()); }
(	'+' 
)
{ after(grammarAccess.getEsterel_CombineOperatorAccess().getADDEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getEsterel_CombineOperatorAccess().getMULTEnumLiteralDeclaration_2()); }
(	'*' 
)
{ after(grammarAccess.getEsterel_CombineOperatorAccess().getMULTEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getEsterel_CombineOperatorAccess().getMAXEnumLiteralDeclaration_3()); }
(	'max' 
)
{ after(grammarAccess.getEsterel_CombineOperatorAccess().getMAXEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getEsterel_CombineOperatorAccess().getMINEnumLiteralDeclaration_4()); }
(	'min' 
)
{ after(grammarAccess.getEsterel_CombineOperatorAccess().getMINEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getEsterel_CombineOperatorAccess().getOREnumLiteralDeclaration_5()); }
(	'or' 
)
{ after(grammarAccess.getEsterel_CombineOperatorAccess().getOREnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getEsterel_CombineOperatorAccess().getANDEnumLiteralDeclaration_6()); }
(	'and' 
)
{ after(grammarAccess.getEsterel_CombineOperatorAccess().getANDEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getEsterel_CombineOperatorAccess().getHOSTEnumLiteralDeclaration_7()); }
(	'host' 
)
{ after(grammarAccess.getEsterel_CombineOperatorAccess().getHOSTEnumLiteralDeclaration_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0()); }
(	'++' 
)
{ after(grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1()); }
(	'--' 
)
{ after(grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0()); }
(	'pure' 
)
{ after(grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1()); }
(	'bool' 
)
{ after(grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getUNSIGNEDEnumLiteralDeclaration_2()); }
(	'unsigned' 
)
{ after(grammarAccess.getValueTypeAccess().getUNSIGNEDEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_3()); }
(	'int' 
)
{ after(grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_4()); }
(	'float' 
)
{ after(grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_5()); }
(	'string' 
)
{ after(grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getHOSTEnumLiteralDeclaration_6()); }
(	'host' 
)
{ after(grammarAccess.getValueTypeAccess().getHOSTEnumLiteralDeclaration_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CombineOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0()); }
(	'none' 
)
{ after(grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1()); }
(	'+' 
)
{ after(grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2()); }
(	'*' 
)
{ after(grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3()); }
(	'max' 
)
{ after(grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4()); }
(	'min' 
)
{ after(grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5()); }
(	'|' 
)
{ after(grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6()); }
(	'&' 
)
{ after(grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7()); }
(	'host' 
)
{ after(grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__SCEstModule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCEstModule__Group__0__Impl
	rule__SCEstModule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getSCEstModuleAction_0()); }
(

)
{ after(grammarAccess.getSCEstModuleAccess().getSCEstModuleAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCEstModule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCEstModule__Group__1__Impl
	rule__SCEstModule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getAnnotationsAssignment_1()); }
(rule__SCEstModule__AnnotationsAssignment_1)*
{ after(grammarAccess.getSCEstModuleAccess().getAnnotationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCEstModule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCEstModule__Group__2__Impl
	rule__SCEstModule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getModuleKeyword_2()); }

	'module' 

{ after(grammarAccess.getSCEstModuleAccess().getModuleKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCEstModule__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCEstModule__Group__3__Impl
	rule__SCEstModule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getNameAssignment_3()); }
(rule__SCEstModule__NameAssignment_3)
{ after(grammarAccess.getSCEstModuleAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCEstModule__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCEstModule__Group__4__Impl
	rule__SCEstModule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getSCEstModuleAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCEstModule__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCEstModule__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getAlternatives_5()); }
(rule__SCEstModule__Alternatives_5)
{ after(grammarAccess.getSCEstModuleAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__SCEstModule__Group_5_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCEstModule__Group_5_0__0__Impl
	rule__SCEstModule__Group_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__Group_5_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getAlternatives_5_0_0()); }
(rule__SCEstModule__Alternatives_5_0_0)*
{ after(grammarAccess.getSCEstModuleAccess().getAlternatives_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCEstModule__Group_5_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCEstModule__Group_5_0__1__Impl
	rule__SCEstModule__Group_5_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__Group_5_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getGroup_5_0_1()); }
(rule__SCEstModule__Group_5_0_1__0)
{ after(grammarAccess.getSCEstModuleAccess().getGroup_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCEstModule__Group_5_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCEstModule__Group_5_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__Group_5_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getAlternatives_5_0_2()); }
(rule__SCEstModule__Alternatives_5_0_2)
{ after(grammarAccess.getSCEstModuleAccess().getAlternatives_5_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SCEstModule__Group_5_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCEstModule__Group_5_0_1__0__Impl
	rule__SCEstModule__Group_5_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__Group_5_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getAlternatives_5_0_1_0()); }
(rule__SCEstModule__Alternatives_5_0_1_0)*
{ after(grammarAccess.getSCEstModuleAccess().getAlternatives_5_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCEstModule__Group_5_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCEstModule__Group_5_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__Group_5_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getStatementsAssignment_5_0_1_1()); }
(rule__SCEstModule__StatementsAssignment_5_0_1_1)?
{ after(grammarAccess.getSCEstModuleAccess().getStatementsAssignment_5_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SCEstModule__Group_5_0_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCEstModule__Group_5_0_1_0_0__0__Impl
	rule__SCEstModule__Group_5_0_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__Group_5_0_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getStatementsAssignment_5_0_1_0_0_0()); }
(rule__SCEstModule__StatementsAssignment_5_0_1_0_0_0)
{ after(grammarAccess.getSCEstModuleAccess().getStatementsAssignment_5_0_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCEstModule__Group_5_0_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCEstModule__Group_5_0_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__Group_5_0_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getSemicolonKeyword_5_0_1_0_0_1()); }

	';' 

{ after(grammarAccess.getSCEstModuleAccess().getSemicolonKeyword_5_0_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SCEstModule__Group_5_0_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCEstModule__Group_5_0_2_0__0__Impl
	rule__SCEstModule__Group_5_0_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__Group_5_0_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getEndKeyword_5_0_2_0_0()); }

	'end' 

{ after(grammarAccess.getSCEstModuleAccess().getEndKeyword_5_0_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCEstModule__Group_5_0_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCEstModule__Group_5_0_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__Group_5_0_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getModuleKeyword_5_0_2_0_1()); }

	'module' 

{ after(grammarAccess.getSCEstModuleAccess().getModuleKeyword_5_0_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SCEstModule__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCEstModule__Group_5_1__0__Impl
	rule__SCEstModule__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getDeclarationsAssignment_5_1_0()); }
(rule__SCEstModule__DeclarationsAssignment_5_1_0)*
{ after(grammarAccess.getSCEstModuleAccess().getDeclarationsAssignment_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCEstModule__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCEstModule__Group_5_1__1__Impl
	rule__SCEstModule__Group_5_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getLeftCurlyBracketKeyword_5_1_1()); }

	'{' 

{ after(grammarAccess.getSCEstModuleAccess().getLeftCurlyBracketKeyword_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCEstModule__Group_5_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCEstModule__Group_5_1__2__Impl
	rule__SCEstModule__Group_5_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__Group_5_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getGroup_5_1_2()); }
(rule__SCEstModule__Group_5_1_2__0)
{ after(grammarAccess.getSCEstModuleAccess().getGroup_5_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCEstModule__Group_5_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCEstModule__Group_5_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__Group_5_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getRightCurlyBracketKeyword_5_1_3()); }

	'}' 

{ after(grammarAccess.getSCEstModuleAccess().getRightCurlyBracketKeyword_5_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SCEstModule__Group_5_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCEstModule__Group_5_1_2__0__Impl
	rule__SCEstModule__Group_5_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__Group_5_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getAlternatives_5_1_2_0()); }
(rule__SCEstModule__Alternatives_5_1_2_0)*
{ after(grammarAccess.getSCEstModuleAccess().getAlternatives_5_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCEstModule__Group_5_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCEstModule__Group_5_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__Group_5_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getStatementsAssignment_5_1_2_1()); }
(rule__SCEstModule__StatementsAssignment_5_1_2_1)?
{ after(grammarAccess.getSCEstModuleAccess().getStatementsAssignment_5_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SCEstModule__Group_5_1_2_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCEstModule__Group_5_1_2_0_0__0__Impl
	rule__SCEstModule__Group_5_1_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__Group_5_1_2_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getStatementsAssignment_5_1_2_0_0_0()); }
(rule__SCEstModule__StatementsAssignment_5_1_2_0_0_0)
{ after(grammarAccess.getSCEstModuleAccess().getStatementsAssignment_5_1_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SCEstModule__Group_5_1_2_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SCEstModule__Group_5_1_2_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__Group_5_1_2_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getSemicolonKeyword_5_1_2_0_0_1()); }

	';' 

{ after(grammarAccess.getSCEstModuleAccess().getSemicolonKeyword_5_1_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EsterelParallel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EsterelParallel__Group__0__Impl
	rule__EsterelParallel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelParallel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelParallelAccess().getThreadsAssignment_0()); }
(rule__EsterelParallel__ThreadsAssignment_0)
{ after(grammarAccess.getEsterelParallelAccess().getThreadsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EsterelParallel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EsterelParallel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelParallel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getEsterelParallelAccess().getGroup_1()); }
(rule__EsterelParallel__Group_1__0)
{ after(grammarAccess.getEsterelParallelAccess().getGroup_1()); }
)
(
{ before(grammarAccess.getEsterelParallelAccess().getGroup_1()); }
(rule__EsterelParallel__Group_1__0)*
{ after(grammarAccess.getEsterelParallelAccess().getGroup_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EsterelParallel__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EsterelParallel__Group_1__0__Impl
	rule__EsterelParallel__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelParallel__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelParallelAccess().getVerticalLineVerticalLineKeyword_1_0()); }

	'||' 

{ after(grammarAccess.getEsterelParallelAccess().getVerticalLineVerticalLineKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EsterelParallel__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EsterelParallel__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelParallel__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelParallelAccess().getThreadsAssignment_1_1()); }
(rule__EsterelParallel__ThreadsAssignment_1_1)
{ after(grammarAccess.getEsterelParallelAccess().getThreadsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EsterelThread__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EsterelThread__Group__0__Impl
	rule__EsterelThread__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelThread__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelThreadAccess().getEsterelThreadAction_0()); }
(

)
{ after(grammarAccess.getEsterelThreadAccess().getEsterelThreadAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EsterelThread__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EsterelThread__Group__1__Impl
	rule__EsterelThread__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelThread__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelThreadAccess().getAlternatives_1()); }
(rule__EsterelThread__Alternatives_1)*
{ after(grammarAccess.getEsterelThreadAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EsterelThread__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EsterelThread__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelThread__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelThreadAccess().getStatementsAssignment_2()); }
(rule__EsterelThread__StatementsAssignment_2)?
{ after(grammarAccess.getEsterelThreadAccess().getStatementsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EsterelThread__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EsterelThread__Group_1_0__0__Impl
	rule__EsterelThread__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelThread__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelThreadAccess().getStatementsAssignment_1_0_0()); }
(rule__EsterelThread__StatementsAssignment_1_0_0)
{ after(grammarAccess.getEsterelThreadAccess().getStatementsAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EsterelThread__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EsterelThread__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelThread__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelThreadAccess().getSemicolonKeyword_1_0_1()); }

	';' 

{ after(grammarAccess.getEsterelThreadAccess().getSemicolonKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getBlockAction_0()); }
(

)
{ after(grammarAccess.getBlockAccess().getBlockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getAnnotationsAssignment_1()); }
(rule__Block__AnnotationsAssignment_1)*
{ after(grammarAccess.getBlockAccess().getAnnotationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__2__Impl
	rule__Block__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getBlockAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__3__Impl
	rule__Block__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getGroup_3()); }
(rule__Block__Group_3__0)
{ after(grammarAccess.getBlockAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getBlockAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Block__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group_3__0__Impl
	rule__Block__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getAlternatives_3_0()); }
(rule__Block__Alternatives_3_0)*
{ after(grammarAccess.getBlockAccess().getAlternatives_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementsAssignment_3_1()); }
(rule__Block__StatementsAssignment_3_1)?
{ after(grammarAccess.getBlockAccess().getStatementsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Block__Group_3_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group_3_0_0__0__Impl
	rule__Block__Group_3_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_3_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementsAssignment_3_0_0_0()); }
(rule__Block__StatementsAssignment_3_0_0_0)
{ after(grammarAccess.getBlockAccess().getStatementsAssignment_3_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group_3_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group_3_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group_3_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getSemicolonKeyword_3_0_0_1()); }

	';' 

{ after(grammarAccess.getBlockAccess().getSemicolonKeyword_3_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Present__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group__0__Impl
	rule__Present__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getAnnotationsAssignment_0()); }
(rule__Present__AnnotationsAssignment_0)*
{ after(grammarAccess.getPresentAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Present__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group__1__Impl
	rule__Present__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getPresentKeyword_1()); }

	'present' 

{ after(grammarAccess.getPresentAccess().getPresentKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Present__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group__2__Impl
	rule__Present__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getAlternatives_2()); }
(rule__Present__Alternatives_2)
{ after(grammarAccess.getPresentAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Present__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group__3__Impl
	rule__Present__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getGroup_3()); }
(rule__Present__Group_3__0)?
{ after(grammarAccess.getPresentAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Present__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group__4__Impl
	rule__Present__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getEndKeyword_4()); }

	'end' 

{ after(grammarAccess.getPresentAccess().getEndKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Present__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getPresentKeyword_5()); }
(
	'present' 
)?
{ after(grammarAccess.getPresentAccess().getPresentKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Present__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group_2_0__0__Impl
	rule__Present__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getAlternatives_2_0_0()); }
(rule__Present__Alternatives_2_0_0)
{ after(grammarAccess.getPresentAccess().getAlternatives_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Present__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getGroup_2_0_1()); }
(rule__Present__Group_2_0_1__0)?
{ after(grammarAccess.getPresentAccess().getGroup_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Present__Group_2_0_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group_2_0_0_1__0__Impl
	rule__Present__Group_2_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group_2_0_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getLeftSquareBracketKeyword_2_0_0_1_0()); }

	'[' 

{ after(grammarAccess.getPresentAccess().getLeftSquareBracketKeyword_2_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Present__Group_2_0_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group_2_0_0_1__1__Impl
	rule__Present__Group_2_0_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group_2_0_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getExpressionAssignment_2_0_0_1_1()); }
(rule__Present__ExpressionAssignment_2_0_0_1_1)
{ after(grammarAccess.getPresentAccess().getExpressionAssignment_2_0_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Present__Group_2_0_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group_2_0_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group_2_0_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getRightSquareBracketKeyword_2_0_0_1_2()); }

	']' 

{ after(grammarAccess.getPresentAccess().getRightSquareBracketKeyword_2_0_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Present__Group_2_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group_2_0_1__0__Impl
	rule__Present__Group_2_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group_2_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getThenAnnotationsAssignment_2_0_1_0()); }
(rule__Present__ThenAnnotationsAssignment_2_0_1_0)*
{ after(grammarAccess.getPresentAccess().getThenAnnotationsAssignment_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Present__Group_2_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group_2_0_1__1__Impl
	rule__Present__Group_2_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group_2_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getThenKeyword_2_0_1_1()); }

	'then' 

{ after(grammarAccess.getPresentAccess().getThenKeyword_2_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Present__Group_2_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group_2_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group_2_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getGroup_2_0_1_2()); }
(rule__Present__Group_2_0_1_2__0)
{ after(grammarAccess.getPresentAccess().getGroup_2_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Present__Group_2_0_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group_2_0_1_2__0__Impl
	rule__Present__Group_2_0_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group_2_0_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getAlternatives_2_0_1_2_0()); }
(rule__Present__Alternatives_2_0_1_2_0)*
{ after(grammarAccess.getPresentAccess().getAlternatives_2_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Present__Group_2_0_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group_2_0_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group_2_0_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getThenStatementsAssignment_2_0_1_2_1()); }
(rule__Present__ThenStatementsAssignment_2_0_1_2_1)?
{ after(grammarAccess.getPresentAccess().getThenStatementsAssignment_2_0_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Present__Group_2_0_1_2_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group_2_0_1_2_0_0__0__Impl
	rule__Present__Group_2_0_1_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group_2_0_1_2_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getThenStatementsAssignment_2_0_1_2_0_0_0()); }
(rule__Present__ThenStatementsAssignment_2_0_1_2_0_0_0)
{ after(grammarAccess.getPresentAccess().getThenStatementsAssignment_2_0_1_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Present__Group_2_0_1_2_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group_2_0_1_2_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group_2_0_1_2_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getSemicolonKeyword_2_0_1_2_0_0_1()); }

	';' 

{ after(grammarAccess.getPresentAccess().getSemicolonKeyword_2_0_1_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Present__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group_3__0__Impl
	rule__Present__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getElseAnnotationsAssignment_3_0()); }
(rule__Present__ElseAnnotationsAssignment_3_0)*
{ after(grammarAccess.getPresentAccess().getElseAnnotationsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Present__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group_3__1__Impl
	rule__Present__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getElseKeyword_3_1()); }

	'else' 

{ after(grammarAccess.getPresentAccess().getElseKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Present__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getGroup_3_2()); }
(rule__Present__Group_3_2__0)
{ after(grammarAccess.getPresentAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Present__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group_3_2__0__Impl
	rule__Present__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getAlternatives_3_2_0()); }
(rule__Present__Alternatives_3_2_0)*
{ after(grammarAccess.getPresentAccess().getAlternatives_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Present__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getElseStatementsAssignment_3_2_1()); }
(rule__Present__ElseStatementsAssignment_3_2_1)?
{ after(grammarAccess.getPresentAccess().getElseStatementsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Present__Group_3_2_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group_3_2_0_0__0__Impl
	rule__Present__Group_3_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group_3_2_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getElseStatementsAssignment_3_2_0_0_0()); }
(rule__Present__ElseStatementsAssignment_3_2_0_0_0)
{ after(grammarAccess.getPresentAccess().getElseStatementsAssignment_3_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Present__Group_3_2_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group_3_2_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group_3_2_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getSemicolonKeyword_3_2_0_0_1()); }

	';' 

{ after(grammarAccess.getPresentAccess().getSemicolonKeyword_3_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PresentCase__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresentCase__Group__0__Impl
	rule__PresentCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getAnnotationsAssignment_0()); }
(rule__PresentCase__AnnotationsAssignment_0)*
{ after(grammarAccess.getPresentCaseAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PresentCase__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresentCase__Group__1__Impl
	rule__PresentCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getCaseKeyword_1()); }

	'case' 

{ after(grammarAccess.getPresentCaseAccess().getCaseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PresentCase__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresentCase__Group__2__Impl
	rule__PresentCase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getAlternatives_2()); }
(rule__PresentCase__Alternatives_2)
{ after(grammarAccess.getPresentCaseAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PresentCase__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresentCase__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getGroup_3()); }
(rule__PresentCase__Group_3__0)?
{ after(grammarAccess.getPresentCaseAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PresentCase__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresentCase__Group_2_1__0__Impl
	rule__PresentCase__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getLeftSquareBracketKeyword_2_1_0()); }

	'[' 

{ after(grammarAccess.getPresentCaseAccess().getLeftSquareBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PresentCase__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresentCase__Group_2_1__1__Impl
	rule__PresentCase__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getExpressionAssignment_2_1_1()); }
(rule__PresentCase__ExpressionAssignment_2_1_1)
{ after(grammarAccess.getPresentCaseAccess().getExpressionAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PresentCase__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresentCase__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getRightSquareBracketKeyword_2_1_2()); }

	']' 

{ after(grammarAccess.getPresentCaseAccess().getRightSquareBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PresentCase__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresentCase__Group_3__0__Impl
	rule__PresentCase__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getDoKeyword_3_0()); }

	'do' 

{ after(grammarAccess.getPresentCaseAccess().getDoKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PresentCase__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresentCase__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getGroup_3_1()); }
(rule__PresentCase__Group_3_1__0)
{ after(grammarAccess.getPresentCaseAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PresentCase__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresentCase__Group_3_1__0__Impl
	rule__PresentCase__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getAlternatives_3_1_0()); }
(rule__PresentCase__Alternatives_3_1_0)*
{ after(grammarAccess.getPresentCaseAccess().getAlternatives_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PresentCase__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresentCase__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getStatementsAssignment_3_1_1()); }
(rule__PresentCase__StatementsAssignment_3_1_1)?
{ after(grammarAccess.getPresentCaseAccess().getStatementsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PresentCase__Group_3_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresentCase__Group_3_1_0_0__0__Impl
	rule__PresentCase__Group_3_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__Group_3_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getStatementsAssignment_3_1_0_0_0()); }
(rule__PresentCase__StatementsAssignment_3_1_0_0_0)
{ after(grammarAccess.getPresentCaseAccess().getStatementsAssignment_3_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PresentCase__Group_3_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresentCase__Group_3_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__Group_3_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getSemicolonKeyword_3_1_0_0_1()); }

	';' 

{ after(grammarAccess.getPresentCaseAccess().getSemicolonKeyword_3_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfTest__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group__0__Impl
	rule__IfTest__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getAnnotationsAssignment_0()); }
(rule__IfTest__AnnotationsAssignment_0)*
{ after(grammarAccess.getIfTestAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfTest__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group__1__Impl
	rule__IfTest__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getIfKeyword_1()); }

	'if' 

{ after(grammarAccess.getIfTestAccess().getIfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfTest__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group__2__Impl
	rule__IfTest__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getExpressionAssignment_2()); }
(rule__IfTest__ExpressionAssignment_2)
{ after(grammarAccess.getIfTestAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfTest__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group__3__Impl
	rule__IfTest__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getGroup_3()); }
(rule__IfTest__Group_3__0)?
{ after(grammarAccess.getIfTestAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfTest__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group__4__Impl
	rule__IfTest__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getElseifAssignment_4()); }
(rule__IfTest__ElseifAssignment_4)*
{ after(grammarAccess.getIfTestAccess().getElseifAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfTest__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group__5__Impl
	rule__IfTest__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getGroup_5()); }
(rule__IfTest__Group_5__0)?
{ after(grammarAccess.getIfTestAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfTest__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group__6__Impl
	rule__IfTest__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getEndKeyword_6()); }

	'end' 

{ after(grammarAccess.getIfTestAccess().getEndKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfTest__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getIfKeyword_7()); }
(
	'if' 
)?
{ after(grammarAccess.getIfTestAccess().getIfKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__IfTest__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group_3__0__Impl
	rule__IfTest__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getThenAnnotationsAssignment_3_0()); }
(rule__IfTest__ThenAnnotationsAssignment_3_0)*
{ after(grammarAccess.getIfTestAccess().getThenAnnotationsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfTest__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group_3__1__Impl
	rule__IfTest__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getThenKeyword_3_1()); }

	'then' 

{ after(grammarAccess.getIfTestAccess().getThenKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfTest__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getGroup_3_2()); }
(rule__IfTest__Group_3_2__0)
{ after(grammarAccess.getIfTestAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IfTest__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group_3_2__0__Impl
	rule__IfTest__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getAlternatives_3_2_0()); }
(rule__IfTest__Alternatives_3_2_0)*
{ after(grammarAccess.getIfTestAccess().getAlternatives_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfTest__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getThenStatementsAssignment_3_2_1()); }
(rule__IfTest__ThenStatementsAssignment_3_2_1)?
{ after(grammarAccess.getIfTestAccess().getThenStatementsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfTest__Group_3_2_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group_3_2_0_0__0__Impl
	rule__IfTest__Group_3_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group_3_2_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getThenStatementsAssignment_3_2_0_0_0()); }
(rule__IfTest__ThenStatementsAssignment_3_2_0_0_0)
{ after(grammarAccess.getIfTestAccess().getThenStatementsAssignment_3_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfTest__Group_3_2_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group_3_2_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group_3_2_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getSemicolonKeyword_3_2_0_0_1()); }

	';' 

{ after(grammarAccess.getIfTestAccess().getSemicolonKeyword_3_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfTest__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group_5__0__Impl
	rule__IfTest__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getElseAnnotationsAssignment_5_0()); }
(rule__IfTest__ElseAnnotationsAssignment_5_0)*
{ after(grammarAccess.getIfTestAccess().getElseAnnotationsAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfTest__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group_5__1__Impl
	rule__IfTest__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getElseKeyword_5_1()); }

	'else' 

{ after(grammarAccess.getIfTestAccess().getElseKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfTest__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getGroup_5_2()); }
(rule__IfTest__Group_5_2__0)
{ after(grammarAccess.getIfTestAccess().getGroup_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IfTest__Group_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group_5_2__0__Impl
	rule__IfTest__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getAlternatives_5_2_0()); }
(rule__IfTest__Alternatives_5_2_0)*
{ after(grammarAccess.getIfTestAccess().getAlternatives_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfTest__Group_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getElseStatementsAssignment_5_2_1()); }
(rule__IfTest__ElseStatementsAssignment_5_2_1)?
{ after(grammarAccess.getIfTestAccess().getElseStatementsAssignment_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfTest__Group_5_2_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group_5_2_0_0__0__Impl
	rule__IfTest__Group_5_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group_5_2_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getElseStatementsAssignment_5_2_0_0_0()); }
(rule__IfTest__ElseStatementsAssignment_5_2_0_0_0)
{ after(grammarAccess.getIfTestAccess().getElseStatementsAssignment_5_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfTest__Group_5_2_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group_5_2_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group_5_2_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getSemicolonKeyword_5_2_0_0_1()); }

	';' 

{ after(grammarAccess.getIfTestAccess().getSemicolonKeyword_5_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ElsIf__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElsIf__Group__0__Impl
	rule__ElsIf__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsIf__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfAccess().getAnnotationsAssignment_0()); }
(rule__ElsIf__AnnotationsAssignment_0)*
{ after(grammarAccess.getElsIfAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElsIf__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElsIf__Group__1__Impl
	rule__ElsIf__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsIf__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfAccess().getElsifKeyword_1()); }

	'elsif' 

{ after(grammarAccess.getElsIfAccess().getElsifKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElsIf__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElsIf__Group__2__Impl
	rule__ElsIf__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsIf__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfAccess().getExpressionAssignment_2()); }
(rule__ElsIf__ExpressionAssignment_2)
{ after(grammarAccess.getElsIfAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElsIf__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElsIf__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsIf__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfAccess().getGroup_3()); }
(rule__ElsIf__Group_3__0)?
{ after(grammarAccess.getElsIfAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ElsIf__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElsIf__Group_3__0__Impl
	rule__ElsIf__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsIf__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfAccess().getThenKeyword_3_0()); }

	'then' 

{ after(grammarAccess.getElsIfAccess().getThenKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElsIf__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElsIf__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsIf__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfAccess().getGroup_3_1()); }
(rule__ElsIf__Group_3_1__0)
{ after(grammarAccess.getElsIfAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ElsIf__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElsIf__Group_3_1__0__Impl
	rule__ElsIf__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsIf__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfAccess().getAlternatives_3_1_0()); }
(rule__ElsIf__Alternatives_3_1_0)*
{ after(grammarAccess.getElsIfAccess().getAlternatives_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElsIf__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElsIf__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsIf__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfAccess().getThenStatementsAssignment_3_1_1()); }
(rule__ElsIf__ThenStatementsAssignment_3_1_1)?
{ after(grammarAccess.getElsIfAccess().getThenStatementsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ElsIf__Group_3_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElsIf__Group_3_1_0_0__0__Impl
	rule__ElsIf__Group_3_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsIf__Group_3_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfAccess().getThenStatementsAssignment_3_1_0_0_0()); }
(rule__ElsIf__ThenStatementsAssignment_3_1_0_0_0)
{ after(grammarAccess.getElsIfAccess().getThenStatementsAssignment_3_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElsIf__Group_3_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElsIf__Group_3_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsIf__Group_3_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfAccess().getSemicolonKeyword_3_1_0_0_1()); }

	';' 

{ after(grammarAccess.getElsIfAccess().getSemicolonKeyword_3_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Loop__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Loop__Group__0__Impl
	rule__Loop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getLoopAction_0()); }
(

)
{ after(grammarAccess.getLoopAccess().getLoopAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Loop__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Loop__Group__1__Impl
	rule__Loop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getAnnotationsAssignment_1()); }
(rule__Loop__AnnotationsAssignment_1)*
{ after(grammarAccess.getLoopAccess().getAnnotationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Loop__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Loop__Group__2__Impl
	rule__Loop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getLoopKeyword_2()); }

	'loop' 

{ after(grammarAccess.getLoopAccess().getLoopKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Loop__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Loop__Group__3__Impl
	rule__Loop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getGroup_3()); }
(rule__Loop__Group_3__0)
{ after(grammarAccess.getLoopAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Loop__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Loop__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getAlternatives_4()); }
(rule__Loop__Alternatives_4)
{ after(grammarAccess.getLoopAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Loop__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Loop__Group_3__0__Impl
	rule__Loop__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getAlternatives_3_0()); }
(rule__Loop__Alternatives_3_0)*
{ after(grammarAccess.getLoopAccess().getAlternatives_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Loop__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Loop__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getStatementsAssignment_3_1()); }
(rule__Loop__StatementsAssignment_3_1)?
{ after(grammarAccess.getLoopAccess().getStatementsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Loop__Group_3_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Loop__Group_3_0_0__0__Impl
	rule__Loop__Group_3_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group_3_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getStatementsAssignment_3_0_0_0()); }
(rule__Loop__StatementsAssignment_3_0_0_0)
{ after(grammarAccess.getLoopAccess().getStatementsAssignment_3_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Loop__Group_3_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Loop__Group_3_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group_3_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getSemicolonKeyword_3_0_0_1()); }

	';' 

{ after(grammarAccess.getLoopAccess().getSemicolonKeyword_3_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Loop__Group_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Loop__Group_4_0__0__Impl
	rule__Loop__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getEndKeyword_4_0_0()); }

	'end' 

{ after(grammarAccess.getLoopAccess().getEndKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Loop__Group_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Loop__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getLoopKeyword_4_0_1()); }
(
	'loop' 
)?
{ after(grammarAccess.getLoopAccess().getLoopKeyword_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Loop__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Loop__Group_4_1__0__Impl
	rule__Loop__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getEachKeyword_4_1_0()); }

	'each' 

{ after(grammarAccess.getLoopAccess().getEachKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Loop__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Loop__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getDelayAssignment_4_1_1()); }
(rule__Loop__DelayAssignment_4_1_1)
{ after(grammarAccess.getLoopAccess().getDelayAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Repeat__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Repeat__Group__0__Impl
	rule__Repeat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getAnnotationsAssignment_0()); }
(rule__Repeat__AnnotationsAssignment_0)*
{ after(grammarAccess.getRepeatAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Repeat__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Repeat__Group__1__Impl
	rule__Repeat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getPositiveAssignment_1()); }
(rule__Repeat__PositiveAssignment_1)?
{ after(grammarAccess.getRepeatAccess().getPositiveAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Repeat__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Repeat__Group__2__Impl
	rule__Repeat__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getRepeatKeyword_2()); }

	'repeat' 

{ after(grammarAccess.getRepeatAccess().getRepeatKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Repeat__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Repeat__Group__3__Impl
	rule__Repeat__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getExpressionAssignment_3()); }
(rule__Repeat__ExpressionAssignment_3)
{ after(grammarAccess.getRepeatAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Repeat__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Repeat__Group__4__Impl
	rule__Repeat__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getTimesKeyword_4()); }

	'times' 

{ after(grammarAccess.getRepeatAccess().getTimesKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Repeat__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Repeat__Group__5__Impl
	rule__Repeat__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getGroup_5()); }
(rule__Repeat__Group_5__0)
{ after(grammarAccess.getRepeatAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Repeat__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Repeat__Group__6__Impl
	rule__Repeat__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getEndKeyword_6()); }

	'end' 

{ after(grammarAccess.getRepeatAccess().getEndKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Repeat__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Repeat__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getRepeatKeyword_7()); }
(
	'repeat' 
)?
{ after(grammarAccess.getRepeatAccess().getRepeatKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Repeat__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Repeat__Group_5__0__Impl
	rule__Repeat__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getAlternatives_5_0()); }
(rule__Repeat__Alternatives_5_0)*
{ after(grammarAccess.getRepeatAccess().getAlternatives_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Repeat__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Repeat__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getStatementsAssignment_5_1()); }
(rule__Repeat__StatementsAssignment_5_1)?
{ after(grammarAccess.getRepeatAccess().getStatementsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Repeat__Group_5_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Repeat__Group_5_0_0__0__Impl
	rule__Repeat__Group_5_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group_5_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getStatementsAssignment_5_0_0_0()); }
(rule__Repeat__StatementsAssignment_5_0_0_0)
{ after(grammarAccess.getRepeatAccess().getStatementsAssignment_5_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Repeat__Group_5_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Repeat__Group_5_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group_5_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getSemicolonKeyword_5_0_0_1()); }

	';' 

{ after(grammarAccess.getRepeatAccess().getSemicolonKeyword_5_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Abort__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group__0__Impl
	rule__Abort__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getAnnotationsAssignment_0()); }
(rule__Abort__AnnotationsAssignment_0)*
{ after(grammarAccess.getAbortAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Abort__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group__1__Impl
	rule__Abort__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getGroup_1()); }
(rule__Abort__Group_1__0)
{ after(grammarAccess.getAbortAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Abort__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group__2__Impl
	rule__Abort__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getGroup_2()); }
(rule__Abort__Group_2__0)
{ after(grammarAccess.getAbortAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Abort__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group__3__Impl
	rule__Abort__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getWhenKeyword_3()); }

	'when' 

{ after(grammarAccess.getAbortAccess().getWhenKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Abort__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getAlternatives_4()); }
(rule__Abort__Alternatives_4)
{ after(grammarAccess.getAbortAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Abort__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_1__0__Impl
	rule__Abort__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getWeakAssignment_1_0()); }
(rule__Abort__WeakAssignment_1_0)?
{ after(grammarAccess.getAbortAccess().getWeakAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Abort__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getAbortKeyword_1_1()); }

	'abort' 

{ after(grammarAccess.getAbortAccess().getAbortKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Abort__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_2__0__Impl
	rule__Abort__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getAlternatives_2_0()); }
(rule__Abort__Alternatives_2_0)*
{ after(grammarAccess.getAbortAccess().getAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Abort__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getStatementsAssignment_2_1()); }
(rule__Abort__StatementsAssignment_2_1)?
{ after(grammarAccess.getAbortAccess().getStatementsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Abort__Group_2_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_2_0_0__0__Impl
	rule__Abort__Group_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_2_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getStatementsAssignment_2_0_0_0()); }
(rule__Abort__StatementsAssignment_2_0_0_0)
{ after(grammarAccess.getAbortAccess().getStatementsAssignment_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Abort__Group_2_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_2_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_2_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getSemicolonKeyword_2_0_0_1()); }

	';' 

{ after(grammarAccess.getAbortAccess().getSemicolonKeyword_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Abort__Group_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_4_0__0__Impl
	rule__Abort__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getDelayAssignment_4_0_0()); }
(rule__Abort__DelayAssignment_4_0_0)
{ after(grammarAccess.getAbortAccess().getDelayAssignment_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Abort__Group_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_4_0__1__Impl
	rule__Abort__Group_4_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getGroup_4_0_1()); }
(rule__Abort__Group_4_0_1__0)?
{ after(grammarAccess.getAbortAccess().getGroup_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Abort__Group_4_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_4_0__2__Impl
	rule__Abort__Group_4_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_4_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getEndKeyword_4_0_2()); }

	'end' 

{ after(grammarAccess.getAbortAccess().getEndKeyword_4_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Abort__Group_4_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_4_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_4_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getAlternatives_4_0_3()); }
(rule__Abort__Alternatives_4_0_3)?
{ after(grammarAccess.getAbortAccess().getAlternatives_4_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Abort__Group_4_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_4_0_1__0__Impl
	rule__Abort__Group_4_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_4_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getDoKeyword_4_0_1_0()); }

	'do' 

{ after(grammarAccess.getAbortAccess().getDoKeyword_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Abort__Group_4_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_4_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_4_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getGroup_4_0_1_1()); }
(rule__Abort__Group_4_0_1_1__0)
{ after(grammarAccess.getAbortAccess().getGroup_4_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Abort__Group_4_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_4_0_1_1__0__Impl
	rule__Abort__Group_4_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_4_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getAlternatives_4_0_1_1_0()); }
(rule__Abort__Alternatives_4_0_1_1_0)*
{ after(grammarAccess.getAbortAccess().getAlternatives_4_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Abort__Group_4_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_4_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_4_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getDoStatementsAssignment_4_0_1_1_1()); }
(rule__Abort__DoStatementsAssignment_4_0_1_1_1)?
{ after(grammarAccess.getAbortAccess().getDoStatementsAssignment_4_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Abort__Group_4_0_1_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_4_0_1_1_0_0__0__Impl
	rule__Abort__Group_4_0_1_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_4_0_1_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getDoStatementsAssignment_4_0_1_1_0_0_0()); }
(rule__Abort__DoStatementsAssignment_4_0_1_1_0_0_0)
{ after(grammarAccess.getAbortAccess().getDoStatementsAssignment_4_0_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Abort__Group_4_0_1_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_4_0_1_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_4_0_1_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getSemicolonKeyword_4_0_1_1_0_0_1()); }

	';' 

{ after(grammarAccess.getAbortAccess().getSemicolonKeyword_4_0_1_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Abort__Group_4_0_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_4_0_3_0__0__Impl
	rule__Abort__Group_4_0_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_4_0_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getWeakKeyword_4_0_3_0_0()); }

	'weak' 

{ after(grammarAccess.getAbortAccess().getWeakKeyword_4_0_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Abort__Group_4_0_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_4_0_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_4_0_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getAbortKeyword_4_0_3_0_1()); }

	'abort' 

{ after(grammarAccess.getAbortAccess().getAbortKeyword_4_0_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Abort__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_4_1__0__Impl
	rule__Abort__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getDelayAssignment_4_1_0()); }
(rule__Abort__DelayAssignment_4_1_0)
{ after(grammarAccess.getAbortAccess().getDelayAssignment_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Abort__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getAlternatives_4_1_1()); }
(rule__Abort__Alternatives_4_1_1)?
{ after(grammarAccess.getAbortAccess().getAlternatives_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Abort__Group_4_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_4_1_1_1__0__Impl
	rule__Abort__Group_4_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_4_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getEndKeyword_4_1_1_1_0()); }

	'end' 

{ after(grammarAccess.getAbortAccess().getEndKeyword_4_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Abort__Group_4_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_4_1_1_1__1__Impl
	rule__Abort__Group_4_1_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_4_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getWeakKeyword_4_1_1_1_1()); }
(
	'weak' 
)?
{ after(grammarAccess.getAbortAccess().getWeakKeyword_4_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Abort__Group_4_1_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_4_1_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_4_1_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getAbortKeyword_4_1_1_1_2()); }

	'abort' 

{ after(grammarAccess.getAbortAccess().getAbortKeyword_4_1_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Abort__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_4_2__0__Impl
	rule__Abort__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAbortAccess().getCasesAssignment_4_2_0()); }
(rule__Abort__CasesAssignment_4_2_0)
{ after(grammarAccess.getAbortAccess().getCasesAssignment_4_2_0()); }
)
(
{ before(grammarAccess.getAbortAccess().getCasesAssignment_4_2_0()); }
(rule__Abort__CasesAssignment_4_2_0)*
{ after(grammarAccess.getAbortAccess().getCasesAssignment_4_2_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Abort__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_4_2__1__Impl
	rule__Abort__Group_4_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getEndKeyword_4_2_1()); }

	'end' 

{ after(grammarAccess.getAbortAccess().getEndKeyword_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Abort__Group_4_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_4_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_4_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getAlternatives_4_2_2()); }
(rule__Abort__Alternatives_4_2_2)?
{ after(grammarAccess.getAbortAccess().getAlternatives_4_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Abort__Group_4_2_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_4_2_2_0__0__Impl
	rule__Abort__Group_4_2_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_4_2_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getWeakKeyword_4_2_2_0_0()); }

	'weak' 

{ after(grammarAccess.getAbortAccess().getWeakKeyword_4_2_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Abort__Group_4_2_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group_4_2_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group_4_2_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getAbortKeyword_4_2_2_0_1()); }

	'abort' 

{ after(grammarAccess.getAbortAccess().getAbortKeyword_4_2_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Case__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__0__Impl
	rule__Case__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getAnnotationsAssignment_0()); }
(rule__Case__AnnotationsAssignment_0)*
{ after(grammarAccess.getCaseAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__1__Impl
	rule__Case__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getCaseKeyword_1()); }

	'case' 

{ after(grammarAccess.getCaseAccess().getCaseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__2__Impl
	rule__Case__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getDelayAssignment_2()); }
(rule__Case__DelayAssignment_2)
{ after(grammarAccess.getCaseAccess().getDelayAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getGroup_3()); }
(rule__Case__Group_3__0)?
{ after(grammarAccess.getCaseAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Case__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group_3__0__Impl
	rule__Case__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getDoKeyword_3_0()); }

	'do' 

{ after(grammarAccess.getCaseAccess().getDoKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getGroup_3_1()); }
(rule__Case__Group_3_1__0)
{ after(grammarAccess.getCaseAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Case__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group_3_1__0__Impl
	rule__Case__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getAlternatives_3_1_0()); }
(rule__Case__Alternatives_3_1_0)*
{ after(grammarAccess.getCaseAccess().getAlternatives_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getStatementsAssignment_3_1_1()); }
(rule__Case__StatementsAssignment_3_1_1)?
{ after(grammarAccess.getCaseAccess().getStatementsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Case__Group_3_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group_3_1_0_0__0__Impl
	rule__Case__Group_3_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group_3_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getStatementsAssignment_3_1_0_0_0()); }
(rule__Case__StatementsAssignment_3_1_0_0_0)
{ after(grammarAccess.getCaseAccess().getStatementsAssignment_3_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Case__Group_3_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Case__Group_3_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Case__Group_3_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getSemicolonKeyword_3_1_0_0_1()); }

	';' 

{ after(grammarAccess.getCaseAccess().getSemicolonKeyword_3_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Await__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Await__Group__0__Impl
	rule__Await__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Await__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getAnnotationsAssignment_0()); }
(rule__Await__AnnotationsAssignment_0)*
{ after(grammarAccess.getAwaitAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Await__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Await__Group__1__Impl
	rule__Await__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Await__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getAwaitKeyword_1()); }

	'await' 

{ after(grammarAccess.getAwaitAccess().getAwaitKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Await__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Await__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Await__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getAlternatives_2()); }
(rule__Await__Alternatives_2)
{ after(grammarAccess.getAwaitAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Await__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Await__Group_2_0__0__Impl
	rule__Await__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Await__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getDelayAssignment_2_0_0()); }
(rule__Await__DelayAssignment_2_0_0)
{ after(grammarAccess.getAwaitAccess().getDelayAssignment_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Await__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Await__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Await__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getGroup_2_0_1()); }
(rule__Await__Group_2_0_1__0)?
{ after(grammarAccess.getAwaitAccess().getGroup_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Await__Group_2_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Await__Group_2_0_1__0__Impl
	rule__Await__Group_2_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Await__Group_2_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getDoKeyword_2_0_1_0()); }

	'do' 

{ after(grammarAccess.getAwaitAccess().getDoKeyword_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Await__Group_2_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Await__Group_2_0_1__1__Impl
	rule__Await__Group_2_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Await__Group_2_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getGroup_2_0_1_1()); }
(rule__Await__Group_2_0_1_1__0)
{ after(grammarAccess.getAwaitAccess().getGroup_2_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Await__Group_2_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Await__Group_2_0_1__2__Impl
	rule__Await__Group_2_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Await__Group_2_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getEndKeyword_2_0_1_2()); }

	'end' 

{ after(grammarAccess.getAwaitAccess().getEndKeyword_2_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Await__Group_2_0_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Await__Group_2_0_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Await__Group_2_0_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getAwaitKeyword_2_0_1_3()); }
(
	'await' 
)?
{ after(grammarAccess.getAwaitAccess().getAwaitKeyword_2_0_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Await__Group_2_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Await__Group_2_0_1_1__0__Impl
	rule__Await__Group_2_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Await__Group_2_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getAlternatives_2_0_1_1_0()); }
(rule__Await__Alternatives_2_0_1_1_0)*
{ after(grammarAccess.getAwaitAccess().getAlternatives_2_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Await__Group_2_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Await__Group_2_0_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Await__Group_2_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getStatementsAssignment_2_0_1_1_1()); }
(rule__Await__StatementsAssignment_2_0_1_1_1)?
{ after(grammarAccess.getAwaitAccess().getStatementsAssignment_2_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Await__Group_2_0_1_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Await__Group_2_0_1_1_0_0__0__Impl
	rule__Await__Group_2_0_1_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Await__Group_2_0_1_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getStatementsAssignment_2_0_1_1_0_0_0()); }
(rule__Await__StatementsAssignment_2_0_1_1_0_0_0)
{ after(grammarAccess.getAwaitAccess().getStatementsAssignment_2_0_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Await__Group_2_0_1_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Await__Group_2_0_1_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Await__Group_2_0_1_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getSemicolonKeyword_2_0_1_1_0_0_1()); }

	';' 

{ after(grammarAccess.getAwaitAccess().getSemicolonKeyword_2_0_1_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Await__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Await__Group_2_1__0__Impl
	rule__Await__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Await__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAwaitAccess().getCasesAssignment_2_1_0()); }
(rule__Await__CasesAssignment_2_1_0)
{ after(grammarAccess.getAwaitAccess().getCasesAssignment_2_1_0()); }
)
(
{ before(grammarAccess.getAwaitAccess().getCasesAssignment_2_1_0()); }
(rule__Await__CasesAssignment_2_1_0)*
{ after(grammarAccess.getAwaitAccess().getCasesAssignment_2_1_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Await__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Await__Group_2_1__1__Impl
	rule__Await__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Await__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getEndKeyword_2_1_1()); }

	'end' 

{ after(grammarAccess.getAwaitAccess().getEndKeyword_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Await__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Await__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Await__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getAwaitKeyword_2_1_2()); }
(
	'await' 
)?
{ after(grammarAccess.getAwaitAccess().getAwaitKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EveryDo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EveryDo__Group__0__Impl
	rule__EveryDo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getAnnotationsAssignment_0()); }
(rule__EveryDo__AnnotationsAssignment_0)*
{ after(grammarAccess.getEveryDoAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EveryDo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EveryDo__Group__1__Impl
	rule__EveryDo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getEveryKeyword_1()); }

	'every' 

{ after(grammarAccess.getEveryDoAccess().getEveryKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EveryDo__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EveryDo__Group__2__Impl
	rule__EveryDo__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getDelayAssignment_2()); }
(rule__EveryDo__DelayAssignment_2)
{ after(grammarAccess.getEveryDoAccess().getDelayAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EveryDo__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EveryDo__Group__3__Impl
	rule__EveryDo__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getDoKeyword_3()); }

	'do' 

{ after(grammarAccess.getEveryDoAccess().getDoKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EveryDo__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EveryDo__Group__4__Impl
	rule__EveryDo__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getGroup_4()); }
(rule__EveryDo__Group_4__0)
{ after(grammarAccess.getEveryDoAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EveryDo__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EveryDo__Group__5__Impl
	rule__EveryDo__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getEndKeyword_5()); }

	'end' 

{ after(grammarAccess.getEveryDoAccess().getEndKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EveryDo__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EveryDo__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getEveryKeyword_6()); }
(
	'every' 
)?
{ after(grammarAccess.getEveryDoAccess().getEveryKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__EveryDo__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EveryDo__Group_4__0__Impl
	rule__EveryDo__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getAlternatives_4_0()); }
(rule__EveryDo__Alternatives_4_0)*
{ after(grammarAccess.getEveryDoAccess().getAlternatives_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EveryDo__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EveryDo__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getStatementsAssignment_4_1()); }
(rule__EveryDo__StatementsAssignment_4_1)?
{ after(grammarAccess.getEveryDoAccess().getStatementsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EveryDo__Group_4_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EveryDo__Group_4_0_0__0__Impl
	rule__EveryDo__Group_4_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__Group_4_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getStatementsAssignment_4_0_0_0()); }
(rule__EveryDo__StatementsAssignment_4_0_0_0)
{ after(grammarAccess.getEveryDoAccess().getStatementsAssignment_4_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EveryDo__Group_4_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EveryDo__Group_4_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__Group_4_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getSemicolonKeyword_4_0_0_1()); }

	';' 

{ after(grammarAccess.getEveryDoAccess().getSemicolonKeyword_4_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Suspend__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suspend__Group__0__Impl
	rule__Suspend__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Suspend__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getAnnotationsAssignment_0()); }
(rule__Suspend__AnnotationsAssignment_0)*
{ after(grammarAccess.getSuspendAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suspend__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suspend__Group__1__Impl
	rule__Suspend__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Suspend__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getGroup_1()); }
(rule__Suspend__Group_1__0)
{ after(grammarAccess.getSuspendAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suspend__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suspend__Group__2__Impl
	rule__Suspend__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Suspend__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getGroup_2()); }
(rule__Suspend__Group_2__0)
{ after(grammarAccess.getSuspendAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suspend__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suspend__Group__3__Impl
	rule__Suspend__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Suspend__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getWhenKeyword_3()); }

	'when' 

{ after(grammarAccess.getSuspendAccess().getWhenKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suspend__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suspend__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Suspend__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getDelayAssignment_4()); }
(rule__Suspend__DelayAssignment_4)
{ after(grammarAccess.getSuspendAccess().getDelayAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Suspend__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suspend__Group_1__0__Impl
	rule__Suspend__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Suspend__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getWeakAssignment_1_0()); }
(rule__Suspend__WeakAssignment_1_0)?
{ after(grammarAccess.getSuspendAccess().getWeakAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suspend__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suspend__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Suspend__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getSuspendKeyword_1_1()); }

	'suspend' 

{ after(grammarAccess.getSuspendAccess().getSuspendKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Suspend__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suspend__Group_2__0__Impl
	rule__Suspend__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Suspend__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getAlternatives_2_0()); }
(rule__Suspend__Alternatives_2_0)*
{ after(grammarAccess.getSuspendAccess().getAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suspend__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suspend__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Suspend__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getStatementsAssignment_2_1()); }
(rule__Suspend__StatementsAssignment_2_1)?
{ after(grammarAccess.getSuspendAccess().getStatementsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Suspend__Group_2_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suspend__Group_2_0_0__0__Impl
	rule__Suspend__Group_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Suspend__Group_2_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getStatementsAssignment_2_0_0_0()); }
(rule__Suspend__StatementsAssignment_2_0_0_0)
{ after(grammarAccess.getSuspendAccess().getStatementsAssignment_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suspend__Group_2_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suspend__Group_2_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Suspend__Group_2_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getSemicolonKeyword_2_0_0_1()); }

	';' 

{ after(grammarAccess.getSuspendAccess().getSemicolonKeyword_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Trap__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trap__Group__0__Impl
	rule__Trap__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getAnnotationsAssignment_0()); }
(rule__Trap__AnnotationsAssignment_0)*
{ after(grammarAccess.getTrapAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trap__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trap__Group__1__Impl
	rule__Trap__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getTrapKeyword_1()); }

	'trap' 

{ after(grammarAccess.getTrapAccess().getTrapKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trap__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trap__Group__2__Impl
	rule__Trap__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getTrapSignalsAssignment_2()); }
(rule__Trap__TrapSignalsAssignment_2)
{ after(grammarAccess.getTrapAccess().getTrapSignalsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trap__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trap__Group__3__Impl
	rule__Trap__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getGroup_3()); }
(rule__Trap__Group_3__0)*
{ after(grammarAccess.getTrapAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trap__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trap__Group__4__Impl
	rule__Trap__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getInKeyword_4()); }

	'in' 

{ after(grammarAccess.getTrapAccess().getInKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trap__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trap__Group__5__Impl
	rule__Trap__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getGroup_5()); }
(rule__Trap__Group_5__0)
{ after(grammarAccess.getTrapAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trap__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trap__Group__6__Impl
	rule__Trap__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getTrapHandlerAssignment_6()); }
(rule__Trap__TrapHandlerAssignment_6)*
{ after(grammarAccess.getTrapAccess().getTrapHandlerAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trap__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trap__Group__7__Impl
	rule__Trap__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getEndKeyword_7()); }

	'end' 

{ after(grammarAccess.getTrapAccess().getEndKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trap__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trap__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getTrapKeyword_8()); }
(
	'trap' 
)?
{ after(grammarAccess.getTrapAccess().getTrapKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Trap__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trap__Group_3__0__Impl
	rule__Trap__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getTrapAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trap__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trap__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getTrapSignalsAssignment_3_1()); }
(rule__Trap__TrapSignalsAssignment_3_1)
{ after(grammarAccess.getTrapAccess().getTrapSignalsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Trap__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trap__Group_5__0__Impl
	rule__Trap__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getAlternatives_5_0()); }
(rule__Trap__Alternatives_5_0)*
{ after(grammarAccess.getTrapAccess().getAlternatives_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trap__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trap__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getStatementsAssignment_5_1()); }
(rule__Trap__StatementsAssignment_5_1)?
{ after(grammarAccess.getTrapAccess().getStatementsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Trap__Group_5_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trap__Group_5_0_0__0__Impl
	rule__Trap__Group_5_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__Group_5_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getStatementsAssignment_5_0_0_0()); }
(rule__Trap__StatementsAssignment_5_0_0_0)
{ after(grammarAccess.getTrapAccess().getStatementsAssignment_5_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trap__Group_5_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trap__Group_5_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__Group_5_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getSemicolonKeyword_5_0_0_1()); }

	';' 

{ after(grammarAccess.getTrapAccess().getSemicolonKeyword_5_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TrapHandler__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapHandler__Group__0__Impl
	rule__TrapHandler__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapHandler__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerAccess().getAnnotationsAssignment_0()); }
(rule__TrapHandler__AnnotationsAssignment_0)*
{ after(grammarAccess.getTrapHandlerAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapHandler__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapHandler__Group__1__Impl
	rule__TrapHandler__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapHandler__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerAccess().getHandleKeyword_1()); }

	'handle' 

{ after(grammarAccess.getTrapHandlerAccess().getHandleKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapHandler__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapHandler__Group__2__Impl
	rule__TrapHandler__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapHandler__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerAccess().getTrapExprAssignment_2()); }
(rule__TrapHandler__TrapExprAssignment_2)
{ after(grammarAccess.getTrapHandlerAccess().getTrapExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapHandler__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapHandler__Group__3__Impl
	rule__TrapHandler__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapHandler__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerAccess().getDoKeyword_3()); }

	'do' 

{ after(grammarAccess.getTrapHandlerAccess().getDoKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapHandler__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapHandler__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapHandler__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerAccess().getGroup_4()); }
(rule__TrapHandler__Group_4__0)
{ after(grammarAccess.getTrapHandlerAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TrapHandler__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapHandler__Group_4__0__Impl
	rule__TrapHandler__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapHandler__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerAccess().getAlternatives_4_0()); }
(rule__TrapHandler__Alternatives_4_0)*
{ after(grammarAccess.getTrapHandlerAccess().getAlternatives_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapHandler__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapHandler__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapHandler__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerAccess().getStatementsAssignment_4_1()); }
(rule__TrapHandler__StatementsAssignment_4_1)?
{ after(grammarAccess.getTrapHandlerAccess().getStatementsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TrapHandler__Group_4_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapHandler__Group_4_0_0__0__Impl
	rule__TrapHandler__Group_4_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapHandler__Group_4_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerAccess().getStatementsAssignment_4_0_0_0()); }
(rule__TrapHandler__StatementsAssignment_4_0_0_0)
{ after(grammarAccess.getTrapHandlerAccess().getStatementsAssignment_4_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapHandler__Group_4_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapHandler__Group_4_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapHandler__Group_4_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerAccess().getSemicolonKeyword_4_0_0_1()); }

	';' 

{ after(grammarAccess.getTrapHandlerAccess().getSemicolonKeyword_4_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Exec__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group__0__Impl
	rule__Exec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getAnnotationsAssignment_0()); }
(rule__Exec__AnnotationsAssignment_0)*
{ after(grammarAccess.getExecAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group__1__Impl
	rule__Exec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getAlternatives_1()); }
(rule__Exec__Alternatives_1)
{ after(grammarAccess.getExecAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group__2__Impl
	rule__Exec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getEndKeyword_2()); }

	'end' 

{ after(grammarAccess.getExecAccess().getEndKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getExecKeyword_3()); }
(
	'exec' 
)?
{ after(grammarAccess.getExecAccess().getExecKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Exec__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_1_0__0__Impl
	rule__Exec__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getExecKeyword_1_0_0()); }

	'exec' 

{ after(grammarAccess.getExecAccess().getExecKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_1_0__1__Impl
	rule__Exec__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getTaskAssignment_1_0_1()); }
(rule__Exec__TaskAssignment_1_0_1)
{ after(grammarAccess.getExecAccess().getTaskAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_1_0__2__Impl
	rule__Exec__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getLeftParenthesisKeyword_1_0_2()); }

	'(' 

{ after(grammarAccess.getExecAccess().getLeftParenthesisKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_1_0__3__Impl
	rule__Exec__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getGroup_1_0_3()); }
(rule__Exec__Group_1_0_3__0)?
{ after(grammarAccess.getExecAccess().getGroup_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group_1_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_1_0__4__Impl
	rule__Exec__Group_1_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_1_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getRightParenthesisKeyword_1_0_4()); }

	')' 

{ after(grammarAccess.getExecAccess().getRightParenthesisKeyword_1_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group_1_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_1_0__5__Impl
	rule__Exec__Group_1_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_1_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getLeftParenthesisKeyword_1_0_5()); }

	'(' 

{ after(grammarAccess.getExecAccess().getLeftParenthesisKeyword_1_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group_1_0__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_1_0__6__Impl
	rule__Exec__Group_1_0__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_1_0__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getGroup_1_0_6()); }
(rule__Exec__Group_1_0_6__0)?
{ after(grammarAccess.getExecAccess().getGroup_1_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group_1_0__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_1_0__7__Impl
	rule__Exec__Group_1_0__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_1_0__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getRightParenthesisKeyword_1_0_7()); }

	')' 

{ after(grammarAccess.getExecAccess().getRightParenthesisKeyword_1_0_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group_1_0__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_1_0__8__Impl
	rule__Exec__Group_1_0__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_1_0__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getReturnKeyword_1_0_8()); }

	'return' 

{ after(grammarAccess.getExecAccess().getReturnKeyword_1_0_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group_1_0__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_1_0__9__Impl
	rule__Exec__Group_1_0__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_1_0__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getRetSignalAssignment_1_0_9()); }
(rule__Exec__RetSignalAssignment_1_0_9)
{ after(grammarAccess.getExecAccess().getRetSignalAssignment_1_0_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group_1_0__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_1_0__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_1_0__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getGroup_1_0_10()); }
(rule__Exec__Group_1_0_10__0)?
{ after(grammarAccess.getExecAccess().getGroup_1_0_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Exec__Group_1_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_1_0_3__0__Impl
	rule__Exec__Group_1_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_1_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getVarsAssignment_1_0_3_0()); }
(rule__Exec__VarsAssignment_1_0_3_0)
{ after(grammarAccess.getExecAccess().getVarsAssignment_1_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group_1_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_1_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_1_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getGroup_1_0_3_1()); }
(rule__Exec__Group_1_0_3_1__0)*
{ after(grammarAccess.getExecAccess().getGroup_1_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Exec__Group_1_0_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_1_0_3_1__0__Impl
	rule__Exec__Group_1_0_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_1_0_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getCommaKeyword_1_0_3_1_0()); }

	',' 

{ after(grammarAccess.getExecAccess().getCommaKeyword_1_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group_1_0_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_1_0_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_1_0_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getVarsAssignment_1_0_3_1_1()); }
(rule__Exec__VarsAssignment_1_0_3_1_1)
{ after(grammarAccess.getExecAccess().getVarsAssignment_1_0_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Exec__Group_1_0_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_1_0_6__0__Impl
	rule__Exec__Group_1_0_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_1_0_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getKexpressionsAssignment_1_0_6_0()); }
(rule__Exec__KexpressionsAssignment_1_0_6_0)
{ after(grammarAccess.getExecAccess().getKexpressionsAssignment_1_0_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group_1_0_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_1_0_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_1_0_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getGroup_1_0_6_1()); }
(rule__Exec__Group_1_0_6_1__0)*
{ after(grammarAccess.getExecAccess().getGroup_1_0_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Exec__Group_1_0_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_1_0_6_1__0__Impl
	rule__Exec__Group_1_0_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_1_0_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getCommaKeyword_1_0_6_1_0()); }

	',' 

{ after(grammarAccess.getExecAccess().getCommaKeyword_1_0_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group_1_0_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_1_0_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_1_0_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getKexpressionsAssignment_1_0_6_1_1()); }
(rule__Exec__KexpressionsAssignment_1_0_6_1_1)
{ after(grammarAccess.getExecAccess().getKexpressionsAssignment_1_0_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Exec__Group_1_0_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_1_0_10__0__Impl
	rule__Exec__Group_1_0_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_1_0_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getDoKeyword_1_0_10_0()); }

	'do' 

{ after(grammarAccess.getExecAccess().getDoKeyword_1_0_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group_1_0_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_1_0_10__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_1_0_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getGroup_1_0_10_1()); }
(rule__Exec__Group_1_0_10_1__0)
{ after(grammarAccess.getExecAccess().getGroup_1_0_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Exec__Group_1_0_10_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_1_0_10_1__0__Impl
	rule__Exec__Group_1_0_10_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_1_0_10_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getAlternatives_1_0_10_1_0()); }
(rule__Exec__Alternatives_1_0_10_1_0)*
{ after(grammarAccess.getExecAccess().getAlternatives_1_0_10_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group_1_0_10_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_1_0_10_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_1_0_10_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getStatementsAssignment_1_0_10_1_1()); }
(rule__Exec__StatementsAssignment_1_0_10_1_1)?
{ after(grammarAccess.getExecAccess().getStatementsAssignment_1_0_10_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Exec__Group_1_0_10_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_1_0_10_1_0_0__0__Impl
	rule__Exec__Group_1_0_10_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_1_0_10_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getStatementsAssignment_1_0_10_1_0_0_0()); }
(rule__Exec__StatementsAssignment_1_0_10_1_0_0_0)
{ after(grammarAccess.getExecAccess().getStatementsAssignment_1_0_10_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group_1_0_10_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_1_0_10_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_1_0_10_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getSemicolonKeyword_1_0_10_1_0_0_1()); }

	';' 

{ after(grammarAccess.getExecAccess().getSemicolonKeyword_1_0_10_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Exec__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_1_1__0__Impl
	rule__Exec__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getExecKeyword_1_1_0()); }

	'exec' 

{ after(grammarAccess.getExecAccess().getExecKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getExecAccess().getExecCaseListAssignment_1_1_1()); }
(rule__Exec__ExecCaseListAssignment_1_1_1)
{ after(grammarAccess.getExecAccess().getExecCaseListAssignment_1_1_1()); }
)
(
{ before(grammarAccess.getExecAccess().getExecCaseListAssignment_1_1_1()); }
(rule__Exec__ExecCaseListAssignment_1_1_1)*
{ after(grammarAccess.getExecAccess().getExecCaseListAssignment_1_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExecCase__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group__0__Impl
	rule__ExecCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getAnnotationsAssignment_0()); }
(rule__ExecCase__AnnotationsAssignment_0)*
{ after(grammarAccess.getExecCaseAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecCase__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group__1__Impl
	rule__ExecCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getCaseKeyword_1()); }

	'case' 

{ after(grammarAccess.getExecCaseAccess().getCaseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecCase__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group__2__Impl
	rule__ExecCase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getTaskAssignment_2()); }
(rule__ExecCase__TaskAssignment_2)
{ after(grammarAccess.getExecCaseAccess().getTaskAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecCase__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group__3__Impl
	rule__ExecCase__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getExecCaseAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecCase__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group__4__Impl
	rule__ExecCase__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getGroup_4()); }
(rule__ExecCase__Group_4__0)?
{ after(grammarAccess.getExecCaseAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecCase__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group__5__Impl
	rule__ExecCase__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getExecCaseAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecCase__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group__6__Impl
	rule__ExecCase__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getLeftParenthesisKeyword_6()); }

	'(' 

{ after(grammarAccess.getExecCaseAccess().getLeftParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecCase__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group__7__Impl
	rule__ExecCase__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getGroup_7()); }
(rule__ExecCase__Group_7__0)?
{ after(grammarAccess.getExecCaseAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecCase__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group__8__Impl
	rule__ExecCase__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getRightParenthesisKeyword_8()); }

	')' 

{ after(grammarAccess.getExecCaseAccess().getRightParenthesisKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecCase__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group__9__Impl
	rule__ExecCase__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getReturnKeyword_9()); }

	'return' 

{ after(grammarAccess.getExecCaseAccess().getReturnKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecCase__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group__10__Impl
	rule__ExecCase__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getRetSignalAssignment_10()); }
(rule__ExecCase__RetSignalAssignment_10)
{ after(grammarAccess.getExecCaseAccess().getRetSignalAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecCase__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getGroup_11()); }
(rule__ExecCase__Group_11__0)?
{ after(grammarAccess.getExecCaseAccess().getGroup_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


























rule__ExecCase__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group_4__0__Impl
	rule__ExecCase__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getVarsAssignment_4_0()); }
(rule__ExecCase__VarsAssignment_4_0)
{ after(grammarAccess.getExecCaseAccess().getVarsAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecCase__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getGroup_4_1()); }
(rule__ExecCase__Group_4_1__0)*
{ after(grammarAccess.getExecCaseAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExecCase__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group_4_1__0__Impl
	rule__ExecCase__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getCommaKeyword_4_1_0()); }

	',' 

{ after(grammarAccess.getExecCaseAccess().getCommaKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecCase__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getVarsAssignment_4_1_1()); }
(rule__ExecCase__VarsAssignment_4_1_1)
{ after(grammarAccess.getExecCaseAccess().getVarsAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExecCase__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group_7__0__Impl
	rule__ExecCase__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getKexpressionsAssignment_7_0()); }
(rule__ExecCase__KexpressionsAssignment_7_0)
{ after(grammarAccess.getExecCaseAccess().getKexpressionsAssignment_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecCase__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getGroup_7_1()); }
(rule__ExecCase__Group_7_1__0)*
{ after(grammarAccess.getExecCaseAccess().getGroup_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExecCase__Group_7_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group_7_1__0__Impl
	rule__ExecCase__Group_7_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group_7_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getCommaKeyword_7_1_0()); }

	',' 

{ after(grammarAccess.getExecCaseAccess().getCommaKeyword_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecCase__Group_7_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group_7_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group_7_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getKexpressionsAssignment_7_1_1()); }
(rule__ExecCase__KexpressionsAssignment_7_1_1)
{ after(grammarAccess.getExecCaseAccess().getKexpressionsAssignment_7_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExecCase__Group_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group_11__0__Impl
	rule__ExecCase__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group_11__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getDoKeyword_11_0()); }

	'do' 

{ after(grammarAccess.getExecCaseAccess().getDoKeyword_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecCase__Group_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group_11__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getGroup_11_1()); }
(rule__ExecCase__Group_11_1__0)
{ after(grammarAccess.getExecCaseAccess().getGroup_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExecCase__Group_11_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group_11_1__0__Impl
	rule__ExecCase__Group_11_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group_11_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getAlternatives_11_1_0()); }
(rule__ExecCase__Alternatives_11_1_0)*
{ after(grammarAccess.getExecCaseAccess().getAlternatives_11_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecCase__Group_11_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group_11_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group_11_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getStatementsAssignment_11_1_1()); }
(rule__ExecCase__StatementsAssignment_11_1_1)?
{ after(grammarAccess.getExecCaseAccess().getStatementsAssignment_11_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExecCase__Group_11_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group_11_1_0_0__0__Impl
	rule__ExecCase__Group_11_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group_11_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getStatementsAssignment_11_1_0_0_0()); }
(rule__ExecCase__StatementsAssignment_11_1_0_0_0)
{ after(grammarAccess.getExecCaseAccess().getStatementsAssignment_11_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecCase__Group_11_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group_11_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group_11_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getSemicolonKeyword_11_1_0_0_1()); }

	';' 

{ after(grammarAccess.getExecCaseAccess().getSemicolonKeyword_11_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LocalSignalDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalSignalDecl__Group__0__Impl
	rule__LocalSignalDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getAnnotationsAssignment_0()); }
(rule__LocalSignalDecl__AnnotationsAssignment_0)*
{ after(grammarAccess.getLocalSignalDeclAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalSignalDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalSignalDecl__Group__1__Impl
	rule__LocalSignalDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getSignalKeyword_1()); }

	'signal' 

{ after(grammarAccess.getLocalSignalDeclAccess().getSignalKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalSignalDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalSignalDecl__Group__2__Impl
	rule__LocalSignalDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getSignalsAssignment_2()); }
(rule__LocalSignalDecl__SignalsAssignment_2)
{ after(grammarAccess.getLocalSignalDeclAccess().getSignalsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalSignalDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalSignalDecl__Group__3__Impl
	rule__LocalSignalDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getGroup_3()); }
(rule__LocalSignalDecl__Group_3__0)*
{ after(grammarAccess.getLocalSignalDeclAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalSignalDecl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalSignalDecl__Group__4__Impl
	rule__LocalSignalDecl__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getInKeyword_4()); }

	'in' 

{ after(grammarAccess.getLocalSignalDeclAccess().getInKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalSignalDecl__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalSignalDecl__Group__5__Impl
	rule__LocalSignalDecl__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getGroup_5()); }
(rule__LocalSignalDecl__Group_5__0)
{ after(grammarAccess.getLocalSignalDeclAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalSignalDecl__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalSignalDecl__Group__6__Impl
	rule__LocalSignalDecl__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getEndKeyword_6()); }

	'end' 

{ after(grammarAccess.getLocalSignalDeclAccess().getEndKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalSignalDecl__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalSignalDecl__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getSignalKeyword_7()); }
(
	'signal' 
)?
{ after(grammarAccess.getLocalSignalDeclAccess().getSignalKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__LocalSignalDecl__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalSignalDecl__Group_3__0__Impl
	rule__LocalSignalDecl__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getLocalSignalDeclAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalSignalDecl__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalSignalDecl__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getSignalsAssignment_3_1()); }
(rule__LocalSignalDecl__SignalsAssignment_3_1)
{ after(grammarAccess.getLocalSignalDeclAccess().getSignalsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LocalSignalDecl__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalSignalDecl__Group_5__0__Impl
	rule__LocalSignalDecl__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getAlternatives_5_0()); }
(rule__LocalSignalDecl__Alternatives_5_0)*
{ after(grammarAccess.getLocalSignalDeclAccess().getAlternatives_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalSignalDecl__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalSignalDecl__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getStatementsAssignment_5_1()); }
(rule__LocalSignalDecl__StatementsAssignment_5_1)?
{ after(grammarAccess.getLocalSignalDeclAccess().getStatementsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LocalSignalDecl__Group_5_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalSignalDecl__Group_5_0_0__0__Impl
	rule__LocalSignalDecl__Group_5_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__Group_5_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getStatementsAssignment_5_0_0_0()); }
(rule__LocalSignalDecl__StatementsAssignment_5_0_0_0)
{ after(grammarAccess.getLocalSignalDeclAccess().getStatementsAssignment_5_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalSignalDecl__Group_5_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalSignalDecl__Group_5_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__Group_5_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getSemicolonKeyword_5_0_0_1()); }

	';' 

{ after(grammarAccess.getLocalSignalDeclAccess().getSemicolonKeyword_5_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LocalVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariable__Group__0__Impl
	rule__LocalVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getAnnotationsAssignment_0()); }
(rule__LocalVariable__AnnotationsAssignment_0)*
{ after(grammarAccess.getLocalVariableAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariable__Group__1__Impl
	rule__LocalVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getVarKeyword_1()); }

	'var' 

{ after(grammarAccess.getLocalVariableAccess().getVarKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariable__Group__2__Impl
	rule__LocalVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getVarDeclsAssignment_2()); }
(rule__LocalVariable__VarDeclsAssignment_2)
{ after(grammarAccess.getLocalVariableAccess().getVarDeclsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariable__Group__3__Impl
	rule__LocalVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getGroup_3()); }
(rule__LocalVariable__Group_3__0)*
{ after(grammarAccess.getLocalVariableAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariable__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariable__Group__4__Impl
	rule__LocalVariable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getInKeyword_4()); }

	'in' 

{ after(grammarAccess.getLocalVariableAccess().getInKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariable__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariable__Group__5__Impl
	rule__LocalVariable__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getGroup_5()); }
(rule__LocalVariable__Group_5__0)
{ after(grammarAccess.getLocalVariableAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariable__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariable__Group__6__Impl
	rule__LocalVariable__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getEndKeyword_6()); }

	'end' 

{ after(grammarAccess.getLocalVariableAccess().getEndKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariable__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariable__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getVarKeyword_7()); }
(
	'var' 
)?
{ after(grammarAccess.getLocalVariableAccess().getVarKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__LocalVariable__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariable__Group_3__0__Impl
	rule__LocalVariable__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getLocalVariableAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariable__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariable__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getVarDeclsAssignment_3_1()); }
(rule__LocalVariable__VarDeclsAssignment_3_1)
{ after(grammarAccess.getLocalVariableAccess().getVarDeclsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LocalVariable__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariable__Group_5__0__Impl
	rule__LocalVariable__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getAlternatives_5_0()); }
(rule__LocalVariable__Alternatives_5_0)*
{ after(grammarAccess.getLocalVariableAccess().getAlternatives_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariable__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariable__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getStatementsAssignment_5_1()); }
(rule__LocalVariable__StatementsAssignment_5_1)?
{ after(grammarAccess.getLocalVariableAccess().getStatementsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LocalVariable__Group_5_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariable__Group_5_0_0__0__Impl
	rule__LocalVariable__Group_5_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group_5_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getStatementsAssignment_5_0_0_0()); }
(rule__LocalVariable__StatementsAssignment_5_0_0_0)
{ after(grammarAccess.getLocalVariableAccess().getStatementsAssignment_5_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariable__Group_5_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariable__Group_5_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group_5_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getSemicolonKeyword_5_0_0_1()); }

	';' 

{ after(grammarAccess.getLocalVariableAccess().getSemicolonKeyword_5_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModuleRenaming__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleRenaming__Group_1__0__Impl
	rule__ModuleRenaming__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleRenaming__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleRenamingAccess().getNewNameAssignment_1_0()); }
(rule__ModuleRenaming__NewNameAssignment_1_0)
{ after(grammarAccess.getModuleRenamingAccess().getNewNameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleRenaming__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleRenaming__Group_1__1__Impl
	rule__ModuleRenaming__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleRenaming__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleRenamingAccess().getSolidusKeyword_1_1()); }

	'/' 

{ after(grammarAccess.getModuleRenamingAccess().getSolidusKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleRenaming__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleRenaming__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleRenaming__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleRenamingAccess().getModuleAssignment_1_2()); }
(rule__ModuleRenaming__ModuleAssignment_1_2)
{ after(grammarAccess.getModuleRenamingAccess().getModuleAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Do__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do__Group__0__Impl
	rule__Do__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getAnnotationsAssignment_0()); }
(rule__Do__AnnotationsAssignment_0)*
{ after(grammarAccess.getDoAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do__Group__1__Impl
	rule__Do__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getDoKeyword_1()); }

	'do' 

{ after(grammarAccess.getDoAccess().getDoKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do__Group__2__Impl
	rule__Do__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getGroup_2()); }
(rule__Do__Group_2__0)
{ after(grammarAccess.getDoAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getAlternatives_3()); }
(rule__Do__Alternatives_3)
{ after(grammarAccess.getDoAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Do__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do__Group_2__0__Impl
	rule__Do__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getAlternatives_2_0()); }
(rule__Do__Alternatives_2_0)*
{ after(grammarAccess.getDoAccess().getAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getStatementsAssignment_2_1()); }
(rule__Do__StatementsAssignment_2_1)?
{ after(grammarAccess.getDoAccess().getStatementsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Do__Group_2_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do__Group_2_0_0__0__Impl
	rule__Do__Group_2_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Group_2_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getStatementsAssignment_2_0_0_0()); }
(rule__Do__StatementsAssignment_2_0_0_0)
{ after(grammarAccess.getDoAccess().getStatementsAssignment_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do__Group_2_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do__Group_2_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Group_2_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getSemicolonKeyword_2_0_0_1()); }

	';' 

{ after(grammarAccess.getDoAccess().getSemicolonKeyword_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Do__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do__Group_3_0__0__Impl
	rule__Do__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getEndingAnnotationsAssignment_3_0_0()); }
(rule__Do__EndingAnnotationsAssignment_3_0_0)*
{ after(grammarAccess.getDoAccess().getEndingAnnotationsAssignment_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do__Group_3_0__1__Impl
	rule__Do__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getUptoKeyword_3_0_1()); }

	'upto' 

{ after(grammarAccess.getDoAccess().getUptoKeyword_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do__Group_3_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do__Group_3_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Group_3_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getExpressionAssignment_3_0_2()); }
(rule__Do__ExpressionAssignment_3_0_2)
{ after(grammarAccess.getDoAccess().getExpressionAssignment_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Do__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do__Group_3_1__0__Impl
	rule__Do__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getEndingAnnotationsAssignment_3_1_0()); }
(rule__Do__EndingAnnotationsAssignment_3_1_0)*
{ after(grammarAccess.getDoAccess().getEndingAnnotationsAssignment_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do__Group_3_1__1__Impl
	rule__Do__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getWatchingKeyword_3_1_1()); }

	'watching' 

{ after(grammarAccess.getDoAccess().getWatchingKeyword_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do__Group_3_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do__Group_3_1__2__Impl
	rule__Do__Group_3_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Group_3_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getDelayAssignment_3_1_2()); }
(rule__Do__DelayAssignment_3_1_2)
{ after(grammarAccess.getDoAccess().getDelayAssignment_3_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do__Group_3_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do__Group_3_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Group_3_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getGroup_3_1_3()); }
(rule__Do__Group_3_1_3__0)?
{ after(grammarAccess.getDoAccess().getGroup_3_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Do__Group_3_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do__Group_3_1_3__0__Impl
	rule__Do__Group_3_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Group_3_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getTimeoutKeyword_3_1_3_0()); }

	'timeout' 

{ after(grammarAccess.getDoAccess().getTimeoutKeyword_3_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do__Group_3_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do__Group_3_1_3__1__Impl
	rule__Do__Group_3_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Group_3_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getGroup_3_1_3_1()); }
(rule__Do__Group_3_1_3_1__0)
{ after(grammarAccess.getDoAccess().getGroup_3_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do__Group_3_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do__Group_3_1_3__2__Impl
	rule__Do__Group_3_1_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Group_3_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getEndKeyword_3_1_3_2()); }

	'end' 

{ after(grammarAccess.getDoAccess().getEndKeyword_3_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do__Group_3_1_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do__Group_3_1_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Group_3_1_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getTimeoutKeyword_3_1_3_3()); }
(
	'timeout' 
)?
{ after(grammarAccess.getDoAccess().getTimeoutKeyword_3_1_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Do__Group_3_1_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do__Group_3_1_3_1__0__Impl
	rule__Do__Group_3_1_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Group_3_1_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getAlternatives_3_1_3_1_0()); }
(rule__Do__Alternatives_3_1_3_1_0)*
{ after(grammarAccess.getDoAccess().getAlternatives_3_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do__Group_3_1_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do__Group_3_1_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Group_3_1_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getWatchingStatementsAssignment_3_1_3_1_1()); }
(rule__Do__WatchingStatementsAssignment_3_1_3_1_1)?
{ after(grammarAccess.getDoAccess().getWatchingStatementsAssignment_3_1_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Do__Group_3_1_3_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do__Group_3_1_3_1_0_0__0__Impl
	rule__Do__Group_3_1_3_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Group_3_1_3_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getWatchingStatementsAssignment_3_1_3_1_0_0_0()); }
(rule__Do__WatchingStatementsAssignment_3_1_3_1_0_0_0)
{ after(grammarAccess.getDoAccess().getWatchingStatementsAssignment_3_1_3_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do__Group_3_1_3_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do__Group_3_1_3_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Group_3_1_3_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getSemicolonKeyword_3_1_3_1_0_0_1()); }

	';' 

{ after(grammarAccess.getDoAccess().getSemicolonKeyword_3_1_3_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnEmit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnEmit__Group__0__Impl
	rule__UnEmit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnEmit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnEmitAccess().getAnnotationsAssignment_0()); }
(rule__UnEmit__AnnotationsAssignment_0)*
{ after(grammarAccess.getUnEmitAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnEmit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnEmit__Group__1__Impl
	rule__UnEmit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnEmit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnEmitAccess().getUnemitKeyword_1()); }

	'unemit' 

{ after(grammarAccess.getUnEmitAccess().getUnemitKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnEmit__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnEmit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnEmit__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnEmitAccess().getSignalAssignment_2()); }
(rule__UnEmit__SignalAssignment_2)
{ after(grammarAccess.getUnEmitAccess().getSignalAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Set__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set__Group__0__Impl
	rule__Set__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAccess().getAnnotationsAssignment_0()); }
(rule__Set__AnnotationsAssignment_0)*
{ after(grammarAccess.getSetAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set__Group__1__Impl
	rule__Set__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAccess().getSetKeyword_1()); }

	'set' 

{ after(grammarAccess.getSetAccess().getSetKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set__Group__2__Impl
	rule__Set__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAccess().getSignalAssignment_2()); }
(rule__Set__SignalAssignment_2)
{ after(grammarAccess.getSetAccess().getSignalAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAccess().getGroup_3()); }
(rule__Set__Group_3__0)
{ after(grammarAccess.getSetAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Set__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set__Group_3__0__Impl
	rule__Set__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getSetAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set__Group_3__1__Impl
	rule__Set__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAccess().getExpressionAssignment_3_1()); }
(rule__Set__ExpressionAssignment_3_1)
{ after(grammarAccess.getSetAccess().getExpressionAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Set__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Set__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Set__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getSetAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Conditional__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group__0__Impl
	rule__Conditional__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getAnnotationsAssignment_0()); }
(rule__Conditional__AnnotationsAssignment_0)*
{ after(grammarAccess.getConditionalAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group__1__Impl
	rule__Conditional__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getIfKeyword_1()); }

	'if' 

{ after(grammarAccess.getConditionalAccess().getIfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group__2__Impl
	rule__Conditional__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getExpressionAssignment_2()); }
(rule__Conditional__ExpressionAssignment_2)
{ after(grammarAccess.getConditionalAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group__3__Impl
	rule__Conditional__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getGroup_3()); }
(rule__Conditional__Group_3__0)
{ after(grammarAccess.getConditionalAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getElseAssignment_4()); }
(rule__Conditional__ElseAssignment_4)?
{ after(grammarAccess.getConditionalAccess().getElseAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Conditional__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group_3__0__Impl
	rule__Conditional__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getThenKeyword_3_0()); }
(
	'then' 
)?
{ after(grammarAccess.getConditionalAccess().getThenKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group_3__1__Impl
	rule__Conditional__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getLeftCurlyBracketKeyword_3_1()); }

	'{' 

{ after(grammarAccess.getConditionalAccess().getLeftCurlyBracketKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group_3__2__Impl
	rule__Conditional__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getDeclarationsAssignment_3_2()); }
(rule__Conditional__DeclarationsAssignment_3_2)*
{ after(grammarAccess.getConditionalAccess().getDeclarationsAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group_3__3__Impl
	rule__Conditional__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getGroup_3_3()); }
(rule__Conditional__Group_3_3__0)
{ after(grammarAccess.getConditionalAccess().getGroup_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getRightCurlyBracketKeyword_3_4()); }

	'}' 

{ after(grammarAccess.getConditionalAccess().getRightCurlyBracketKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Conditional__Group_3_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group_3_3__0__Impl
	rule__Conditional__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group_3_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getAlternatives_3_3_0()); }
(rule__Conditional__Alternatives_3_3_0)*
{ after(grammarAccess.getConditionalAccess().getAlternatives_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group_3_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group_3_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getStatementsAssignment_3_3_1()); }
(rule__Conditional__StatementsAssignment_3_3_1)?
{ after(grammarAccess.getConditionalAccess().getStatementsAssignment_3_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Conditional__Group_3_3_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group_3_3_0_0__0__Impl
	rule__Conditional__Group_3_3_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group_3_3_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getStatementsAssignment_3_3_0_0_0()); }
(rule__Conditional__StatementsAssignment_3_3_0_0_0)
{ after(grammarAccess.getConditionalAccess().getStatementsAssignment_3_3_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group_3_3_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Conditional__Group_3_3_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group_3_3_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getSemicolonKeyword_3_3_0_0_1()); }

	';' 

{ after(grammarAccess.getConditionalAccess().getSemicolonKeyword_3_3_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ElseScope__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElseScope__Group__0__Impl
	rule__ElseScope__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseScope__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseScopeAccess().getElseScopeAction_0()); }
(

)
{ after(grammarAccess.getElseScopeAccess().getElseScopeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElseScope__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElseScope__Group__1__Impl
	rule__ElseScope__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseScope__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseScopeAccess().getAnnotationsAssignment_1()); }
(rule__ElseScope__AnnotationsAssignment_1)*
{ after(grammarAccess.getElseScopeAccess().getAnnotationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElseScope__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElseScope__Group__2__Impl
	rule__ElseScope__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseScope__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseScopeAccess().getElseKeyword_2()); }

	'else' 

{ after(grammarAccess.getElseScopeAccess().getElseKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElseScope__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElseScope__Group__3__Impl
	rule__ElseScope__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseScope__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseScopeAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getElseScopeAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElseScope__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElseScope__Group__4__Impl
	rule__ElseScope__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseScope__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseScopeAccess().getDeclarationsAssignment_4()); }
(rule__ElseScope__DeclarationsAssignment_4)*
{ after(grammarAccess.getElseScopeAccess().getDeclarationsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElseScope__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElseScope__Group__5__Impl
	rule__ElseScope__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseScope__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseScopeAccess().getGroup_5()); }
(rule__ElseScope__Group_5__0)
{ after(grammarAccess.getElseScopeAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElseScope__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElseScope__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseScope__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseScopeAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getElseScopeAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ElseScope__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElseScope__Group_5__0__Impl
	rule__ElseScope__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseScope__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseScopeAccess().getAlternatives_5_0()); }
(rule__ElseScope__Alternatives_5_0)*
{ after(grammarAccess.getElseScopeAccess().getAlternatives_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElseScope__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElseScope__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseScope__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseScopeAccess().getStatementsAssignment_5_1()); }
(rule__ElseScope__StatementsAssignment_5_1)?
{ after(grammarAccess.getElseScopeAccess().getStatementsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ElseScope__Group_5_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElseScope__Group_5_0_0__0__Impl
	rule__ElseScope__Group_5_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseScope__Group_5_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseScopeAccess().getStatementsAssignment_5_0_0_0()); }
(rule__ElseScope__StatementsAssignment_5_0_0_0)
{ after(grammarAccess.getElseScopeAccess().getStatementsAssignment_5_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElseScope__Group_5_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElseScope__Group_5_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseScope__Group_5_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseScopeAccess().getSemicolonKeyword_5_0_0_1()); }

	';' 

{ after(grammarAccess.getElseScopeAccess().getSemicolonKeyword_5_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Thread__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group__0__Impl
	rule__Thread__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getThreadAction_0()); }
(

)
{ after(grammarAccess.getThreadAccess().getThreadAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Thread__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getAlternatives_1()); }
(rule__Thread__Alternatives_1)
{ after(grammarAccess.getThreadAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Thread__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group_1_0__0__Impl
	rule__Thread__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getAnnotationsAssignment_1_0_0()); }
(rule__Thread__AnnotationsAssignment_1_0_0)*
{ after(grammarAccess.getThreadAccess().getAnnotationsAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Thread__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group_1_0__1__Impl
	rule__Thread__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getLeftCurlyBracketKeyword_1_0_1()); }

	'{' 

{ after(grammarAccess.getThreadAccess().getLeftCurlyBracketKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Thread__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group_1_0__2__Impl
	rule__Thread__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getDeclarationsAssignment_1_0_2()); }
(rule__Thread__DeclarationsAssignment_1_0_2)*
{ after(grammarAccess.getThreadAccess().getDeclarationsAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Thread__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group_1_0__3__Impl
	rule__Thread__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getGroup_1_0_3()); }
(rule__Thread__Group_1_0_3__0)
{ after(grammarAccess.getThreadAccess().getGroup_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Thread__Group_1_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group_1_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group_1_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getRightCurlyBracketKeyword_1_0_4()); }

	'}' 

{ after(grammarAccess.getThreadAccess().getRightCurlyBracketKeyword_1_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Thread__Group_1_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group_1_0_3__0__Impl
	rule__Thread__Group_1_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group_1_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getAlternatives_1_0_3_0()); }
(rule__Thread__Alternatives_1_0_3_0)*
{ after(grammarAccess.getThreadAccess().getAlternatives_1_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Thread__Group_1_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group_1_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group_1_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getStatementsAssignment_1_0_3_1()); }
(rule__Thread__StatementsAssignment_1_0_3_1)?
{ after(grammarAccess.getThreadAccess().getStatementsAssignment_1_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Thread__Group_1_0_3_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group_1_0_3_0_0__0__Impl
	rule__Thread__Group_1_0_3_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group_1_0_3_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getStatementsAssignment_1_0_3_0_0_0()); }
(rule__Thread__StatementsAssignment_1_0_3_0_0_0)
{ after(grammarAccess.getThreadAccess().getStatementsAssignment_1_0_3_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Thread__Group_1_0_3_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group_1_0_3_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group_1_0_3_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getSemicolonKeyword_1_0_3_0_0_1()); }

	';' 

{ after(grammarAccess.getThreadAccess().getSemicolonKeyword_1_0_3_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Thread__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group_1_1__0__Impl
	rule__Thread__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getAlternatives_1_1_0()); }
(rule__Thread__Alternatives_1_1_0)*
{ after(grammarAccess.getThreadAccess().getAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Thread__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getStatementsAssignment_1_1_1()); }
(rule__Thread__StatementsAssignment_1_1_1)?
{ after(grammarAccess.getThreadAccess().getStatementsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Thread__Group_1_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group_1_1_0_0__0__Impl
	rule__Thread__Group_1_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group_1_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getStatementsAssignment_1_1_0_0_0()); }
(rule__Thread__StatementsAssignment_1_1_0_0_0)
{ after(grammarAccess.getThreadAccess().getStatementsAssignment_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Thread__Group_1_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Thread__Group_1_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__Group_1_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getSemicolonKeyword_1_1_0_0_1()); }

	';' 

{ after(grammarAccess.getThreadAccess().getSemicolonKeyword_1_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parallel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parallel__Group__0__Impl
	rule__Parallel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParallelAccess().getAnnotationsAssignment_0()); }
(rule__Parallel__AnnotationsAssignment_0)*
{ after(grammarAccess.getParallelAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parallel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parallel__Group__1__Impl
	rule__Parallel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParallelAccess().getForkKeyword_1()); }

	'fork' 

{ after(grammarAccess.getParallelAccess().getForkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parallel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parallel__Group__2__Impl
	rule__Parallel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParallelAccess().getGroup_2()); }
(rule__Parallel__Group_2__0)
{ after(grammarAccess.getParallelAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parallel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parallel__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParallelAccess().getJoinKeyword_3()); }

	'join' 

{ after(grammarAccess.getParallelAccess().getJoinKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Parallel__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parallel__Group_2__0__Impl
	rule__Parallel__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParallelAccess().getThreadsAssignment_2_0()); }
(rule__Parallel__ThreadsAssignment_2_0)
{ after(grammarAccess.getParallelAccess().getThreadsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parallel__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parallel__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParallelAccess().getGroup_2_1()); }
(rule__Parallel__Group_2_1__0)*
{ after(grammarAccess.getParallelAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parallel__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parallel__Group_2_1__0__Impl
	rule__Parallel__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParallelAccess().getParKeyword_2_1_0()); }

	'par' 

{ after(grammarAccess.getParallelAccess().getParKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parallel__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parallel__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParallelAccess().getThreadsAssignment_2_1_1()); }
(rule__Parallel__ThreadsAssignment_2_1_1)
{ after(grammarAccess.getParallelAccess().getThreadsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ScopeStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeStatement__Group__0__Impl
	rule__ScopeStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeStatementAccess().getScopeStatementAction_0()); }
(

)
{ after(grammarAccess.getScopeStatementAccess().getScopeStatementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeStatement__Group__1__Impl
	rule__ScopeStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeStatementAccess().getAnnotationsAssignment_1()); }
(rule__ScopeStatement__AnnotationsAssignment_1)*
{ after(grammarAccess.getScopeStatementAccess().getAnnotationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeStatement__Group__2__Impl
	rule__ScopeStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeStatementAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getScopeStatementAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeStatement__Group__3__Impl
	rule__ScopeStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeStatementAccess().getDeclarationsAssignment_3()); }
(rule__ScopeStatement__DeclarationsAssignment_3)*
{ after(grammarAccess.getScopeStatementAccess().getDeclarationsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeStatement__Group__4__Impl
	rule__ScopeStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeStatementAccess().getGroup_4()); }
(rule__ScopeStatement__Group_4__0)
{ after(grammarAccess.getScopeStatementAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeStatementAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getScopeStatementAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ScopeStatement__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeStatement__Group_4__0__Impl
	rule__ScopeStatement__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeStatement__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeStatementAccess().getAlternatives_4_0()); }
(rule__ScopeStatement__Alternatives_4_0)*
{ after(grammarAccess.getScopeStatementAccess().getAlternatives_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeStatement__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeStatement__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeStatement__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeStatementAccess().getStatementsAssignment_4_1()); }
(rule__ScopeStatement__StatementsAssignment_4_1)?
{ after(grammarAccess.getScopeStatementAccess().getStatementsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ScopeStatement__Group_4_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeStatement__Group_4_0_0__0__Impl
	rule__ScopeStatement__Group_4_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeStatement__Group_4_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeStatementAccess().getStatementsAssignment_4_0_0_0()); }
(rule__ScopeStatement__StatementsAssignment_4_0_0_0)
{ after(grammarAccess.getScopeStatementAccess().getStatementsAssignment_4_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ScopeStatement__Group_4_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ScopeStatement__Group_4_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeStatement__Group_4_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeStatementAccess().getSemicolonKeyword_4_0_0_1()); }

	';' 

{ after(grammarAccess.getScopeStatementAccess().getSemicolonKeyword_4_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AtomicExpression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpression__Group_5__0__Impl
	rule__AtomicExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_5_0()); }

	'(' 

{ after(grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpression__Group_5__1__Impl
	rule__AtomicExpression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpressionAccess().getBooleanExpressionParserRuleCall_5_1()); }
	ruleBooleanExpression
{ after(grammarAccess.getAtomicExpressionAccess().getBooleanExpressionParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpression__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpression__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_5_2()); }

	')' 

{ after(grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AtomicValuedExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicValuedExpression__Group_2__0__Impl
	rule__AtomicValuedExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicValuedExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicValuedExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicValuedExpression__Group_2__1__Impl
	rule__AtomicValuedExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicValuedExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getValuedExpressionParserRuleCall_2_1()); }
	ruleValuedExpression
{ after(grammarAccess.getAtomicValuedExpressionAccess().getValuedExpressionParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicValuedExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicValuedExpression__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicValuedExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getAtomicValuedExpressionAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Module__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__0__Impl
	rule__Module__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getAnnotationsAssignment_0()); }
(rule__Module__AnnotationsAssignment_0)*
{ after(grammarAccess.getModuleAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__1__Impl
	rule__Module__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getModuleKeyword_1()); }

	'module' 

{ after(grammarAccess.getModuleAccess().getModuleKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__2__Impl
	rule__Module__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNameAssignment_2()); }
(rule__Module__NameAssignment_2)
{ after(grammarAccess.getModuleAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__3__Impl
	rule__Module__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getModuleAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__4__Impl
	rule__Module__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getAlternatives_4()); }
(rule__Module__Alternatives_4)*
{ after(grammarAccess.getModuleAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__5__Impl
	rule__Module__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getGroup_5()); }
(rule__Module__Group_5__0)
{ after(grammarAccess.getModuleAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getAlternatives_6()); }
(rule__Module__Alternatives_6)
{ after(grammarAccess.getModuleAccess().getAlternatives_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Module__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_5__0__Impl
	rule__Module__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getGroup_5_0()); }
(rule__Module__Group_5_0__0)*
{ after(grammarAccess.getModuleAccess().getGroup_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getStatementsAssignment_5_1()); }
(rule__Module__StatementsAssignment_5_1)?
{ after(grammarAccess.getModuleAccess().getStatementsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Module__Group_5_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_5_0__0__Impl
	rule__Module__Group_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_5_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getStatementsAssignment_5_0_0()); }
(rule__Module__StatementsAssignment_5_0_0)
{ after(grammarAccess.getModuleAccess().getStatementsAssignment_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_5_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_5_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_5_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getSemicolonKeyword_5_0_1()); }

	';' 

{ after(grammarAccess.getModuleAccess().getSemicolonKeyword_5_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Module__Group_6_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_6_0__0__Impl
	rule__Module__Group_6_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_6_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getEndKeyword_6_0_0()); }

	'end' 

{ after(grammarAccess.getModuleAccess().getEndKeyword_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_6_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group_6_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_6_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getModuleKeyword_6_0_1()); }

	'module' 

{ after(grammarAccess.getModuleAccess().getModuleKeyword_6_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeIdentifier__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeIdentifier__Group_2__0__Impl
	rule__TypeIdentifier__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getCombineKeyword_2_0()); }

	'combine' 

{ after(grammarAccess.getTypeIdentifierAccess().getCombineKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeIdentifier__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeIdentifier__Group_2__1__Impl
	rule__TypeIdentifier__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getAlternatives_2_1()); }
(rule__TypeIdentifier__Alternatives_2_1)
{ after(grammarAccess.getTypeIdentifierAccess().getAlternatives_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeIdentifier__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeIdentifier__Group_2__2__Impl
	rule__TypeIdentifier__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getWithKeyword_2_2()); }

	'with' 

{ after(grammarAccess.getTypeIdentifierAccess().getWithKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeIdentifier__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeIdentifier__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getOperatorAssignment_2_3()); }
(rule__TypeIdentifier__OperatorAssignment_2_3)
{ after(grammarAccess.getTypeIdentifierAccess().getOperatorAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TypeIdentifier__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeIdentifier__Group_3__0__Impl
	rule__TypeIdentifier__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getEsterelTypeAction_3_0()); }
(

)
{ after(grammarAccess.getTypeIdentifierAccess().getEsterelTypeAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeIdentifier__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeIdentifier__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getEstTypeAssignment_3_1()); }
(rule__TypeIdentifier__EstTypeAssignment_3_1)
{ after(grammarAccess.getTypeIdentifierAccess().getEstTypeAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDecl__Group__0__Impl
	rule__TypeDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclAccess().getAnnotationsAssignment_0()); }
(rule__TypeDecl__AnnotationsAssignment_0)*
{ after(grammarAccess.getTypeDeclAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDecl__Group__1__Impl
	rule__TypeDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclAccess().getTypeKeyword_1()); }

	'type' 

{ after(grammarAccess.getTypeDeclAccess().getTypeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDecl__Group__2__Impl
	rule__TypeDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclAccess().getTypesAssignment_2()); }
(rule__TypeDecl__TypesAssignment_2)
{ after(grammarAccess.getTypeDeclAccess().getTypesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDecl__Group__3__Impl
	rule__TypeDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclAccess().getGroup_3()); }
(rule__TypeDecl__Group_3__0)*
{ after(grammarAccess.getTypeDeclAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDecl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDecl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getTypeDeclAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TypeDecl__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDecl__Group_3__0__Impl
	rule__TypeDecl__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getTypeDeclAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDecl__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDecl__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclAccess().getTypesAssignment_3_1()); }
(rule__TypeDecl__TypesAssignment_3_1)
{ after(grammarAccess.getTypeDeclAccess().getTypesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstantDecls__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDecls__Group__0__Impl
	rule__ConstantDecls__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecls__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclsAccess().getAnnotationsAssignment_0()); }
(rule__ConstantDecls__AnnotationsAssignment_0)*
{ after(grammarAccess.getConstantDeclsAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDecls__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDecls__Group__1__Impl
	rule__ConstantDecls__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecls__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclsAccess().getConstantKeyword_1()); }

	'constant' 

{ after(grammarAccess.getConstantDeclsAccess().getConstantKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDecls__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDecls__Group__2__Impl
	rule__ConstantDecls__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecls__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclsAccess().getConstantsAssignment_2()); }
(rule__ConstantDecls__ConstantsAssignment_2)
{ after(grammarAccess.getConstantDeclsAccess().getConstantsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDecls__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDecls__Group__3__Impl
	rule__ConstantDecls__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecls__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclsAccess().getGroup_3()); }
(rule__ConstantDecls__Group_3__0)*
{ after(grammarAccess.getConstantDeclsAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDecls__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDecls__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecls__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclsAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getConstantDeclsAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ConstantDecls__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDecls__Group_3__0__Impl
	rule__ConstantDecls__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecls__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclsAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getConstantDeclsAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDecls__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDecls__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecls__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclsAccess().getConstantsAssignment_3_1()); }
(rule__ConstantDecls__ConstantsAssignment_3_1)
{ after(grammarAccess.getConstantDeclsAccess().getConstantsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OneTypeConstantDecls__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneTypeConstantDecls__Group__0__Impl
	rule__OneTypeConstantDecls__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OneTypeConstantDecls__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclsAccess().getConstantsAssignment_0()); }
(rule__OneTypeConstantDecls__ConstantsAssignment_0)
{ after(grammarAccess.getOneTypeConstantDeclsAccess().getConstantsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneTypeConstantDecls__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneTypeConstantDecls__Group__1__Impl
	rule__OneTypeConstantDecls__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OneTypeConstantDecls__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclsAccess().getGroup_1()); }
(rule__OneTypeConstantDecls__Group_1__0)*
{ after(grammarAccess.getOneTypeConstantDeclsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneTypeConstantDecls__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneTypeConstantDecls__Group__2__Impl
	rule__OneTypeConstantDecls__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OneTypeConstantDecls__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclsAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getOneTypeConstantDeclsAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneTypeConstantDecls__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneTypeConstantDecls__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OneTypeConstantDecls__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclsAccess().getTypeAssignment_3()); }
(rule__OneTypeConstantDecls__TypeAssignment_3)
{ after(grammarAccess.getOneTypeConstantDeclsAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OneTypeConstantDecls__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneTypeConstantDecls__Group_1__0__Impl
	rule__OneTypeConstantDecls__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OneTypeConstantDecls__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclsAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getOneTypeConstantDeclsAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneTypeConstantDecls__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneTypeConstantDecls__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OneTypeConstantDecls__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclsAccess().getConstantsAssignment_1_1()); }
(rule__OneTypeConstantDecls__ConstantsAssignment_1_1)
{ after(grammarAccess.getOneTypeConstantDeclsAccess().getConstantsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__0__Impl
	rule__Constant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getConstantAction_0()); }
(

)
{ after(grammarAccess.getConstantAccess().getConstantAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__1__Impl
	rule__Constant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getNameAssignment_1()); }
(rule__Constant__NameAssignment_1)
{ after(grammarAccess.getConstantAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getGroup_2()); }
(rule__Constant__Group_2__0)?
{ after(grammarAccess.getConstantAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Constant__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group_2__0__Impl
	rule__Constant__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getEqualsSignKeyword_2_0()); }

	'=' 

{ after(grammarAccess.getConstantAccess().getEqualsSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getValueAssignment_2_1()); }
(rule__Constant__ValueAssignment_2_1)
{ after(grammarAccess.getConstantAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDecl__Group__0__Impl
	rule__FunctionDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclAccess().getAnnotationsAssignment_0()); }
(rule__FunctionDecl__AnnotationsAssignment_0)*
{ after(grammarAccess.getFunctionDeclAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDecl__Group__1__Impl
	rule__FunctionDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclAccess().getFunctionKeyword_1()); }

	'function' 

{ after(grammarAccess.getFunctionDeclAccess().getFunctionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDecl__Group__2__Impl
	rule__FunctionDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclAccess().getFunctionsAssignment_2()); }
(rule__FunctionDecl__FunctionsAssignment_2)
{ after(grammarAccess.getFunctionDeclAccess().getFunctionsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDecl__Group__3__Impl
	rule__FunctionDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclAccess().getGroup_3()); }
(rule__FunctionDecl__Group_3__0)*
{ after(grammarAccess.getFunctionDeclAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDecl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDecl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getFunctionDeclAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FunctionDecl__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDecl__Group_3__0__Impl
	rule__FunctionDecl__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getFunctionDeclAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDecl__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDecl__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclAccess().getFunctionsAssignment_3_1()); }
(rule__FunctionDecl__FunctionsAssignment_3_1)
{ after(grammarAccess.getFunctionDeclAccess().getFunctionsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameAssignment_0()); }
(rule__Function__NameAssignment_0)
{ after(grammarAccess.getFunctionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getGroup_2()); }
(rule__Function__Group_2__0)?
{ after(grammarAccess.getFunctionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__4__Impl
	rule__Function__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getFunctionAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getTypeAssignment_5()); }
(rule__Function__TypeAssignment_5)
{ after(grammarAccess.getFunctionAccess().getTypeAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Function__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_2__0__Impl
	rule__Function__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getIdListAssignment_2_0()); }
(rule__Function__IdListAssignment_2_0)
{ after(grammarAccess.getFunctionAccess().getIdListAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getGroup_2_1()); }
(rule__Function__Group_2_1__0)*
{ after(grammarAccess.getFunctionAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_2_1__0__Impl
	rule__Function__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getFunctionAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getIdListAssignment_2_1_1()); }
(rule__Function__IdListAssignment_2_1_1)
{ after(grammarAccess.getFunctionAccess().getIdListAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProcedureDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcedureDecl__Group__0__Impl
	rule__ProcedureDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureDeclAccess().getAnnotationsAssignment_0()); }
(rule__ProcedureDecl__AnnotationsAssignment_0)*
{ after(grammarAccess.getProcedureDeclAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcedureDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcedureDecl__Group__1__Impl
	rule__ProcedureDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureDeclAccess().getProcedureKeyword_1()); }

	'procedure' 

{ after(grammarAccess.getProcedureDeclAccess().getProcedureKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcedureDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcedureDecl__Group__2__Impl
	rule__ProcedureDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureDeclAccess().getProceduresAssignment_2()); }
(rule__ProcedureDecl__ProceduresAssignment_2)
{ after(grammarAccess.getProcedureDeclAccess().getProceduresAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcedureDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcedureDecl__Group__3__Impl
	rule__ProcedureDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureDeclAccess().getGroup_3()); }
(rule__ProcedureDecl__Group_3__0)*
{ after(grammarAccess.getProcedureDeclAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcedureDecl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcedureDecl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureDecl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureDeclAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getProcedureDeclAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ProcedureDecl__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcedureDecl__Group_3__0__Impl
	rule__ProcedureDecl__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureDecl__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureDeclAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getProcedureDeclAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcedureDecl__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcedureDecl__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureDecl__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureDeclAccess().getProceduresAssignment_3_1()); }
(rule__ProcedureDecl__ProceduresAssignment_3_1)
{ after(grammarAccess.getProcedureDeclAccess().getProceduresAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Procedure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group__0__Impl
	rule__Procedure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getNameAssignment_0()); }
(rule__Procedure__NameAssignment_0)
{ after(grammarAccess.getProcedureAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group__1__Impl
	rule__Procedure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getProcedureAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group__2__Impl
	rule__Procedure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getGroup_2()); }
(rule__Procedure__Group_2__0)?
{ after(grammarAccess.getProcedureAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group__3__Impl
	rule__Procedure__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getProcedureAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group__4__Impl
	rule__Procedure__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getProcedureAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group__5__Impl
	rule__Procedure__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getGroup_5()); }
(rule__Procedure__Group_5__0)?
{ after(grammarAccess.getProcedureAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getProcedureAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Procedure__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group_2__0__Impl
	rule__Procedure__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getVariablesAssignment_2_0()); }
(rule__Procedure__VariablesAssignment_2_0)
{ after(grammarAccess.getProcedureAccess().getVariablesAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getGroup_2_1()); }
(rule__Procedure__Group_2_1__0)*
{ after(grammarAccess.getProcedureAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Procedure__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group_2_1__0__Impl
	rule__Procedure__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getProcedureAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getVariablesAssignment_2_1_1()); }
(rule__Procedure__VariablesAssignment_2_1_1)
{ after(grammarAccess.getProcedureAccess().getVariablesAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Procedure__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group_5__0__Impl
	rule__Procedure__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getExpressionsAssignment_5_0()); }
(rule__Procedure__ExpressionsAssignment_5_0)
{ after(grammarAccess.getProcedureAccess().getExpressionsAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getGroup_5_1()); }
(rule__Procedure__Group_5_1__0)*
{ after(grammarAccess.getProcedureAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Procedure__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group_5_1__0__Impl
	rule__Procedure__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getCommaKeyword_5_1_0()); }

	',' 

{ after(grammarAccess.getProcedureAccess().getCommaKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getExpressionsAssignment_5_1_1()); }
(rule__Procedure__ExpressionsAssignment_5_1_1)
{ after(grammarAccess.getProcedureAccess().getExpressionsAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TaskDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskDecl__Group__0__Impl
	rule__TaskDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclAccess().getAnnotationsAssignment_0()); }
(rule__TaskDecl__AnnotationsAssignment_0)*
{ after(grammarAccess.getTaskDeclAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskDecl__Group__1__Impl
	rule__TaskDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclAccess().getTaskKeyword_1()); }

	'task' 

{ after(grammarAccess.getTaskDeclAccess().getTaskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskDecl__Group__2__Impl
	rule__TaskDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclAccess().getTasksAssignment_2()); }
(rule__TaskDecl__TasksAssignment_2)
{ after(grammarAccess.getTaskDeclAccess().getTasksAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskDecl__Group__3__Impl
	rule__TaskDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclAccess().getGroup_3()); }
(rule__TaskDecl__Group_3__0)*
{ after(grammarAccess.getTaskDeclAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskDecl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskDecl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDecl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getTaskDeclAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TaskDecl__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskDecl__Group_3__0__Impl
	rule__TaskDecl__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDecl__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getTaskDeclAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskDecl__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskDecl__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDecl__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclAccess().getTasksAssignment_3_1()); }
(rule__TaskDecl__TasksAssignment_3_1)
{ after(grammarAccess.getTaskDeclAccess().getTasksAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Task__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__0__Impl
	rule__Task__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getNameAssignment_0()); }
(rule__Task__NameAssignment_0)
{ after(grammarAccess.getTaskAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__1__Impl
	rule__Task__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getTaskAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__2__Impl
	rule__Task__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getGroup_2()); }
(rule__Task__Group_2__0)?
{ after(grammarAccess.getTaskAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__3__Impl
	rule__Task__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getTaskAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__4__Impl
	rule__Task__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getTaskAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__5__Impl
	rule__Task__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getGroup_5()); }
(rule__Task__Group_5__0)?
{ after(grammarAccess.getTaskAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getTaskAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Task__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_2__0__Impl
	rule__Task__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getVariablesAssignment_2_0()); }
(rule__Task__VariablesAssignment_2_0)
{ after(grammarAccess.getTaskAccess().getVariablesAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getGroup_2_1()); }
(rule__Task__Group_2_1__0)*
{ after(grammarAccess.getTaskAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Task__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_2_1__0__Impl
	rule__Task__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getTaskAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getVariablesAssignment_2_1_1()); }
(rule__Task__VariablesAssignment_2_1_1)
{ after(grammarAccess.getTaskAccess().getVariablesAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Task__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_5__0__Impl
	rule__Task__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getExpressionsAssignment_5_0()); }
(rule__Task__ExpressionsAssignment_5_0)
{ after(grammarAccess.getTaskAccess().getExpressionsAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getGroup_5_1()); }
(rule__Task__Group_5_1__0)*
{ after(grammarAccess.getTaskAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Task__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_5_1__0__Impl
	rule__Task__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getCommaKeyword_5_1_0()); }

	',' 

{ after(grammarAccess.getTaskAccess().getCommaKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getExpressionsAssignment_5_1_1()); }
(rule__Task__ExpressionsAssignment_5_1_1)
{ after(grammarAccess.getTaskAccess().getExpressionsAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfaceSignalDecl__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_0__0__Impl
	rule__InterfaceSignalDecl__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getInputAction_0_0()); }
(

)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getInputAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_0__1__Impl
	rule__InterfaceSignalDecl__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getAnnotationsAssignment_0_1()); }
(rule__InterfaceSignalDecl__AnnotationsAssignment_0_1)*
{ after(grammarAccess.getInterfaceSignalDeclAccess().getAnnotationsAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_0__2__Impl
	rule__InterfaceSignalDecl__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getInputKeyword_0_2()); }

	'input' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getInputKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_0__3__Impl
	rule__InterfaceSignalDecl__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_0_3()); }
(rule__InterfaceSignalDecl__SignalsAssignment_0_3)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_0__4__Impl
	rule__InterfaceSignalDecl__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getGroup_0_4()); }
(rule__InterfaceSignalDecl__Group_0_4__0)*
{ after(grammarAccess.getInterfaceSignalDeclAccess().getGroup_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSemicolonKeyword_0_5()); }

	';' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getSemicolonKeyword_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__InterfaceSignalDecl__Group_0_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_0_4__0__Impl
	rule__InterfaceSignalDecl__Group_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_0_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getCommaKeyword_0_4_0()); }

	',' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getCommaKeyword_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_0_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_0_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_0_4_1()); }
(rule__InterfaceSignalDecl__SignalsAssignment_0_4_1)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_0_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfaceSignalDecl__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_1__0__Impl
	rule__InterfaceSignalDecl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getOutputAction_1_0()); }
(

)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getOutputAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_1__1__Impl
	rule__InterfaceSignalDecl__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getAnnotationsAssignment_1_1()); }
(rule__InterfaceSignalDecl__AnnotationsAssignment_1_1)*
{ after(grammarAccess.getInterfaceSignalDeclAccess().getAnnotationsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_1__2__Impl
	rule__InterfaceSignalDecl__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getOutputKeyword_1_2()); }

	'output' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getOutputKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_1__3__Impl
	rule__InterfaceSignalDecl__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_1_3()); }
(rule__InterfaceSignalDecl__SignalsAssignment_1_3)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_1__4__Impl
	rule__InterfaceSignalDecl__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getGroup_1_4()); }
(rule__InterfaceSignalDecl__Group_1_4__0)*
{ after(grammarAccess.getInterfaceSignalDeclAccess().getGroup_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSemicolonKeyword_1_5()); }

	';' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getSemicolonKeyword_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__InterfaceSignalDecl__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_1_4__0__Impl
	rule__InterfaceSignalDecl__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getCommaKeyword_1_4_0()); }

	',' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getCommaKeyword_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_1_4_1()); }
(rule__InterfaceSignalDecl__SignalsAssignment_1_4_1)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfaceSignalDecl__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_2__0__Impl
	rule__InterfaceSignalDecl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getInputOutputAction_2_0()); }
(

)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getInputOutputAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_2__1__Impl
	rule__InterfaceSignalDecl__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getAnnotationsAssignment_2_1()); }
(rule__InterfaceSignalDecl__AnnotationsAssignment_2_1)*
{ after(grammarAccess.getInterfaceSignalDeclAccess().getAnnotationsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_2__2__Impl
	rule__InterfaceSignalDecl__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getInputoutputKeyword_2_2()); }

	'inputoutput' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getInputoutputKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_2__3__Impl
	rule__InterfaceSignalDecl__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_2_3()); }
(rule__InterfaceSignalDecl__SignalsAssignment_2_3)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_2__4__Impl
	rule__InterfaceSignalDecl__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getGroup_2_4()); }
(rule__InterfaceSignalDecl__Group_2_4__0)*
{ after(grammarAccess.getInterfaceSignalDeclAccess().getGroup_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSemicolonKeyword_2_5()); }

	';' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getSemicolonKeyword_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__InterfaceSignalDecl__Group_2_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_2_4__0__Impl
	rule__InterfaceSignalDecl__Group_2_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_2_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getCommaKeyword_2_4_0()); }

	',' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getCommaKeyword_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_2_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_2_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_2_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_2_4_1()); }
(rule__InterfaceSignalDecl__SignalsAssignment_2_4_1)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_2_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfaceSignalDecl__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_3__0__Impl
	rule__InterfaceSignalDecl__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getReturnAction_3_0()); }
(

)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getReturnAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_3__1__Impl
	rule__InterfaceSignalDecl__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getAnnotationsAssignment_3_1()); }
(rule__InterfaceSignalDecl__AnnotationsAssignment_3_1)*
{ after(grammarAccess.getInterfaceSignalDeclAccess().getAnnotationsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_3__2__Impl
	rule__InterfaceSignalDecl__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getReturnKeyword_3_2()); }

	'return' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getReturnKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_3__3__Impl
	rule__InterfaceSignalDecl__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_3_3()); }
(rule__InterfaceSignalDecl__SignalsAssignment_3_3)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_3__4__Impl
	rule__InterfaceSignalDecl__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getGroup_3_4()); }
(rule__InterfaceSignalDecl__Group_3_4__0)*
{ after(grammarAccess.getInterfaceSignalDeclAccess().getGroup_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_3__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_3__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_3__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSemicolonKeyword_3_5()); }

	';' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getSemicolonKeyword_3_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__InterfaceSignalDecl__Group_3_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_3_4__0__Impl
	rule__InterfaceSignalDecl__Group_3_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_3_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getCommaKeyword_3_4_0()); }

	',' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getCommaKeyword_3_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_3_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_3_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_3_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_3_4_1()); }
(rule__InterfaceSignalDecl__SignalsAssignment_3_4_1)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_3_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ISignal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group__0__Impl
	rule__ISignal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getISignalAction_0()); }
(

)
{ after(grammarAccess.getISignalAccess().getISignalAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group__1__Impl
	rule__ISignal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getNameAssignment_1()); }
(rule__ISignal__NameAssignment_1)
{ after(grammarAccess.getISignalAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getAlternatives_2()); }
(rule__ISignal__Alternatives_2)?
{ after(grammarAccess.getISignalAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ISignal__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_2_0__0__Impl
	rule__ISignal__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getColonKeyword_2_0_0()); }

	':' 

{ after(grammarAccess.getISignalAccess().getColonKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getAlternatives_2_0_1()); }
(rule__ISignal__Alternatives_2_0_1)
{ after(grammarAccess.getISignalAccess().getAlternatives_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ISignal__Group_2_0_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_2_0_1_2__0__Impl
	rule__ISignal__Group_2_0_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_2_0_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getCombineKeyword_2_0_1_2_0()); }

	'combine' 

{ after(grammarAccess.getISignalAccess().getCombineKeyword_2_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group_2_0_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_2_0_1_2__1__Impl
	rule__ISignal__Group_2_0_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_2_0_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getAlternatives_2_0_1_2_1()); }
(rule__ISignal__Alternatives_2_0_1_2_1)
{ after(grammarAccess.getISignalAccess().getAlternatives_2_0_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group_2_0_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_2_0_1_2__2__Impl
	rule__ISignal__Group_2_0_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_2_0_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getWithKeyword_2_0_1_2_2()); }

	'with' 

{ after(grammarAccess.getISignalAccess().getWithKeyword_2_0_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group_2_0_1_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_2_0_1_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_2_0_1_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getAlternatives_2_0_1_2_3()); }
(rule__ISignal__Alternatives_2_0_1_2_3)
{ after(grammarAccess.getISignalAccess().getAlternatives_2_0_1_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ISignal__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_2_1__0__Impl
	rule__ISignal__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getLeftParenthesisKeyword_2_1_0()); }

	'(' 

{ after(grammarAccess.getISignalAccess().getLeftParenthesisKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_2_1__1__Impl
	rule__ISignal__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getAlternatives_2_1_1()); }
(rule__ISignal__Alternatives_2_1_1)
{ after(grammarAccess.getISignalAccess().getAlternatives_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getRightParenthesisKeyword_2_1_2()); }

	')' 

{ after(grammarAccess.getISignalAccess().getRightParenthesisKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ISignal__Group_2_1_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_2_1_1_2__0__Impl
	rule__ISignal__Group_2_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_2_1_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getCombineKeyword_2_1_1_2_0()); }

	'combine' 

{ after(grammarAccess.getISignalAccess().getCombineKeyword_2_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group_2_1_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_2_1_1_2__1__Impl
	rule__ISignal__Group_2_1_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_2_1_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getAlternatives_2_1_1_2_1()); }
(rule__ISignal__Alternatives_2_1_1_2_1)
{ after(grammarAccess.getISignalAccess().getAlternatives_2_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group_2_1_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_2_1_1_2__2__Impl
	rule__ISignal__Group_2_1_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_2_1_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getWithKeyword_2_1_1_2_2()); }

	'with' 

{ after(grammarAccess.getISignalAccess().getWithKeyword_2_1_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group_2_1_1_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_2_1_1_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_2_1_1_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getAlternatives_2_1_1_2_3()); }
(rule__ISignal__Alternatives_2_1_1_2_3)
{ after(grammarAccess.getISignalAccess().getAlternatives_2_1_1_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ISignal__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_2_2__0__Impl
	rule__ISignal__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getColonEqualsSignKeyword_2_2_0()); }

	':=' 

{ after(grammarAccess.getISignalAccess().getColonEqualsSignKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_2_2__1__Impl
	rule__ISignal__Group_2_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getExpressionAssignment_2_2_1()); }
(rule__ISignal__ExpressionAssignment_2_2_1)
{ after(grammarAccess.getISignalAccess().getExpressionAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group_2_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_2_2__2__Impl
	rule__ISignal__Group_2_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_2_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getColonKeyword_2_2_2()); }

	':' 

{ after(grammarAccess.getISignalAccess().getColonKeyword_2_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group_2_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_2_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_2_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getAlternatives_2_2_3()); }
(rule__ISignal__Alternatives_2_2_3)
{ after(grammarAccess.getISignalAccess().getAlternatives_2_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ISignal__Group_2_2_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_2_2_3_2__0__Impl
	rule__ISignal__Group_2_2_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_2_2_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getCombineKeyword_2_2_3_2_0()); }

	'combine' 

{ after(grammarAccess.getISignalAccess().getCombineKeyword_2_2_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group_2_2_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_2_2_3_2__1__Impl
	rule__ISignal__Group_2_2_3_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_2_2_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getAlternatives_2_2_3_2_1()); }
(rule__ISignal__Alternatives_2_2_3_2_1)
{ after(grammarAccess.getISignalAccess().getAlternatives_2_2_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group_2_2_3_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_2_2_3_2__2__Impl
	rule__ISignal__Group_2_2_3_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_2_2_3_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getWithKeyword_2_2_3_2_2()); }

	'with' 

{ after(grammarAccess.getISignalAccess().getWithKeyword_2_2_3_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group_2_2_3_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_2_2_3_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_2_2_3_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getAlternatives_2_2_3_2_3()); }
(rule__ISignal__Alternatives_2_2_3_2_3)
{ after(grammarAccess.getISignalAccess().getAlternatives_2_2_3_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SensorDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorDecl__Group__0__Impl
	rule__SensorDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDeclAccess().getAnnotationsAssignment_0()); }
(rule__SensorDecl__AnnotationsAssignment_0)*
{ after(grammarAccess.getSensorDeclAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorDecl__Group__1__Impl
	rule__SensorDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDeclAccess().getSensorKeyword_1()); }

	'sensor' 

{ after(grammarAccess.getSensorDeclAccess().getSensorKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorDecl__Group__2__Impl
	rule__SensorDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDeclAccess().getSensorsAssignment_2()); }
(rule__SensorDecl__SensorsAssignment_2)
{ after(grammarAccess.getSensorDeclAccess().getSensorsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorDecl__Group__3__Impl
	rule__SensorDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDeclAccess().getGroup_3()); }
(rule__SensorDecl__Group_3__0)*
{ after(grammarAccess.getSensorDeclAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorDecl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorDecl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDecl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDeclAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getSensorDeclAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SensorDecl__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorDecl__Group_3__0__Impl
	rule__SensorDecl__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDecl__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDeclAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getSensorDeclAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorDecl__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorDecl__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDecl__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDeclAccess().getSensorsAssignment_3_1()); }
(rule__SensorDecl__SensorsAssignment_3_1)
{ after(grammarAccess.getSensorDeclAccess().getSensorsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SensorWithType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorWithType__Group__0__Impl
	rule__SensorWithType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorWithType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorWithTypeAccess().getSensorAssignment_0()); }
(rule__SensorWithType__SensorAssignment_0)
{ after(grammarAccess.getSensorWithTypeAccess().getSensorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorWithType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorWithType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorWithType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorWithTypeAccess().getAlternatives_1()); }
(rule__SensorWithType__Alternatives_1)
{ after(grammarAccess.getSensorWithTypeAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SensorWithType__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorWithType__Group_1_0__0__Impl
	rule__SensorWithType__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorWithType__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorWithTypeAccess().getColonKeyword_1_0_0()); }

	':' 

{ after(grammarAccess.getSensorWithTypeAccess().getColonKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorWithType__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorWithType__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorWithType__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorWithTypeAccess().getTypeAssignment_1_0_1()); }
(rule__SensorWithType__TypeAssignment_1_0_1)
{ after(grammarAccess.getSensorWithTypeAccess().getTypeAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SensorWithType__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorWithType__Group_1_1__0__Impl
	rule__SensorWithType__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorWithType__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorWithTypeAccess().getLeftParenthesisKeyword_1_1_0()); }

	'(' 

{ after(grammarAccess.getSensorWithTypeAccess().getLeftParenthesisKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorWithType__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorWithType__Group_1_1__1__Impl
	rule__SensorWithType__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorWithType__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorWithTypeAccess().getTypeAssignment_1_1_1()); }
(rule__SensorWithType__TypeAssignment_1_1_1)
{ after(grammarAccess.getSensorWithTypeAccess().getTypeAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorWithType__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorWithType__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorWithType__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorWithTypeAccess().getRightParenthesisKeyword_1_1_2()); }

	')' 

{ after(grammarAccess.getSensorWithTypeAccess().getRightParenthesisKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RelationDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationDecl__Group__0__Impl
	rule__RelationDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getRelationAction_0()); }
(

)
{ after(grammarAccess.getRelationDeclAccess().getRelationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationDecl__Group__1__Impl
	rule__RelationDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getAnnotationsAssignment_1()); }
(rule__RelationDecl__AnnotationsAssignment_1)*
{ after(grammarAccess.getRelationDeclAccess().getAnnotationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationDecl__Group__2__Impl
	rule__RelationDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getRelationKeyword_2()); }

	'relation' 

{ after(grammarAccess.getRelationDeclAccess().getRelationKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationDecl__Group__3__Impl
	rule__RelationDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getRelationsAssignment_3()); }
(rule__RelationDecl__RelationsAssignment_3)
{ after(grammarAccess.getRelationDeclAccess().getRelationsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationDecl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationDecl__Group__4__Impl
	rule__RelationDecl__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDecl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getGroup_4()); }
(rule__RelationDecl__Group_4__0)*
{ after(grammarAccess.getRelationDeclAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationDecl__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationDecl__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDecl__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getSemicolonKeyword_5()); }

	';' 

{ after(grammarAccess.getRelationDeclAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__RelationDecl__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationDecl__Group_4__0__Impl
	rule__RelationDecl__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDecl__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getRelationDeclAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationDecl__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationDecl__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDecl__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getRelationsAssignment_4_1()); }
(rule__RelationDecl__RelationsAssignment_4_1)
{ after(grammarAccess.getRelationDeclAccess().getRelationsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationImplication__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationImplication__Group__0__Impl
	rule__RelationImplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationImplication__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationImplicationAccess().getFirstAssignment_0()); }
(rule__RelationImplication__FirstAssignment_0)
{ after(grammarAccess.getRelationImplicationAccess().getFirstAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationImplication__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationImplication__Group__1__Impl
	rule__RelationImplication__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationImplication__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationImplicationAccess().getTypeAssignment_1()); }
(rule__RelationImplication__TypeAssignment_1)
{ after(grammarAccess.getRelationImplicationAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationImplication__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationImplication__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationImplication__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationImplicationAccess().getSecondAssignment_2()); }
(rule__RelationImplication__SecondAssignment_2)
{ after(grammarAccess.getRelationImplicationAccess().getSecondAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RelationIncompatibility__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationIncompatibility__Group__0__Impl
	rule__RelationIncompatibility__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationIncompatibility__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getIncompAssignment_0()); }
(rule__RelationIncompatibility__IncompAssignment_0)
{ after(grammarAccess.getRelationIncompatibilityAccess().getIncompAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationIncompatibility__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationIncompatibility__Group__1__Impl
	rule__RelationIncompatibility__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationIncompatibility__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getTypeAssignment_1()); }
(rule__RelationIncompatibility__TypeAssignment_1)
{ after(grammarAccess.getRelationIncompatibilityAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationIncompatibility__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationIncompatibility__Group__2__Impl
	rule__RelationIncompatibility__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationIncompatibility__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getIncompAssignment_2()); }
(rule__RelationIncompatibility__IncompAssignment_2)
{ after(grammarAccess.getRelationIncompatibilityAccess().getIncompAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationIncompatibility__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationIncompatibility__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationIncompatibility__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getGroup_3()); }
(rule__RelationIncompatibility__Group_3__0)*
{ after(grammarAccess.getRelationIncompatibilityAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RelationIncompatibility__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationIncompatibility__Group_3__0__Impl
	rule__RelationIncompatibility__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationIncompatibility__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getNumberSignKeyword_3_0()); }

	'#' 

{ after(grammarAccess.getRelationIncompatibilityAccess().getNumberSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationIncompatibility__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationIncompatibility__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationIncompatibility__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getIncompAssignment_3_1()); }
(rule__RelationIncompatibility__IncompAssignment_3_1)
{ after(grammarAccess.getRelationIncompatibilityAccess().getIncompAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Nothing__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nothing__Group__0__Impl
	rule__Nothing__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Nothing__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNothingAccess().getNothingAction_0()); }
(

)
{ after(grammarAccess.getNothingAccess().getNothingAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nothing__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nothing__Group__1__Impl
	rule__Nothing__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Nothing__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNothingAccess().getAnnotationsAssignment_1()); }
(rule__Nothing__AnnotationsAssignment_1)*
{ after(grammarAccess.getNothingAccess().getAnnotationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nothing__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nothing__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Nothing__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNothingAccess().getNothingKeyword_2()); }

	'nothing' 

{ after(grammarAccess.getNothingAccess().getNothingKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Halt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Halt__Group__0__Impl
	rule__Halt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Halt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHaltAccess().getHaltAction_0()); }
(

)
{ after(grammarAccess.getHaltAccess().getHaltAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Halt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Halt__Group__1__Impl
	rule__Halt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Halt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHaltAccess().getAnnotationsAssignment_1()); }
(rule__Halt__AnnotationsAssignment_1)*
{ after(grammarAccess.getHaltAccess().getAnnotationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Halt__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Halt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Halt__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHaltAccess().getHaltKeyword_2()); }

	'halt' 

{ after(grammarAccess.getHaltAccess().getHaltKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Emit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emit__Group__0__Impl
	rule__Emit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Emit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getAnnotationsAssignment_0()); }
(rule__Emit__AnnotationsAssignment_0)*
{ after(grammarAccess.getEmitAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emit__Group__1__Impl
	rule__Emit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Emit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getEmitKeyword_1()); }

	'emit' 

{ after(grammarAccess.getEmitAccess().getEmitKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emit__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emit__Group__2__Impl
	rule__Emit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Emit__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getSignalAssignment_2()); }
(rule__Emit__SignalAssignment_2)
{ after(grammarAccess.getEmitAccess().getSignalAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emit__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emit__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Emit__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getGroup_3()); }
(rule__Emit__Group_3__0)?
{ after(grammarAccess.getEmitAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Emit__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emit__Group_3__0__Impl
	rule__Emit__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Emit__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getEmitAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emit__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emit__Group_3__1__Impl
	rule__Emit__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Emit__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getExpressionAssignment_3_1()); }
(rule__Emit__ExpressionAssignment_3_1)
{ after(grammarAccess.getEmitAccess().getExpressionAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emit__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emit__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Emit__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getEmitAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Sustain__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sustain__Group__0__Impl
	rule__Sustain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sustain__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getAnnotationsAssignment_0()); }
(rule__Sustain__AnnotationsAssignment_0)*
{ after(grammarAccess.getSustainAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sustain__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sustain__Group__1__Impl
	rule__Sustain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sustain__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getSustainKeyword_1()); }

	'sustain' 

{ after(grammarAccess.getSustainAccess().getSustainKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sustain__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sustain__Group__2__Impl
	rule__Sustain__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sustain__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getSignalAssignment_2()); }
(rule__Sustain__SignalAssignment_2)
{ after(grammarAccess.getSustainAccess().getSignalAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sustain__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sustain__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sustain__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getGroup_3()); }
(rule__Sustain__Group_3__0)?
{ after(grammarAccess.getSustainAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Sustain__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sustain__Group_3__0__Impl
	rule__Sustain__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sustain__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getSustainAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sustain__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sustain__Group_3__1__Impl
	rule__Sustain__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sustain__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getExpressionAssignment_3_1()); }
(rule__Sustain__ExpressionAssignment_3_1)
{ after(grammarAccess.getSustainAccess().getExpressionAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sustain__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sustain__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sustain__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getSustainAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EsterelAssignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EsterelAssignment__Group__0__Impl
	rule__EsterelAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelAssignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelAssignmentAccess().getVarAssignment_0()); }
(rule__EsterelAssignment__VarAssignment_0)
{ after(grammarAccess.getEsterelAssignmentAccess().getVarAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EsterelAssignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EsterelAssignment__Group__1__Impl
	rule__EsterelAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelAssignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelAssignmentAccess().getColonEqualsSignKeyword_1()); }

	':=' 

{ after(grammarAccess.getEsterelAssignmentAccess().getColonEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EsterelAssignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EsterelAssignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelAssignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelAssignmentAccess().getExpressionAssignment_2()); }
(rule__EsterelAssignment__ExpressionAssignment_2)
{ after(grammarAccess.getEsterelAssignmentAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ProcCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group__0__Impl
	rule__ProcCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getAnnotationsAssignment_0()); }
(rule__ProcCall__AnnotationsAssignment_0)*
{ after(grammarAccess.getProcCallAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group__1__Impl
	rule__ProcCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getCallKeyword_1()); }

	'call' 

{ after(grammarAccess.getProcCallAccess().getCallKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group__2__Impl
	rule__ProcCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getProcAssignment_2()); }
(rule__ProcCall__ProcAssignment_2)
{ after(grammarAccess.getProcCallAccess().getProcAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group__3__Impl
	rule__ProcCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getProcCallAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcCall__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group__4__Impl
	rule__ProcCall__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getGroup_4()); }
(rule__ProcCall__Group_4__0)?
{ after(grammarAccess.getProcCallAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcCall__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group__5__Impl
	rule__ProcCall__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getProcCallAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcCall__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group__6__Impl
	rule__ProcCall__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getLeftParenthesisKeyword_6()); }

	'(' 

{ after(grammarAccess.getProcCallAccess().getLeftParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcCall__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group__7__Impl
	rule__ProcCall__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getGroup_7()); }
(rule__ProcCall__Group_7__0)?
{ after(grammarAccess.getProcCallAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcCall__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getRightParenthesisKeyword_8()); }

	')' 

{ after(grammarAccess.getProcCallAccess().getRightParenthesisKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__ProcCall__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group_4__0__Impl
	rule__ProcCall__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getVarListAssignment_4_0()); }
(rule__ProcCall__VarListAssignment_4_0)
{ after(grammarAccess.getProcCallAccess().getVarListAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcCall__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getGroup_4_1()); }
(rule__ProcCall__Group_4_1__0)*
{ after(grammarAccess.getProcCallAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProcCall__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group_4_1__0__Impl
	rule__ProcCall__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getCommaKeyword_4_1_0()); }

	',' 

{ after(grammarAccess.getProcCallAccess().getCommaKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcCall__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getVarListAssignment_4_1_1()); }
(rule__ProcCall__VarListAssignment_4_1_1)
{ after(grammarAccess.getProcCallAccess().getVarListAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProcCall__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group_7__0__Impl
	rule__ProcCall__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getKexpressionsAssignment_7_0()); }
(rule__ProcCall__KexpressionsAssignment_7_0)
{ after(grammarAccess.getProcCallAccess().getKexpressionsAssignment_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcCall__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getGroup_7_1()); }
(rule__ProcCall__Group_7_1__0)*
{ after(grammarAccess.getProcCallAccess().getGroup_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProcCall__Group_7_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group_7_1__0__Impl
	rule__ProcCall__Group_7_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group_7_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getCommaKeyword_7_1_0()); }

	',' 

{ after(grammarAccess.getProcCallAccess().getCommaKeyword_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcCall__Group_7_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group_7_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group_7_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getKexpressionsAssignment_7_1_1()); }
(rule__ProcCall__KexpressionsAssignment_7_1_1)
{ after(grammarAccess.getProcCallAccess().getKexpressionsAssignment_7_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TrapSignal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapSignal__Group__0__Impl
	rule__TrapSignal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getTrapSignalAction_0()); }
(

)
{ after(grammarAccess.getTrapSignalAccess().getTrapSignalAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapSignal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapSignal__Group__1__Impl
	rule__TrapSignal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getNameAssignment_1()); }
(rule__TrapSignal__NameAssignment_1)
{ after(grammarAccess.getTrapSignalAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapSignal__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapSignal__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getAlternatives_2()); }
(rule__TrapSignal__Alternatives_2)?
{ after(grammarAccess.getTrapSignalAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TrapSignal__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapSignal__Group_2_0__0__Impl
	rule__TrapSignal__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getColonKeyword_2_0_0()); }
(
	':' 
)?
{ after(grammarAccess.getTrapSignalAccess().getColonKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapSignal__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapSignal__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getAlternatives_2_0_1()); }
(rule__TrapSignal__Alternatives_2_0_1)
{ after(grammarAccess.getTrapSignalAccess().getAlternatives_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TrapSignal__Group_2_0_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapSignal__Group_2_0_1_2__0__Impl
	rule__TrapSignal__Group_2_0_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Group_2_0_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getCombineKeyword_2_0_1_2_0()); }

	'combine' 

{ after(grammarAccess.getTrapSignalAccess().getCombineKeyword_2_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapSignal__Group_2_0_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapSignal__Group_2_0_1_2__1__Impl
	rule__TrapSignal__Group_2_0_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Group_2_0_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getAlternatives_2_0_1_2_1()); }
(rule__TrapSignal__Alternatives_2_0_1_2_1)
{ after(grammarAccess.getTrapSignalAccess().getAlternatives_2_0_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapSignal__Group_2_0_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapSignal__Group_2_0_1_2__2__Impl
	rule__TrapSignal__Group_2_0_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Group_2_0_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getWithKeyword_2_0_1_2_2()); }

	'with' 

{ after(grammarAccess.getTrapSignalAccess().getWithKeyword_2_0_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapSignal__Group_2_0_1_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapSignal__Group_2_0_1_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Group_2_0_1_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getAlternatives_2_0_1_2_3()); }
(rule__TrapSignal__Alternatives_2_0_1_2_3)
{ after(grammarAccess.getTrapSignalAccess().getAlternatives_2_0_1_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TrapSignal__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapSignal__Group_2_1__0__Impl
	rule__TrapSignal__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getLeftParenthesisKeyword_2_1_0()); }

	'(' 

{ after(grammarAccess.getTrapSignalAccess().getLeftParenthesisKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapSignal__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapSignal__Group_2_1__1__Impl
	rule__TrapSignal__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getAlternatives_2_1_1()); }
(rule__TrapSignal__Alternatives_2_1_1)
{ after(grammarAccess.getTrapSignalAccess().getAlternatives_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapSignal__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapSignal__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getRightParenthesisKeyword_2_1_2()); }

	')' 

{ after(grammarAccess.getTrapSignalAccess().getRightParenthesisKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TrapSignal__Group_2_1_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapSignal__Group_2_1_1_2__0__Impl
	rule__TrapSignal__Group_2_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Group_2_1_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getCombineKeyword_2_1_1_2_0()); }

	'combine' 

{ after(grammarAccess.getTrapSignalAccess().getCombineKeyword_2_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapSignal__Group_2_1_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapSignal__Group_2_1_1_2__1__Impl
	rule__TrapSignal__Group_2_1_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Group_2_1_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getAlternatives_2_1_1_2_1()); }
(rule__TrapSignal__Alternatives_2_1_1_2_1)
{ after(grammarAccess.getTrapSignalAccess().getAlternatives_2_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapSignal__Group_2_1_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapSignal__Group_2_1_1_2__2__Impl
	rule__TrapSignal__Group_2_1_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Group_2_1_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getWithKeyword_2_1_1_2_2()); }

	'with' 

{ after(grammarAccess.getTrapSignalAccess().getWithKeyword_2_1_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapSignal__Group_2_1_1_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapSignal__Group_2_1_1_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Group_2_1_1_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getAlternatives_2_1_1_2_3()); }
(rule__TrapSignal__Alternatives_2_1_1_2_3)
{ after(grammarAccess.getTrapSignalAccess().getAlternatives_2_1_1_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TrapSignal__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapSignal__Group_2_2__0__Impl
	rule__TrapSignal__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getColonEqualsSignKeyword_2_2_0()); }

	':=' 

{ after(grammarAccess.getTrapSignalAccess().getColonEqualsSignKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapSignal__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapSignal__Group_2_2__1__Impl
	rule__TrapSignal__Group_2_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getExpressionAssignment_2_2_1()); }
(rule__TrapSignal__ExpressionAssignment_2_2_1)
{ after(grammarAccess.getTrapSignalAccess().getExpressionAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapSignal__Group_2_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapSignal__Group_2_2__2__Impl
	rule__TrapSignal__Group_2_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Group_2_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getColonKeyword_2_2_2()); }

	':' 

{ after(grammarAccess.getTrapSignalAccess().getColonKeyword_2_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapSignal__Group_2_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapSignal__Group_2_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Group_2_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getAlternatives_2_2_3()); }
(rule__TrapSignal__Alternatives_2_2_3)
{ after(grammarAccess.getTrapSignalAccess().getAlternatives_2_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TrapSignal__Group_2_2_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapSignal__Group_2_2_3_2__0__Impl
	rule__TrapSignal__Group_2_2_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Group_2_2_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getCombineKeyword_2_2_3_2_0()); }

	'combine' 

{ after(grammarAccess.getTrapSignalAccess().getCombineKeyword_2_2_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapSignal__Group_2_2_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapSignal__Group_2_2_3_2__1__Impl
	rule__TrapSignal__Group_2_2_3_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Group_2_2_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getAlternatives_2_2_3_2_1()); }
(rule__TrapSignal__Alternatives_2_2_3_2_1)
{ after(grammarAccess.getTrapSignalAccess().getAlternatives_2_2_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapSignal__Group_2_2_3_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapSignal__Group_2_2_3_2__2__Impl
	rule__TrapSignal__Group_2_2_3_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Group_2_2_3_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getWithKeyword_2_2_3_2_2()); }

	'with' 

{ after(grammarAccess.getTrapSignalAccess().getWithKeyword_2_2_3_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapSignal__Group_2_2_3_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapSignal__Group_2_2_3_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__Group_2_2_3_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getAlternatives_2_2_3_2_3()); }
(rule__TrapSignal__Alternatives_2_2_3_2_3)
{ after(grammarAccess.getTrapSignalAccess().getAlternatives_2_2_3_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Exit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exit__Group__0__Impl
	rule__Exit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitAccess().getAnnotationsAssignment_0()); }
(rule__Exit__AnnotationsAssignment_0)*
{ after(grammarAccess.getExitAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exit__Group__1__Impl
	rule__Exit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitAccess().getExitKeyword_1()); }

	'exit' 

{ after(grammarAccess.getExitAccess().getExitKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exit__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exit__Group__2__Impl
	rule__Exit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitAccess().getTrapAssignment_2()); }
(rule__Exit__TrapAssignment_2)
{ after(grammarAccess.getExitAccess().getTrapAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exit__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exit__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitAccess().getGroup_3()); }
(rule__Exit__Group_3__0)?
{ after(grammarAccess.getExitAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Exit__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exit__Group_3__0__Impl
	rule__Exit__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getExitAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exit__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exit__Group_3__1__Impl
	rule__Exit__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitAccess().getExpressionAssignment_3_1()); }
(rule__Exit__ExpressionAssignment_3_1)
{ after(grammarAccess.getExitAccess().getExpressionAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exit__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exit__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getExitAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariableDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDecl__Group__0__Impl
	rule__VariableDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getVariablesAssignment_0()); }
(rule__VariableDecl__VariablesAssignment_0)
{ after(grammarAccess.getVariableDeclAccess().getVariablesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDecl__Group__1__Impl
	rule__VariableDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getGroup_1()); }
(rule__VariableDecl__Group_1__0)*
{ after(grammarAccess.getVariableDeclAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDecl__Group__2__Impl
	rule__VariableDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getVariableDeclAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDecl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getTypeAssignment_3()); }
(rule__VariableDecl__TypeAssignment_3)
{ after(grammarAccess.getVariableDeclAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VariableDecl__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDecl__Group_1__0__Impl
	rule__VariableDecl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getVariableDeclAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDecl__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDecl__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getVariablesAssignment_1_1()); }
(rule__VariableDecl__VariablesAssignment_1_1)
{ after(grammarAccess.getVariableDeclAccess().getVariablesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IVariable__Group__0__Impl
	rule__IVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableAccess().getNameAssignment_0()); }
(rule__IVariable__NameAssignment_0)
{ after(grammarAccess.getIVariableAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IVariable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableAccess().getGroup_1()); }
(rule__IVariable__Group_1__0)?
{ after(grammarAccess.getIVariableAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IVariable__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IVariable__Group_1__0__Impl
	rule__IVariable__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IVariable__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableAccess().getColonEqualsSignKeyword_1_0()); }

	':=' 

{ after(grammarAccess.getIVariableAccess().getColonEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IVariable__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IVariable__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IVariable__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableAccess().getExpressionAssignment_1_1()); }
(rule__IVariable__ExpressionAssignment_1_1)
{ after(grammarAccess.getIVariableAccess().getExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Run__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group__0__Impl
	rule__Run__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getAnnotationsAssignment_0()); }
(rule__Run__AnnotationsAssignment_0)*
{ after(grammarAccess.getRunAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getAlternatives_1()); }
(rule__Run__Alternatives_1)
{ after(grammarAccess.getRunAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Run__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_1_0__0__Impl
	rule__Run__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getRunKeyword_1_0_0()); }

	'run' 

{ after(grammarAccess.getRunAccess().getRunKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_1_0__1__Impl
	rule__Run__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getModuleAssignment_1_0_1()); }
(rule__Run__ModuleAssignment_1_0_1)
{ after(grammarAccess.getRunAccess().getModuleAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getGroup_1_0_2()); }
(rule__Run__Group_1_0_2__0)?
{ after(grammarAccess.getRunAccess().getGroup_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Run__Group_1_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_1_0_2__0__Impl
	rule__Run__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_1_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getLeftSquareBracketKeyword_1_0_2_0()); }

	'[' 

{ after(grammarAccess.getRunAccess().getLeftSquareBracketKeyword_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_1_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_1_0_2__1__Impl
	rule__Run__Group_1_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_1_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getListAssignment_1_0_2_1()); }
(rule__Run__ListAssignment_1_0_2_1)
{ after(grammarAccess.getRunAccess().getListAssignment_1_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_1_0_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_1_0_2__2__Impl
	rule__Run__Group_1_0_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_1_0_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getGroup_1_0_2_2()); }
(rule__Run__Group_1_0_2_2__0)*
{ after(grammarAccess.getRunAccess().getGroup_1_0_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_1_0_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_1_0_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_1_0_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getRightSquareBracketKeyword_1_0_2_3()); }

	']' 

{ after(grammarAccess.getRunAccess().getRightSquareBracketKeyword_1_0_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Run__Group_1_0_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_1_0_2_2__0__Impl
	rule__Run__Group_1_0_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_1_0_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getSemicolonKeyword_1_0_2_2_0()); }

	';' 

{ after(grammarAccess.getRunAccess().getSemicolonKeyword_1_0_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_1_0_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_1_0_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_1_0_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getListAssignment_1_0_2_2_1()); }
(rule__Run__ListAssignment_1_0_2_2_1)
{ after(grammarAccess.getRunAccess().getListAssignment_1_0_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Run__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_1_1__0__Impl
	rule__Run__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getCopymoduleKeyword_1_1_0()); }

	'copymodule' 

{ after(grammarAccess.getRunAccess().getCopymoduleKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_1_1__1__Impl
	rule__Run__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getModuleAssignment_1_1_1()); }
(rule__Run__ModuleAssignment_1_1_1)
{ after(grammarAccess.getRunAccess().getModuleAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getGroup_1_1_2()); }
(rule__Run__Group_1_1_2__0)?
{ after(grammarAccess.getRunAccess().getGroup_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Run__Group_1_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_1_1_2__0__Impl
	rule__Run__Group_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_1_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getLeftSquareBracketKeyword_1_1_2_0()); }

	'[' 

{ after(grammarAccess.getRunAccess().getLeftSquareBracketKeyword_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_1_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_1_1_2__1__Impl
	rule__Run__Group_1_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_1_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getListAssignment_1_1_2_1()); }
(rule__Run__ListAssignment_1_1_2_1)
{ after(grammarAccess.getRunAccess().getListAssignment_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_1_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_1_1_2__2__Impl
	rule__Run__Group_1_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_1_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getGroup_1_1_2_2()); }
(rule__Run__Group_1_1_2_2__0)*
{ after(grammarAccess.getRunAccess().getGroup_1_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_1_1_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_1_1_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_1_1_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getRightSquareBracketKeyword_1_1_2_3()); }

	']' 

{ after(grammarAccess.getRunAccess().getRightSquareBracketKeyword_1_1_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Run__Group_1_1_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_1_1_2_2__0__Impl
	rule__Run__Group_1_1_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_1_1_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getSemicolonKeyword_1_1_2_2_0()); }

	';' 

{ after(grammarAccess.getRunAccess().getSemicolonKeyword_1_1_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_1_1_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_1_1_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_1_1_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getListAssignment_1_1_2_2_1()); }
(rule__Run__ListAssignment_1_1_2_2_1)
{ after(grammarAccess.getRunAccess().getListAssignment_1_1_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Renaming__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group__0__Impl
	rule__Renaming__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getAnnotationsAssignment_0()); }
(rule__Renaming__AnnotationsAssignment_0)*
{ after(grammarAccess.getRenamingAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getAlternatives_1()); }
(rule__Renaming__Alternatives_1)
{ after(grammarAccess.getRenamingAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Renaming__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_0__0__Impl
	rule__Renaming__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getTypeKeyword_1_0_0()); }

	'type' 

{ after(grammarAccess.getRenamingAccess().getTypeKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_0__1__Impl
	rule__Renaming__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_0_1()); }
(rule__Renaming__RenamingsAssignment_1_0_1)
{ after(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getGroup_1_0_2()); }
(rule__Renaming__Group_1_0_2__0)*
{ after(grammarAccess.getRenamingAccess().getGroup_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Renaming__Group_1_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_0_2__0__Impl
	rule__Renaming__Group_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getCommaKeyword_1_0_2_0()); }

	',' 

{ after(grammarAccess.getRenamingAccess().getCommaKeyword_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_1_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_0_2_1()); }
(rule__Renaming__RenamingsAssignment_1_0_2_1)
{ after(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Renaming__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_1__0__Impl
	rule__Renaming__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getConstantKeyword_1_1_0()); }

	'constant' 

{ after(grammarAccess.getRenamingAccess().getConstantKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_1__1__Impl
	rule__Renaming__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_1_1()); }
(rule__Renaming__RenamingsAssignment_1_1_1)
{ after(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getGroup_1_1_2()); }
(rule__Renaming__Group_1_1_2__0)*
{ after(grammarAccess.getRenamingAccess().getGroup_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Renaming__Group_1_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_1_2__0__Impl
	rule__Renaming__Group_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getCommaKeyword_1_1_2_0()); }

	',' 

{ after(grammarAccess.getRenamingAccess().getCommaKeyword_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_1_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_1_2_1()); }
(rule__Renaming__RenamingsAssignment_1_1_2_1)
{ after(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Renaming__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_2__0__Impl
	rule__Renaming__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getFunctionKeyword_1_2_0()); }

	'function' 

{ after(grammarAccess.getRenamingAccess().getFunctionKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_2__1__Impl
	rule__Renaming__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_2_1()); }
(rule__Renaming__RenamingsAssignment_1_2_1)
{ after(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getGroup_1_2_2()); }
(rule__Renaming__Group_1_2_2__0)*
{ after(grammarAccess.getRenamingAccess().getGroup_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Renaming__Group_1_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_2_2__0__Impl
	rule__Renaming__Group_1_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getCommaKeyword_1_2_2_0()); }

	',' 

{ after(grammarAccess.getRenamingAccess().getCommaKeyword_1_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_1_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_2_2_1()); }
(rule__Renaming__RenamingsAssignment_1_2_2_1)
{ after(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Renaming__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_3__0__Impl
	rule__Renaming__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getProcedureKeyword_1_3_0()); }

	'procedure' 

{ after(grammarAccess.getRenamingAccess().getProcedureKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_3__1__Impl
	rule__Renaming__Group_1_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_3_1()); }
(rule__Renaming__RenamingsAssignment_1_3_1)
{ after(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_1_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getGroup_1_3_2()); }
(rule__Renaming__Group_1_3_2__0)*
{ after(grammarAccess.getRenamingAccess().getGroup_1_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Renaming__Group_1_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_3_2__0__Impl
	rule__Renaming__Group_1_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getCommaKeyword_1_3_2_0()); }

	',' 

{ after(grammarAccess.getRenamingAccess().getCommaKeyword_1_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_1_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_3_2_1()); }
(rule__Renaming__RenamingsAssignment_1_3_2_1)
{ after(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Renaming__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_4__0__Impl
	rule__Renaming__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getTaskKeyword_1_4_0()); }

	'task' 

{ after(grammarAccess.getRenamingAccess().getTaskKeyword_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_4__1__Impl
	rule__Renaming__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_4_1()); }
(rule__Renaming__RenamingsAssignment_1_4_1)
{ after(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_1_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getGroup_1_4_2()); }
(rule__Renaming__Group_1_4_2__0)*
{ after(grammarAccess.getRenamingAccess().getGroup_1_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Renaming__Group_1_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_4_2__0__Impl
	rule__Renaming__Group_1_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getCommaKeyword_1_4_2_0()); }

	',' 

{ after(grammarAccess.getRenamingAccess().getCommaKeyword_1_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_1_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_4_2_1()); }
(rule__Renaming__RenamingsAssignment_1_4_2_1)
{ after(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Renaming__Group_1_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_5__0__Impl
	rule__Renaming__Group_1_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getSignalKeyword_1_5_0()); }

	'signal' 

{ after(grammarAccess.getRenamingAccess().getSignalKeyword_1_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_1_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_5__1__Impl
	rule__Renaming__Group_1_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_5_1()); }
(rule__Renaming__RenamingsAssignment_1_5_1)
{ after(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_1_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getGroup_1_5_2()); }
(rule__Renaming__Group_1_5_2__0)*
{ after(grammarAccess.getRenamingAccess().getGroup_1_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Renaming__Group_1_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_5_2__0__Impl
	rule__Renaming__Group_1_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getCommaKeyword_1_5_2_0()); }

	',' 

{ after(grammarAccess.getRenamingAccess().getCommaKeyword_1_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_1_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_5_2_1()); }
(rule__Renaming__RenamingsAssignment_1_5_2_1)
{ after(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeRenaming__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeRenaming__Group__0__Impl
	rule__TypeRenaming__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRenaming__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRenamingAccess().getAlternatives_0()); }
(rule__TypeRenaming__Alternatives_0)
{ after(grammarAccess.getTypeRenamingAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeRenaming__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeRenaming__Group__1__Impl
	rule__TypeRenaming__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRenaming__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRenamingAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getTypeRenamingAccess().getSolidusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeRenaming__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeRenaming__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRenaming__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRenamingAccess().getOldNameAssignment_2()); }
(rule__TypeRenaming__OldNameAssignment_2)
{ after(grammarAccess.getTypeRenamingAccess().getOldNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConstantRenaming__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantRenaming__Group__0__Impl
	rule__ConstantRenaming__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantRenaming__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantRenamingAccess().getAlternatives_0()); }
(rule__ConstantRenaming__Alternatives_0)
{ after(grammarAccess.getConstantRenamingAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantRenaming__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantRenaming__Group__1__Impl
	rule__ConstantRenaming__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantRenaming__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantRenamingAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getConstantRenamingAccess().getSolidusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantRenaming__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantRenaming__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantRenaming__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantRenamingAccess().getOldNameAssignment_2()); }
(rule__ConstantRenaming__OldNameAssignment_2)
{ after(grammarAccess.getConstantRenamingAccess().getOldNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FunctionRenaming__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionRenaming__Group__0__Impl
	rule__FunctionRenaming__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionRenaming__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionRenamingAccess().getAlternatives_0()); }
(rule__FunctionRenaming__Alternatives_0)
{ after(grammarAccess.getFunctionRenamingAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionRenaming__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionRenaming__Group__1__Impl
	rule__FunctionRenaming__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionRenaming__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionRenamingAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getFunctionRenamingAccess().getSolidusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionRenaming__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionRenaming__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionRenaming__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionRenamingAccess().getOldNameAssignment_2()); }
(rule__FunctionRenaming__OldNameAssignment_2)
{ after(grammarAccess.getFunctionRenamingAccess().getOldNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ProcedureRenaming__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcedureRenaming__Group__0__Impl
	rule__ProcedureRenaming__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureRenaming__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureRenamingAccess().getNewNameAssignment_0()); }
(rule__ProcedureRenaming__NewNameAssignment_0)
{ after(grammarAccess.getProcedureRenamingAccess().getNewNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcedureRenaming__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcedureRenaming__Group__1__Impl
	rule__ProcedureRenaming__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureRenaming__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureRenamingAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getProcedureRenamingAccess().getSolidusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcedureRenaming__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcedureRenaming__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureRenaming__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureRenamingAccess().getOldNameAssignment_2()); }
(rule__ProcedureRenaming__OldNameAssignment_2)
{ after(grammarAccess.getProcedureRenamingAccess().getOldNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TaskRenaming__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskRenaming__Group__0__Impl
	rule__TaskRenaming__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskRenaming__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskRenamingAccess().getNewNameAssignment_0()); }
(rule__TaskRenaming__NewNameAssignment_0)
{ after(grammarAccess.getTaskRenamingAccess().getNewNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskRenaming__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskRenaming__Group__1__Impl
	rule__TaskRenaming__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskRenaming__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskRenamingAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getTaskRenamingAccess().getSolidusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskRenaming__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskRenaming__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskRenaming__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskRenamingAccess().getOldNameAssignment_2()); }
(rule__TaskRenaming__OldNameAssignment_2)
{ after(grammarAccess.getTaskRenamingAccess().getOldNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SignalRenaming__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalRenaming__Group__0__Impl
	rule__SignalRenaming__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalRenaming__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalRenamingAccess().getNewNameAssignment_0()); }
(rule__SignalRenaming__NewNameAssignment_0)
{ after(grammarAccess.getSignalRenamingAccess().getNewNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalRenaming__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalRenaming__Group__1__Impl
	rule__SignalRenaming__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalRenaming__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalRenamingAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getSignalRenamingAccess().getSolidusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalRenaming__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalRenaming__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalRenaming__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalRenamingAccess().getOldNameAssignment_2()); }
(rule__SignalRenaming__OldNameAssignment_2)
{ after(grammarAccess.getSignalRenamingAccess().getOldNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TrapExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapExpression__Group__0__Impl
	rule__TrapExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapExpressionAccess().getTrapExpressionAction_0()); }
(

)
{ after(grammarAccess.getTrapExpressionAccess().getTrapExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapExpression__Group__1__Impl
	rule__TrapExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapExpressionAccess().getQuestionMarkQuestionMarkKeyword_1()); }

	'??' 

{ after(grammarAccess.getTrapExpressionAccess().getQuestionMarkQuestionMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapExpressionAccess().getTrapAssignment_2()); }
(rule__TrapExpression__TrapAssignment_2)
{ after(grammarAccess.getTrapExpressionAccess().getTrapAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FunctionExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group__0__Impl
	rule__FunctionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getFunctionExpressionAction_0()); }
(

)
{ after(grammarAccess.getFunctionExpressionAccess().getFunctionExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group__1__Impl
	rule__FunctionExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getFunctionAssignment_1()); }
(rule__FunctionExpression__FunctionAssignment_1)
{ after(grammarAccess.getFunctionExpressionAccess().getFunctionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group__2__Impl
	rule__FunctionExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getFunctionExpressionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group__3__Impl
	rule__FunctionExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getGroup_3()); }
(rule__FunctionExpression__Group_3__0)?
{ after(grammarAccess.getFunctionExpressionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getFunctionExpressionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FunctionExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group_3__0__Impl
	rule__FunctionExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getKexpressionsAssignment_3_0()); }
(rule__FunctionExpression__KexpressionsAssignment_3_0)
{ after(grammarAccess.getFunctionExpressionAccess().getKexpressionsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getGroup_3_1()); }
(rule__FunctionExpression__Group_3_1__0)*
{ after(grammarAccess.getFunctionExpressionAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionExpression__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group_3_1__0__Impl
	rule__FunctionExpression__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getFunctionExpressionAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionExpression__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getKexpressionsAssignment_3_1_1()); }
(rule__FunctionExpression__KexpressionsAssignment_3_1_1)
{ after(grammarAccess.getFunctionExpressionAccess().getKexpressionsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstantExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantExpression__Group__0__Impl
	rule__ConstantExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantExpressionAccess().getConstantExpressionAction_0()); }
(

)
{ after(grammarAccess.getConstantExpressionAccess().getConstantExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantExpressionAccess().getAlternatives_1()); }
(rule__ConstantExpression__Alternatives_1)
{ after(grammarAccess.getConstantExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TrapExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapExpr__Group__0__Impl
	rule__TrapExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapExprAccess().getTrapAndExpressionParserRuleCall_0()); }
	ruleTrapAndExpression
{ after(grammarAccess.getTrapExprAccess().getTrapAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapExprAccess().getGroup_1()); }
(rule__TrapExpr__Group_1__0)?
{ after(grammarAccess.getTrapExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TrapExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapExpr__Group_1__0__Impl
	rule__TrapExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapExpr__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapExprAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getTrapExprAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapExpr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapExpr__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTrapExprAccess().getGroup_1_1()); }
(rule__TrapExpr__Group_1_1__0)
{ after(grammarAccess.getTrapExprAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getTrapExprAccess().getGroup_1_1()); }
(rule__TrapExpr__Group_1_1__0)*
{ after(grammarAccess.getTrapExprAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TrapExpr__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapExpr__Group_1_1__0__Impl
	rule__TrapExpr__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapExpr__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapExprAccess().getOperatorAssignment_1_1_0()); }
(rule__TrapExpr__OperatorAssignment_1_1_0)
{ after(grammarAccess.getTrapExprAccess().getOperatorAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapExpr__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapExpr__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapExpr__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapExprAccess().getSubExpressionsAssignment_1_1_1()); }
(rule__TrapExpr__SubExpressionsAssignment_1_1_1)
{ after(grammarAccess.getTrapExprAccess().getSubExpressionsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TrapAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapAndExpression__Group__0__Impl
	rule__TrapAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapAndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAndExpressionAccess().getTrapNotExpressionParserRuleCall_0()); }
	ruleTrapNotExpression
{ after(grammarAccess.getTrapAndExpressionAccess().getTrapNotExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapAndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAndExpressionAccess().getGroup_1()); }
(rule__TrapAndExpression__Group_1__0)?
{ after(grammarAccess.getTrapAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TrapAndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapAndExpression__Group_1__0__Impl
	rule__TrapAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapAndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getTrapAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapAndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapAndExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapAndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTrapAndExpressionAccess().getGroup_1_1()); }
(rule__TrapAndExpression__Group_1_1__0)
{ after(grammarAccess.getTrapAndExpressionAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getTrapAndExpressionAccess().getGroup_1_1()); }
(rule__TrapAndExpression__Group_1_1__0)*
{ after(grammarAccess.getTrapAndExpressionAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TrapAndExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapAndExpression__Group_1_1__0__Impl
	rule__TrapAndExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapAndExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAndExpressionAccess().getOperatorAssignment_1_1_0()); }
(rule__TrapAndExpression__OperatorAssignment_1_1_0)
{ after(grammarAccess.getTrapAndExpressionAccess().getOperatorAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapAndExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapAndExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapAndExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAndExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
(rule__TrapAndExpression__SubExpressionsAssignment_1_1_1)
{ after(grammarAccess.getTrapAndExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TrapNotExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapNotExpression__Group_0__0__Impl
	rule__TrapNotExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapNotExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapNotExpressionAccess().getOperatorExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getTrapNotExpressionAccess().getOperatorExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapNotExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapNotExpression__Group_0__1__Impl
	rule__TrapNotExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapNotExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTrapNotExpressionAccess().getOperatorAssignment_0_1()); }
(rule__TrapNotExpression__OperatorAssignment_0_1)
{ after(grammarAccess.getTrapNotExpressionAccess().getOperatorAssignment_0_1()); }
)
(
{ before(grammarAccess.getTrapNotExpressionAccess().getOperatorAssignment_0_1()); }
(rule__TrapNotExpression__OperatorAssignment_0_1)*
{ after(grammarAccess.getTrapNotExpressionAccess().getOperatorAssignment_0_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapNotExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapNotExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapNotExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapNotExpressionAccess().getSubExpressionsAssignment_0_2()); }
(rule__TrapNotExpression__SubExpressionsAssignment_0_2)
{ after(grammarAccess.getTrapNotExpressionAccess().getSubExpressionsAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TrapAtomicExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapAtomicExpression__Group_1__0__Impl
	rule__TrapAtomicExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapAtomicExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAtomicExpressionAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getTrapAtomicExpressionAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapAtomicExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapAtomicExpression__Group_1__1__Impl
	rule__TrapAtomicExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapAtomicExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAtomicExpressionAccess().getTrapExpressionParserRuleCall_1_1()); }
	ruleTrapExpression
{ after(grammarAccess.getTrapAtomicExpressionAccess().getTrapExpressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapAtomicExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapAtomicExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapAtomicExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAtomicExpressionAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getTrapAtomicExpressionAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TrapReferenceExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapReferenceExpr__Group__0__Impl
	rule__TrapReferenceExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapReferenceExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapReferenceExprAccess().getTrapReferenceExprAction_0()); }
(

)
{ after(grammarAccess.getTrapReferenceExprAccess().getTrapReferenceExprAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapReferenceExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapReferenceExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapReferenceExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapReferenceExprAccess().getValuedObjectAssignment_1()); }
(rule__TrapReferenceExpr__ValuedObjectAssignment_1)
{ after(grammarAccess.getTrapReferenceExprAccess().getValuedObjectAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalExpression__Group__0__Impl
	rule__SignalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalExpressionAccess().getSignalAndExpressionParserRuleCall_0()); }
	ruleSignalAndExpression
{ after(grammarAccess.getSignalExpressionAccess().getSignalAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalExpressionAccess().getGroup_1()); }
(rule__SignalExpression__Group_1__0)?
{ after(grammarAccess.getSignalExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalExpression__Group_1__0__Impl
	rule__SignalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getSignalExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSignalExpressionAccess().getGroup_1_1()); }
(rule__SignalExpression__Group_1_1__0)
{ after(grammarAccess.getSignalExpressionAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getSignalExpressionAccess().getGroup_1_1()); }
(rule__SignalExpression__Group_1_1__0)*
{ after(grammarAccess.getSignalExpressionAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalExpression__Group_1_1__0__Impl
	rule__SignalExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalExpressionAccess().getOperatorAssignment_1_1_0()); }
(rule__SignalExpression__OperatorAssignment_1_1_0)
{ after(grammarAccess.getSignalExpressionAccess().getOperatorAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
(rule__SignalExpression__SubExpressionsAssignment_1_1_1)
{ after(grammarAccess.getSignalExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalAndExpression__Group__0__Impl
	rule__SignalAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAndExpressionAccess().getSignalNotExpressionParserRuleCall_0()); }
	ruleSignalNotExpression
{ after(grammarAccess.getSignalAndExpressionAccess().getSignalNotExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAndExpressionAccess().getGroup_1()); }
(rule__SignalAndExpression__Group_1__0)?
{ after(grammarAccess.getSignalAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalAndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalAndExpression__Group_1__0__Impl
	rule__SignalAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getSignalAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalAndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalAndExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSignalAndExpressionAccess().getGroup_1_1()); }
(rule__SignalAndExpression__Group_1_1__0)
{ after(grammarAccess.getSignalAndExpressionAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getSignalAndExpressionAccess().getGroup_1_1()); }
(rule__SignalAndExpression__Group_1_1__0)*
{ after(grammarAccess.getSignalAndExpressionAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalAndExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalAndExpression__Group_1_1__0__Impl
	rule__SignalAndExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAndExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAndExpressionAccess().getOperatorAssignment_1_1_0()); }
(rule__SignalAndExpression__OperatorAssignment_1_1_0)
{ after(grammarAccess.getSignalAndExpressionAccess().getOperatorAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalAndExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalAndExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAndExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAndExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
(rule__SignalAndExpression__SubExpressionsAssignment_1_1_1)
{ after(grammarAccess.getSignalAndExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalNotExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalNotExpression__Group_0__0__Impl
	rule__SignalNotExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalNotExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalNotExpressionAccess().getOperatorExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getSignalNotExpressionAccess().getOperatorExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalNotExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalNotExpression__Group_0__1__Impl
	rule__SignalNotExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalNotExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSignalNotExpressionAccess().getOperatorAssignment_0_1()); }
(rule__SignalNotExpression__OperatorAssignment_0_1)
{ after(grammarAccess.getSignalNotExpressionAccess().getOperatorAssignment_0_1()); }
)
(
{ before(grammarAccess.getSignalNotExpressionAccess().getOperatorAssignment_0_1()); }
(rule__SignalNotExpression__OperatorAssignment_0_1)*
{ after(grammarAccess.getSignalNotExpressionAccess().getOperatorAssignment_0_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalNotExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalNotExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalNotExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalNotExpressionAccess().getSubExpressionsAssignment_0_2()); }
(rule__SignalNotExpression__SubExpressionsAssignment_0_2)
{ after(grammarAccess.getSignalNotExpressionAccess().getSubExpressionsAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SignalAtomicExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalAtomicExpression__Group_0__0__Impl
	rule__SignalAtomicExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAtomicExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAtomicExpressionAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getSignalAtomicExpressionAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalAtomicExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalAtomicExpression__Group_0__1__Impl
	rule__SignalAtomicExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAtomicExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAtomicExpressionAccess().getSignalExpressionParserRuleCall_0_1()); }
	ruleSignalExpression
{ after(grammarAccess.getSignalAtomicExpressionAccess().getSignalExpressionParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalAtomicExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalAtomicExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAtomicExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAtomicExpressionAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getSignalAtomicExpressionAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SignalReferenceExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReferenceExpr__Group__0__Impl
	rule__SignalReferenceExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReferenceExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReferenceExprAccess().getSignalReferenceExprAction_0()); }
(

)
{ after(grammarAccess.getSignalReferenceExprAccess().getSignalReferenceExprAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalReferenceExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReferenceExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReferenceExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReferenceExprAccess().getValuedObjectAssignment_1()); }
(rule__SignalReferenceExpr__ValuedObjectAssignment_1)
{ after(grammarAccess.getSignalReferenceExprAccess().getValuedObjectAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalPreExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalPreExpr__Group__0__Impl
	rule__SignalPreExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalPreExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalPreExprAccess().getOperatorExpressionAction_0()); }
(

)
{ after(grammarAccess.getSignalPreExprAccess().getOperatorExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalPreExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalPreExpr__Group__1__Impl
	rule__SignalPreExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalPreExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalPreExprAccess().getOperatorAssignment_1()); }
(rule__SignalPreExpr__OperatorAssignment_1)
{ after(grammarAccess.getSignalPreExprAccess().getOperatorAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalPreExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalPreExpr__Group__2__Impl
	rule__SignalPreExpr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalPreExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalPreExprAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getSignalPreExprAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalPreExpr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalPreExpr__Group__3__Impl
	rule__SignalPreExpr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalPreExpr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalPreExprAccess().getSubExpressionsAssignment_3()); }
(rule__SignalPreExpr__SubExpressionsAssignment_3)
{ after(grammarAccess.getSignalPreExprAccess().getSubExpressionsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalPreExpr__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalPreExpr__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalPreExpr__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalPreExprAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getSignalPreExprAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DelayExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelayExpr__Group__0__Impl
	rule__DelayExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayExprAccess().getAlternatives_0()); }
(rule__DelayExpr__Alternatives_0)?
{ after(grammarAccess.getDelayExprAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelayExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelayExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayExprAccess().getAlternatives_1()); }
(rule__DelayExpr__Alternatives_1)
{ after(grammarAccess.getDelayExprAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DelayExpr__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelayExpr__Group_1_1__0__Impl
	rule__DelayExpr__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayExpr__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayExprAccess().getLeftSquareBracketKeyword_1_1_0()); }

	'[' 

{ after(grammarAccess.getDelayExprAccess().getLeftSquareBracketKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelayExpr__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelayExpr__Group_1_1__1__Impl
	rule__DelayExpr__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayExpr__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayExprAccess().getSignalExprAssignment_1_1_1()); }
(rule__DelayExpr__SignalExprAssignment_1_1_1)
{ after(grammarAccess.getDelayExprAccess().getSignalExprAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelayExpr__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelayExpr__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayExpr__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayExprAccess().getRightSquareBracketKeyword_1_1_2()); }

	']' 

{ after(grammarAccess.getDelayExprAccess().getRightSquareBracketKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
{ after(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
(rule__OrExpression__Group_1__0)?
{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__0__Impl
	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getOrExpressionAccess().getGroup_1_1()); }
(rule__OrExpression__Group_1_1__0)
{ after(grammarAccess.getOrExpressionAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getOrExpressionAccess().getGroup_1_1()); }
(rule__OrExpression__Group_1_1__0)*
{ after(grammarAccess.getOrExpressionAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1_1__0__Impl
	rule__OrExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOperatorAssignment_1_1_0()); }
(rule__OrExpression__OperatorAssignment_1_1_0)
{ after(grammarAccess.getOrExpressionAccess().getOperatorAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
(rule__OrExpression__SubExpressionsAssignment_1_1_1)
{ after(grammarAccess.getOrExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getCompareOperationParserRuleCall_0()); }
	ruleCompareOperation
{ after(grammarAccess.getAndExpressionAccess().getCompareOperationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
(rule__AndExpression__Group_1__0)?
{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAndExpressionAccess().getGroup_1_1()); }
(rule__AndExpression__Group_1_1__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getAndExpressionAccess().getGroup_1_1()); }
(rule__AndExpression__Group_1_1__0)*
{ after(grammarAccess.getAndExpressionAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1_1__0__Impl
	rule__AndExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1_0()); }
(rule__AndExpression__OperatorAssignment_1_1_0)
{ after(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
(rule__AndExpression__SubExpressionsAssignment_1_1_1)
{ after(grammarAccess.getAndExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group__0__Impl
	rule__CompareOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getNotOrValuedExpressionParserRuleCall_0()); }
	ruleNotOrValuedExpression
{ after(grammarAccess.getCompareOperationAccess().getNotOrValuedExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getGroup_1()); }
(rule__CompareOperation__Group_1__0)?
{ after(grammarAccess.getCompareOperationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareOperation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group_1__0__Impl
	rule__CompareOperation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getCompareOperationAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group_1__1__Impl
	rule__CompareOperation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getOperatorAssignment_1_1()); }
(rule__CompareOperation__OperatorAssignment_1_1)
{ after(grammarAccess.getCompareOperationAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getSubExpressionsAssignment_1_2()); }
(rule__CompareOperation__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getCompareOperationAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NotExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotExpression__Group_0__0__Impl
	rule__NotExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getOperatorExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getNotExpressionAccess().getOperatorExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NotExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotExpression__Group_0__1__Impl
	rule__NotExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getOperatorAssignment_0_1()); }
(rule__NotExpression__OperatorAssignment_0_1)
{ after(grammarAccess.getNotExpressionAccess().getOperatorAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NotExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getSubExpressionsAssignment_0_2()); }
(rule__NotExpression__SubExpressionsAssignment_0_2)
{ after(grammarAccess.getNotExpressionAccess().getSubExpressionsAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AddExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group__0__Impl
	rule__AddExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getSubExpressionParserRuleCall_0()); }
	ruleSubExpression
{ after(grammarAccess.getAddExpressionAccess().getSubExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getGroup_1()); }
(rule__AddExpression__Group_1__0)?
{ after(grammarAccess.getAddExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AddExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1__0__Impl
	rule__AddExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getAddExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAddExpressionAccess().getGroup_1_1()); }
(rule__AddExpression__Group_1_1__0)
{ after(grammarAccess.getAddExpressionAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getAddExpressionAccess().getGroup_1_1()); }
(rule__AddExpression__Group_1_1__0)*
{ after(grammarAccess.getAddExpressionAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AddExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1_1__0__Impl
	rule__AddExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getOperatorAssignment_1_1_0()); }
(rule__AddExpression__OperatorAssignment_1_1_0)
{ after(grammarAccess.getAddExpressionAccess().getOperatorAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
(rule__AddExpression__SubExpressionsAssignment_1_1_1)
{ after(grammarAccess.getAddExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SubExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group__0__Impl
	rule__SubExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getMultExpressionParserRuleCall_0()); }
	ruleMultExpression
{ after(grammarAccess.getSubExpressionAccess().getMultExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getGroup_1()); }
(rule__SubExpression__Group_1__0)?
{ after(grammarAccess.getSubExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SubExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group_1__0__Impl
	rule__SubExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getSubExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSubExpressionAccess().getGroup_1_1()); }
(rule__SubExpression__Group_1_1__0)
{ after(grammarAccess.getSubExpressionAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getSubExpressionAccess().getGroup_1_1()); }
(rule__SubExpression__Group_1_1__0)*
{ after(grammarAccess.getSubExpressionAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SubExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group_1_1__0__Impl
	rule__SubExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getOperatorAssignment_1_1_0()); }
(rule__SubExpression__OperatorAssignment_1_1_0)
{ after(grammarAccess.getSubExpressionAccess().getOperatorAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
(rule__SubExpression__SubExpressionsAssignment_1_1_1)
{ after(grammarAccess.getSubExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group__0__Impl
	rule__MultExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getDivExpressionParserRuleCall_0()); }
	ruleDivExpression
{ after(grammarAccess.getMultExpressionAccess().getDivExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getGroup_1()); }
(rule__MultExpression__Group_1__0)?
{ after(grammarAccess.getMultExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group_1__0__Impl
	rule__MultExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getMultExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMultExpressionAccess().getGroup_1_1()); }
(rule__MultExpression__Group_1_1__0)
{ after(grammarAccess.getMultExpressionAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getMultExpressionAccess().getGroup_1_1()); }
(rule__MultExpression__Group_1_1__0)*
{ after(grammarAccess.getMultExpressionAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group_1_1__0__Impl
	rule__MultExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getOperatorAssignment_1_1_0()); }
(rule__MultExpression__OperatorAssignment_1_1_0)
{ after(grammarAccess.getMultExpressionAccess().getOperatorAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
(rule__MultExpression__SubExpressionsAssignment_1_1_1)
{ after(grammarAccess.getMultExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DivExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group__0__Impl
	rule__DivExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getModExpressionParserRuleCall_0()); }
	ruleModExpression
{ after(grammarAccess.getDivExpressionAccess().getModExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getGroup_1()); }
(rule__DivExpression__Group_1__0)?
{ after(grammarAccess.getDivExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DivExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group_1__0__Impl
	rule__DivExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getDivExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group_1__1__Impl
	rule__DivExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getOperatorAssignment_1_1()); }
(rule__DivExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getDivExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getSubExpressionsAssignment_1_2()); }
(rule__DivExpression__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getDivExpressionAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ModExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group__0__Impl
	rule__ModExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getNegExpressionParserRuleCall_0()); }
	ruleNegExpression
{ after(grammarAccess.getModExpressionAccess().getNegExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getGroup_1()); }
(rule__ModExpression__Group_1__0)?
{ after(grammarAccess.getModExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group_1__0__Impl
	rule__ModExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getModExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group_1__1__Impl
	rule__ModExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getOperatorAssignment_1_1()); }
(rule__ModExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getModExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getSubExpressionsAssignment_1_2()); }
(rule__ModExpression__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getModExpressionAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NegExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NegExpression__Group_0__0__Impl
	rule__NegExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getOperatorExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getNegExpressionAccess().getOperatorExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NegExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NegExpression__Group_0__1__Impl
	rule__NegExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getOperatorAssignment_0_1()); }
(rule__NegExpression__OperatorAssignment_0_1)
{ after(grammarAccess.getNegExpressionAccess().getOperatorAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NegExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NegExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getSubExpressionsAssignment_0_2()); }
(rule__NegExpression__SubExpressionsAssignment_0_2)
{ after(grammarAccess.getNegExpressionAccess().getSubExpressionsAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ValuedObjectTestExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_0__0__Impl
	rule__ValuedObjectTestExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectTestExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_0__1__Impl
	rule__ValuedObjectTestExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAssignment_0_1()); }
(rule__ValuedObjectTestExpression__OperatorAssignment_0_1)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectTestExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_0__2__Impl
	rule__ValuedObjectTestExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getLeftParenthesisKeyword_0_2()); }

	'(' 

{ after(grammarAccess.getValuedObjectTestExpressionAccess().getLeftParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectTestExpression__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_0__3__Impl
	rule__ValuedObjectTestExpression__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsAssignment_0_3()); }
(rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_3)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectTestExpression__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getRightParenthesisKeyword_0_4()); }

	')' 

{ after(grammarAccess.getValuedObjectTestExpressionAccess().getRightParenthesisKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ValuedObjectTestExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_1__0__Impl
	rule__ValuedObjectTestExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectTestExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_1__1__Impl
	rule__ValuedObjectTestExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAssignment_1_1()); }
(rule__ValuedObjectTestExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectTestExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsAssignment_1_2()); }
(rule__ValuedObjectTestExpression__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Pause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pause__Group__0__Impl
	rule__Pause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPauseAccess().getPauseAction_0()); }
(

)
{ after(grammarAccess.getPauseAccess().getPauseAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pause__Group__1__Impl
	rule__Pause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPauseAccess().getAnnotationsAssignment_1()); }
(rule__Pause__AnnotationsAssignment_1)*
{ after(grammarAccess.getPauseAccess().getAnnotationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPauseAccess().getPauseKeyword_2()); }

	'pause' 

{ after(grammarAccess.getPauseAccess().getPauseKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Label__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group__0__Impl
	rule__Label__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getAnnotationsAssignment_0()); }
(rule__Label__AnnotationsAssignment_0)*
{ after(grammarAccess.getLabelAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getGroup_1()); }
(rule__Label__Group_1__0)
{ after(grammarAccess.getLabelAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Label__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group_1__0__Impl
	rule__Label__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getNameAssignment_1_0()); }
(rule__Label__NameAssignment_1_0)
{ after(grammarAccess.getLabelAccess().getNameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Label__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getColonKeyword_1_1()); }

	':' 

{ after(grammarAccess.getLabelAccess().getColonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Goto__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Goto__Group__0__Impl
	rule__Goto__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Goto__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoAccess().getGotoKeyword_0()); }

	'goto' 

{ after(grammarAccess.getGotoAccess().getGotoKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Goto__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Goto__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Goto__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoAccess().getTargetAssignment_1()); }
(rule__Goto__TargetAssignment_1)
{ after(grammarAccess.getGotoAccess().getTargetAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Assignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getAnnotationsAssignment_0()); }
(rule__Assignment__AnnotationsAssignment_0)*
{ after(grammarAccess.getAssignmentAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getValuedObjectAssignment_1()); }
(rule__Assignment__ValuedObjectAssignment_1)
{ after(grammarAccess.getAssignmentAccess().getValuedObjectAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__2__Impl
	rule__Assignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getGroup_2()); }
(rule__Assignment__Group_2__0)*
{ after(grammarAccess.getAssignmentAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__3__Impl
	rule__Assignment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getAssignmentAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getExpressionAssignment_4()); }
(rule__Assignment__ExpressionAssignment_4)
{ after(grammarAccess.getAssignmentAccess().getExpressionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Assignment__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_2__0__Impl
	rule__Assignment__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getLeftSquareBracketKeyword_2_0()); }

	'[' 

{ after(grammarAccess.getAssignmentAccess().getLeftSquareBracketKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_2__1__Impl
	rule__Assignment__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getIndicesAssignment_2_1()); }
(rule__Assignment__IndicesAssignment_2_1)
{ after(grammarAccess.getAssignmentAccess().getIndicesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getRightSquareBracketKeyword_2_2()); }

	']' 

{ after(grammarAccess.getAssignmentAccess().getRightSquareBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__AnnotatedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotatedExpression__Group__0__Impl
	rule__AnnotatedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatedExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotatedExpressionAccess().getAnnotationsAssignment_0()); }
(rule__AnnotatedExpression__AnnotationsAssignment_0)*
{ after(grammarAccess.getAnnotatedExpressionAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotatedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotatedExpression__Group__1__Impl
	rule__AnnotatedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatedExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotatedExpressionAccess().getExpressionKeyword_1()); }

	'expression' 

{ after(grammarAccess.getAnnotatedExpressionAccess().getExpressionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotatedExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotatedExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatedExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotatedExpressionAccess().getExpressionAssignment_2()); }
(rule__AnnotatedExpression__ExpressionAssignment_2)
{ after(grammarAccess.getAnnotatedExpressionAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__0__Impl
	rule__Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getAnnotationsAssignment_0()); }
(rule__Declaration__AnnotationsAssignment_0)*
{ after(grammarAccess.getDeclarationAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__1__Impl
	rule__Declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getConstAssignment_1()); }
(rule__Declaration__ConstAssignment_1)?
{ after(grammarAccess.getDeclarationAccess().getConstAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__2__Impl
	rule__Declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getExternAssignment_2()); }
(rule__Declaration__ExternAssignment_2)?
{ after(grammarAccess.getDeclarationAccess().getExternAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__3__Impl
	rule__Declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getVolatileAssignment_3()); }
(rule__Declaration__VolatileAssignment_3)?
{ after(grammarAccess.getDeclarationAccess().getVolatileAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__4__Impl
	rule__Declaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getInputAssignment_4()); }
(rule__Declaration__InputAssignment_4)?
{ after(grammarAccess.getDeclarationAccess().getInputAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__5__Impl
	rule__Declaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getOutputAssignment_5()); }
(rule__Declaration__OutputAssignment_5)?
{ after(grammarAccess.getDeclarationAccess().getOutputAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__6__Impl
	rule__Declaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getStaticAssignment_6()); }
(rule__Declaration__StaticAssignment_6)?
{ after(grammarAccess.getDeclarationAccess().getStaticAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__7__Impl
	rule__Declaration__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getAlternatives_7()); }
(rule__Declaration__Alternatives_7)
{ after(grammarAccess.getDeclarationAccess().getAlternatives_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__8__Impl
	rule__Declaration__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getValuedObjectsAssignment_8()); }
(rule__Declaration__ValuedObjectsAssignment_8)
{ after(grammarAccess.getDeclarationAccess().getValuedObjectsAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__9__Impl
	rule__Declaration__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getGroup_9()); }
(rule__Declaration__Group_9__0)*
{ after(grammarAccess.getDeclarationAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSemicolonKeyword_10()); }

	';' 

{ after(grammarAccess.getDeclarationAccess().getSemicolonKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Declaration__Group_7_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_7_0__0__Impl
	rule__Declaration__Group_7_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_7_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSignalAssignment_7_0_0()); }
(rule__Declaration__SignalAssignment_7_0_0)?
{ after(grammarAccess.getDeclarationAccess().getSignalAssignment_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_7_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_7_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_7_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getTypeAssignment_7_0_1()); }
(rule__Declaration__TypeAssignment_7_0_1)
{ after(grammarAccess.getDeclarationAccess().getTypeAssignment_7_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Declaration__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_9__0__Impl
	rule__Declaration__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getCommaKeyword_9_0()); }

	',' 

{ after(grammarAccess.getDeclarationAccess().getCommaKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getValuedObjectsAssignment_9_1()); }
(rule__Declaration__ValuedObjectsAssignment_9_1)
{ after(grammarAccess.getDeclarationAccess().getValuedObjectsAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ValuedObject__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group__0__Impl
	rule__ValuedObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getNameAssignment_0()); }
(rule__ValuedObject__NameAssignment_0)
{ after(grammarAccess.getValuedObjectAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObject__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group__1__Impl
	rule__ValuedObject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getGroup_1()); }
(rule__ValuedObject__Group_1__0)*
{ after(grammarAccess.getValuedObjectAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObject__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group__2__Impl
	rule__ValuedObject__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getGroup_2()); }
(rule__ValuedObject__Group_2__0)?
{ after(grammarAccess.getValuedObjectAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObject__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getGroup_3()); }
(rule__ValuedObject__Group_3__0)?
{ after(grammarAccess.getValuedObjectAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ValuedObject__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group_1__0__Impl
	rule__ValuedObject__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getValuedObjectAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObject__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group_1__1__Impl
	rule__ValuedObject__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getCardinalitiesAssignment_1_1()); }
(rule__ValuedObject__CardinalitiesAssignment_1_1)
{ after(grammarAccess.getValuedObjectAccess().getCardinalitiesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObject__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getValuedObjectAccess().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ValuedObject__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group_2__0__Impl
	rule__ValuedObject__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getEqualsSignKeyword_2_0()); }

	'=' 

{ after(grammarAccess.getValuedObjectAccess().getEqualsSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObject__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getInitialValueAssignment_2_1()); }
(rule__ValuedObject__InitialValueAssignment_2_1)
{ after(grammarAccess.getValuedObjectAccess().getInitialValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ValuedObject__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group_3__0__Impl
	rule__ValuedObject__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getCombineKeyword_3_0()); }

	'combine' 

{ after(grammarAccess.getValuedObjectAccess().getCombineKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObject__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObject__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getCombineOperatorAssignment_3_1()); }
(rule__ValuedObject__CombineOperatorAssignment_3_1)
{ after(grammarAccess.getValuedObjectAccess().getCombineOperatorAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Emission__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group__0__Impl
	rule__Emission__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getAnnotationsAssignment_0()); }
(rule__Emission__AnnotationsAssignment_0)*
{ after(grammarAccess.getEmissionAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emission__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group__1__Impl
	rule__Emission__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getValuedObjectAssignment_1()); }
(rule__Emission__ValuedObjectAssignment_1)
{ after(grammarAccess.getEmissionAccess().getValuedObjectAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emission__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getGroup_2()); }
(rule__Emission__Group_2__0)?
{ after(grammarAccess.getEmissionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Emission__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group_2__0__Impl
	rule__Emission__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getEmissionAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emission__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group_2__1__Impl
	rule__Emission__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getNewValueAssignment_2_1()); }
(rule__Emission__NewValueAssignment_2_1)
{ after(grammarAccess.getEmissionAccess().getNewValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emission__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getEmissionAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PostfixEffect__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixEffect__Group__0__Impl
	rule__PostfixEffect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixEffect__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixEffectAccess().getAnnotationsAssignment_0()); }
(rule__PostfixEffect__AnnotationsAssignment_0)*
{ after(grammarAccess.getPostfixEffectAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixEffect__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixEffect__Group__1__Impl
	rule__PostfixEffect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixEffect__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixEffectAccess().getValuedObjectAssignment_1()); }
(rule__PostfixEffect__ValuedObjectAssignment_1)
{ after(grammarAccess.getPostfixEffectAccess().getValuedObjectAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixEffect__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixEffect__Group__2__Impl
	rule__PostfixEffect__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixEffect__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixEffectAccess().getGroup_2()); }
(rule__PostfixEffect__Group_2__0)*
{ after(grammarAccess.getPostfixEffectAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixEffect__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixEffect__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixEffect__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixEffectAccess().getOperatorAssignment_3()); }
(rule__PostfixEffect__OperatorAssignment_3)
{ after(grammarAccess.getPostfixEffectAccess().getOperatorAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PostfixEffect__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixEffect__Group_2__0__Impl
	rule__PostfixEffect__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixEffect__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixEffectAccess().getLeftSquareBracketKeyword_2_0()); }

	'[' 

{ after(grammarAccess.getPostfixEffectAccess().getLeftSquareBracketKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixEffect__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixEffect__Group_2__1__Impl
	rule__PostfixEffect__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixEffect__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixEffectAccess().getIndicesAssignment_2_1()); }
(rule__PostfixEffect__IndicesAssignment_2_1)
{ after(grammarAccess.getPostfixEffectAccess().getIndicesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixEffect__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixEffect__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixEffect__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixEffectAccess().getRightSquareBracketKeyword_2_2()); }

	']' 

{ after(grammarAccess.getPostfixEffectAccess().getRightSquareBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__HostcodeEffect__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HostcodeEffect__Group__0__Impl
	rule__HostcodeEffect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HostcodeEffect__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHostcodeEffectAccess().getAnnotationsAssignment_0()); }
(rule__HostcodeEffect__AnnotationsAssignment_0)*
{ after(grammarAccess.getHostcodeEffectAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HostcodeEffect__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HostcodeEffect__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HostcodeEffect__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHostcodeEffectAccess().getTextAssignment_1()); }
(rule__HostcodeEffect__TextAssignment_1)
{ after(grammarAccess.getHostcodeEffectAccess().getTextAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionCallEffect__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group__0__Impl
	rule__FunctionCallEffect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getAnnotationsAssignment_0()); }
(rule__FunctionCallEffect__AnnotationsAssignment_0)*
{ after(grammarAccess.getFunctionCallEffectAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group__1__Impl
	rule__FunctionCallEffect__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getLessThanSignKeyword_1()); }

	'<' 

{ after(grammarAccess.getFunctionCallEffectAccess().getLessThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group__2__Impl
	rule__FunctionCallEffect__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getFunctionNameAssignment_2()); }
(rule__FunctionCallEffect__FunctionNameAssignment_2)
{ after(grammarAccess.getFunctionCallEffectAccess().getFunctionNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group__3__Impl
	rule__FunctionCallEffect__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getAlternatives_3()); }
(rule__FunctionCallEffect__Alternatives_3)?
{ after(grammarAccess.getFunctionCallEffectAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getGreaterThanSignKeyword_4()); }

	'>' 

{ after(grammarAccess.getFunctionCallEffectAccess().getGreaterThanSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FunctionCallEffect__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_3_0__0__Impl
	rule__FunctionCallEffect__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisKeyword_3_0_0()); }

	'(' 

{ after(grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_3_0__1__Impl
	rule__FunctionCallEffect__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getParametersAssignment_3_0_1()); }
(rule__FunctionCallEffect__ParametersAssignment_3_0_1)
{ after(grammarAccess.getFunctionCallEffectAccess().getParametersAssignment_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group_3_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_3_0__2__Impl
	rule__FunctionCallEffect__Group_3_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_3_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getGroup_3_0_2()); }
(rule__FunctionCallEffect__Group_3_0_2__0)*
{ after(grammarAccess.getFunctionCallEffectAccess().getGroup_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group_3_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_3_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_3_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getRightParenthesisKeyword_3_0_3()); }

	')' 

{ after(grammarAccess.getFunctionCallEffectAccess().getRightParenthesisKeyword_3_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionCallEffect__Group_3_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_3_0_2__0__Impl
	rule__FunctionCallEffect__Group_3_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_3_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getCommaKeyword_3_0_2_0()); }

	',' 

{ after(grammarAccess.getFunctionCallEffectAccess().getCommaKeyword_3_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCallEffect__Group_3_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCallEffect__Group_3_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__Group_3_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getParametersAssignment_3_0_2_1()); }
(rule__FunctionCallEffect__ParametersAssignment_3_0_2_1)
{ after(grammarAccess.getFunctionCallEffectAccess().getParametersAssignment_3_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group__0__Impl
	rule__LogicalOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0()); }
	ruleLogicalAndExpression
{ after(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getGroup_1()); }
(rule__LogicalOrExpression__Group_1__0)?
{ after(grammarAccess.getLogicalOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalOrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group_1__0__Impl
	rule__LogicalOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getLogicalOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getGroup_1_1()); }
(rule__LogicalOrExpression__Group_1_1__0)
{ after(grammarAccess.getLogicalOrExpressionAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getGroup_1_1()); }
(rule__LogicalOrExpression__Group_1_1__0)*
{ after(grammarAccess.getLogicalOrExpressionAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalOrExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group_1_1__0__Impl
	rule__LogicalOrExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getOperatorAssignment_1_1_0()); }
(rule__LogicalOrExpression__OperatorAssignment_1_1_0)
{ after(grammarAccess.getLogicalOrExpressionAccess().getOperatorAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalOrExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalOrExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
(rule__LogicalOrExpression__SubExpressionsAssignment_1_1_1)
{ after(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group__0__Impl
	rule__LogicalAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getBitwiseOrExpressionParserRuleCall_0()); }
	ruleBitwiseOrExpression
{ after(grammarAccess.getLogicalAndExpressionAccess().getBitwiseOrExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getGroup_1()); }
(rule__LogicalAndExpression__Group_1__0)?
{ after(grammarAccess.getLogicalAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalAndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group_1__0__Impl
	rule__LogicalAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getLogicalAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getGroup_1_1()); }
(rule__LogicalAndExpression__Group_1_1__0)
{ after(grammarAccess.getLogicalAndExpressionAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getGroup_1_1()); }
(rule__LogicalAndExpression__Group_1_1__0)*
{ after(grammarAccess.getLogicalAndExpressionAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LogicalAndExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group_1_1__0__Impl
	rule__LogicalAndExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getOperatorAssignment_1_1_0()); }
(rule__LogicalAndExpression__OperatorAssignment_1_1_0)
{ after(grammarAccess.getLogicalAndExpressionAccess().getOperatorAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LogicalAndExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LogicalAndExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
(rule__LogicalAndExpression__SubExpressionsAssignment_1_1_1)
{ after(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseOrExpression__Group__0__Impl
	rule__BitwiseOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getBitwiseAndExpressionParserRuleCall_0()); }
	ruleBitwiseAndExpression
{ after(grammarAccess.getBitwiseOrExpressionAccess().getBitwiseAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getGroup_1()); }
(rule__BitwiseOrExpression__Group_1__0)?
{ after(grammarAccess.getBitwiseOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseOrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseOrExpression__Group_1__0__Impl
	rule__BitwiseOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getBitwiseOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseOrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseOrExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getGroup_1_1()); }
(rule__BitwiseOrExpression__Group_1_1__0)
{ after(grammarAccess.getBitwiseOrExpressionAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getGroup_1_1()); }
(rule__BitwiseOrExpression__Group_1_1__0)*
{ after(grammarAccess.getBitwiseOrExpressionAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseOrExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseOrExpression__Group_1_1__0__Impl
	rule__BitwiseOrExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getOperatorAssignment_1_1_0()); }
(rule__BitwiseOrExpression__OperatorAssignment_1_1_0)
{ after(grammarAccess.getBitwiseOrExpressionAccess().getOperatorAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseOrExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseOrExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
(rule__BitwiseOrExpression__SubExpressionsAssignment_1_1_1)
{ after(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpression__Group__0__Impl
	rule__BitwiseAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getCompareOperationParserRuleCall_0()); }
	ruleCompareOperation
{ after(grammarAccess.getBitwiseAndExpressionAccess().getCompareOperationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getGroup_1()); }
(rule__BitwiseAndExpression__Group_1__0)?
{ after(grammarAccess.getBitwiseAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseAndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpression__Group_1__0__Impl
	rule__BitwiseAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getBitwiseAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseAndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getGroup_1_1()); }
(rule__BitwiseAndExpression__Group_1_1__0)
{ after(grammarAccess.getBitwiseAndExpressionAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getGroup_1_1()); }
(rule__BitwiseAndExpression__Group_1_1__0)*
{ after(grammarAccess.getBitwiseAndExpressionAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitwiseAndExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpression__Group_1_1__0__Impl
	rule__BitwiseAndExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getOperatorAssignment_1_1_0()); }
(rule__BitwiseAndExpression__OperatorAssignment_1_1_0)
{ after(grammarAccess.getBitwiseAndExpressionAccess().getOperatorAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitwiseAndExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitwiseAndExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
(rule__BitwiseAndExpression__SubExpressionsAssignment_1_1_1)
{ after(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ValuedObjectReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectReference__Group__0__Impl
	rule__ValuedObjectReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectAssignment_0()); }
(rule__ValuedObjectReference__ValuedObjectAssignment_0)
{ after(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getGroup_1()); }
(rule__ValuedObjectReference__Group_1__0)*
{ after(grammarAccess.getValuedObjectReferenceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ValuedObjectReference__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectReference__Group_1__0__Impl
	rule__ValuedObjectReference__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectReference__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getValuedObjectReferenceAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectReference__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectReference__Group_1__1__Impl
	rule__ValuedObjectReference__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectReference__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getIndicesAssignment_1_1()); }
(rule__ValuedObjectReference__IndicesAssignment_1_1)
{ after(grammarAccess.getValuedObjectReferenceAccess().getIndicesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectReference__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectReference__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectReference__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getValuedObjectReferenceAccess().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FunctionCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__0__Impl
	rule__FunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getFunctionCallAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__1__Impl
	rule__FunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getFunctionNameAssignment_1()); }
(rule__FunctionCall__FunctionNameAssignment_1)
{ after(grammarAccess.getFunctionCallAccess().getFunctionNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__2__Impl
	rule__FunctionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getAlternatives_2()); }
(rule__FunctionCall__Alternatives_2)?
{ after(grammarAccess.getFunctionCallAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getGreaterThanSignKeyword_3()); }

	'>' 

{ after(grammarAccess.getFunctionCallAccess().getGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionCall__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_2_0__0__Impl
	rule__FunctionCall__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_2_0_0()); }

	'(' 

{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_2_0__1__Impl
	rule__FunctionCall__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getParametersAssignment_2_0_1()); }
(rule__FunctionCall__ParametersAssignment_2_0_1)
{ after(grammarAccess.getFunctionCallAccess().getParametersAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_2_0__2__Impl
	rule__FunctionCall__Group_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getGroup_2_0_2()); }
(rule__FunctionCall__Group_2_0_2__0)*
{ after(grammarAccess.getFunctionCallAccess().getGroup_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_2_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_2_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_2_0_3()); }

	')' 

{ after(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_2_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionCall__Group_2_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_2_0_2__0__Impl
	rule__FunctionCall__Group_2_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getCommaKeyword_2_0_2_0()); }

	',' 

{ after(grammarAccess.getFunctionCallAccess().getCommaKeyword_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_2_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionCall__Group_2_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getParametersAssignment_2_0_2_1()); }
(rule__FunctionCall__ParametersAssignment_2_0_2_1)
{ after(grammarAccess.getFunctionCallAccess().getParametersAssignment_2_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getGroup_0()); }
(rule__Parameter__Group_0__0)?
{ after(grammarAccess.getParameterAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getExpressionAssignment_1()); }
(rule__Parameter__ExpressionAssignment_1)
{ after(grammarAccess.getParameterAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_0__0__Impl
	rule__Parameter__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getPureOutputAssignment_0_0()); }
(rule__Parameter__PureOutputAssignment_0_0)?
{ after(grammarAccess.getParameterAccess().getPureOutputAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getCallByReferenceAssignment_0_1()); }
(rule__Parameter__CallByReferenceAssignment_0_1)
{ after(grammarAccess.getParameterAccess().getCallByReferenceAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TagAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group__0__Impl
	rule__TagAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getTagAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getNameAssignment_1()); }
(rule__TagAnnotation__NameAssignment_1)
{ after(grammarAccess.getTagAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__KeyStringValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group__0__Impl
	rule__KeyStringValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group__1__Impl
	rule__KeyStringValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getNameAssignment_1()); }
(rule__KeyStringValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group__2__Impl
	rule__KeyStringValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getValuesAssignment_2()); }
(rule__KeyStringValueAnnotation__ValuesAssignment_2)
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getValuesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getGroup_3()); }
(rule__KeyStringValueAnnotation__Group_3__0)*
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__KeyStringValueAnnotation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group_3__0__Impl
	rule__KeyStringValueAnnotation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getKeyStringValueAnnotationAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getValuesAssignment_3_1()); }
(rule__KeyStringValueAnnotation__ValuesAssignment_3_1)
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getValuesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypedKeyStringValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__0__Impl
	rule__TypedKeyStringValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__1__Impl
	rule__TypedKeyStringValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameAssignment_1()); }
(rule__TypedKeyStringValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__2__Impl
	rule__TypedKeyStringValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__3__Impl
	rule__TypedKeyStringValueAnnotation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeAssignment_3()); }
(rule__TypedKeyStringValueAnnotation__TypeAssignment_3)
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__4__Impl
	rule__TypedKeyStringValueAnnotation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__5__Impl
	rule__TypedKeyStringValueAnnotation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesAssignment_5()); }
(rule__TypedKeyStringValueAnnotation__ValuesAssignment_5)
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup_6()); }
(rule__TypedKeyStringValueAnnotation__Group_6__0)*
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__TypedKeyStringValueAnnotation__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group_6__0__Impl
	rule__TypedKeyStringValueAnnotation__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesAssignment_6_1()); }
(rule__TypedKeyStringValueAnnotation__ValuesAssignment_6_1)
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QuotedKeyStringValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedKeyStringValueAnnotation__Group__0__Impl
	rule__QuotedKeyStringValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedKeyStringValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuotedKeyStringValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedKeyStringValueAnnotation__Group__1__Impl
	rule__QuotedKeyStringValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedKeyStringValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getNameAssignment_1()); }
(rule__QuotedKeyStringValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuotedKeyStringValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedKeyStringValueAnnotation__Group__2__Impl
	rule__QuotedKeyStringValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedKeyStringValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesAssignment_2()); }
(rule__QuotedKeyStringValueAnnotation__ValuesAssignment_2)
{ after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuotedKeyStringValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedKeyStringValueAnnotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedKeyStringValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getGroup_3()); }
(rule__QuotedKeyStringValueAnnotation__Group_3__0)*
{ after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__QuotedKeyStringValueAnnotation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedKeyStringValueAnnotation__Group_3__0__Impl
	rule__QuotedKeyStringValueAnnotation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedKeyStringValueAnnotation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuotedKeyStringValueAnnotation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedKeyStringValueAnnotation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedKeyStringValueAnnotation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesAssignment_3_1()); }
(rule__QuotedKeyStringValueAnnotation__ValuesAssignment_3_1)
{ after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QuotedTypedKeyStringValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedTypedKeyStringValueAnnotation__Group__0__Impl
	rule__QuotedTypedKeyStringValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedTypedKeyStringValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuotedTypedKeyStringValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedTypedKeyStringValueAnnotation__Group__1__Impl
	rule__QuotedTypedKeyStringValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedTypedKeyStringValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getNameAssignment_1()); }
(rule__QuotedTypedKeyStringValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuotedTypedKeyStringValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedTypedKeyStringValueAnnotation__Group__2__Impl
	rule__QuotedTypedKeyStringValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedTypedKeyStringValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuotedTypedKeyStringValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedTypedKeyStringValueAnnotation__Group__3__Impl
	rule__QuotedTypedKeyStringValueAnnotation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedTypedKeyStringValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getTypeAssignment_3()); }
(rule__QuotedTypedKeyStringValueAnnotation__TypeAssignment_3)
{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuotedTypedKeyStringValueAnnotation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedTypedKeyStringValueAnnotation__Group__4__Impl
	rule__QuotedTypedKeyStringValueAnnotation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedTypedKeyStringValueAnnotation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuotedTypedKeyStringValueAnnotation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedTypedKeyStringValueAnnotation__Group__5__Impl
	rule__QuotedTypedKeyStringValueAnnotation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedTypedKeyStringValueAnnotation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesAssignment_5()); }
(rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_5)
{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuotedTypedKeyStringValueAnnotation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedTypedKeyStringValueAnnotation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedTypedKeyStringValueAnnotation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getGroup_6()); }
(rule__QuotedTypedKeyStringValueAnnotation__Group_6__0)*
{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__QuotedTypedKeyStringValueAnnotation__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedTypedKeyStringValueAnnotation__Group_6__0__Impl
	rule__QuotedTypedKeyStringValueAnnotation__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedTypedKeyStringValueAnnotation__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0()); }

	',' 

{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QuotedTypedKeyStringValueAnnotation__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QuotedTypedKeyStringValueAnnotation__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedTypedKeyStringValueAnnotation__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesAssignment_6_1()); }
(rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_6_1)
{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__KeyBooleanValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group__0__Impl
	rule__KeyBooleanValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyBooleanValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group__1__Impl
	rule__KeyBooleanValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getNameAssignment_1()); }
(rule__KeyBooleanValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyBooleanValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getValueAssignment_2()); }
(rule__KeyBooleanValueAnnotation__ValueAssignment_2)
{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__KeyIntValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group__0__Impl
	rule__KeyIntValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getKeyIntValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyIntValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group__1__Impl
	rule__KeyIntValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getNameAssignment_1()); }
(rule__KeyIntValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getKeyIntValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyIntValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getValueAssignment_2()); }
(rule__KeyIntValueAnnotation__ValueAssignment_2)
{ after(grammarAccess.getKeyIntValueAnnotationAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__KeyFloatValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group__0__Impl
	rule__KeyFloatValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyFloatValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group__1__Impl
	rule__KeyFloatValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getNameAssignment_1()); }
(rule__KeyFloatValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyFloatValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getValueAssignment_2()); }
(rule__KeyFloatValueAnnotation__ValueAssignment_2)
{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExtendedID__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group__0__Impl
	rule__ExtendedID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedID__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group__1__Impl
	rule__ExtendedID__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getGroup_1()); }
(rule__ExtendedID__Group_1__0)*
{ after(grammarAccess.getExtendedIDAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedID__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getGroup_2()); }
(rule__ExtendedID__Group_2__0)?
{ after(grammarAccess.getExtendedIDAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExtendedID__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group_1__0__Impl
	rule__ExtendedID__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedID__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExtendedID__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group_2__0__Impl
	rule__ExtendedID__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getNumberSignKeyword_2_0()); }

	'#' 

{ after(grammarAccess.getExtendedIDAccess().getNumberSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedID__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getINTTerminalRuleCall_2_1()); }
	RULE_INT
{ after(grammarAccess.getExtendedIDAccess().getINTTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Integer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Integer__Group__0__Impl
	rule__Integer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Integer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Integer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Integer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Integer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Floateger__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Floateger__Group__0__Impl
	rule__Floateger__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Floateger__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloategerAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getFloategerAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Floateger__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Floateger__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Floateger__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloategerAccess().getFLOATTerminalRuleCall_1()); }
	RULE_FLOAT
{ after(grammarAccess.getFloategerAccess().getFLOATTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__SCEstProgram__ModulesAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstProgramAccess().getModulesSCEstModuleParserRuleCall_0()); }
	ruleSCEstModule{ after(grammarAccess.getSCEstProgramAccess().getModulesSCEstModuleParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__AnnotationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
	ruleAnnotation{ after(grammarAccess.getSCEstModuleAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getSCEstModuleAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__IntSignalDeclsAssignment_5_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getIntSignalDeclsInterfaceSignalDeclParserRuleCall_5_0_0_0_0()); }
	ruleInterfaceSignalDecl{ after(grammarAccess.getSCEstModuleAccess().getIntSignalDeclsInterfaceSignalDeclParserRuleCall_5_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__IntTypeDeclsAssignment_5_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getIntTypeDeclsTypeDeclParserRuleCall_5_0_0_1_0()); }
	ruleTypeDecl{ after(grammarAccess.getSCEstModuleAccess().getIntTypeDeclsTypeDeclParserRuleCall_5_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__IntSensorDeclsAssignment_5_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getIntSensorDeclsSensorDeclParserRuleCall_5_0_0_2_0()); }
	ruleSensorDecl{ after(grammarAccess.getSCEstModuleAccess().getIntSensorDeclsSensorDeclParserRuleCall_5_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__IntConstantDeclsAssignment_5_0_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getIntConstantDeclsConstantDeclsParserRuleCall_5_0_0_3_0()); }
	ruleConstantDecls{ after(grammarAccess.getSCEstModuleAccess().getIntConstantDeclsConstantDeclsParserRuleCall_5_0_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__IntRelationDeclsAssignment_5_0_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getIntRelationDeclsRelationDeclParserRuleCall_5_0_0_4_0()); }
	ruleRelationDecl{ after(grammarAccess.getSCEstModuleAccess().getIntRelationDeclsRelationDeclParserRuleCall_5_0_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__IntTaskDeclsAssignment_5_0_0_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getIntTaskDeclsTaskDeclParserRuleCall_5_0_0_5_0()); }
	ruleTaskDecl{ after(grammarAccess.getSCEstModuleAccess().getIntTaskDeclsTaskDeclParserRuleCall_5_0_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__IntFunctionDeclsAssignment_5_0_0_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getIntFunctionDeclsFunctionDeclParserRuleCall_5_0_0_6_0()); }
	ruleFunctionDecl{ after(grammarAccess.getSCEstModuleAccess().getIntFunctionDeclsFunctionDeclParserRuleCall_5_0_0_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__IntProcedureDeclsAssignment_5_0_0_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getIntProcedureDeclsProcedureDeclParserRuleCall_5_0_0_7_0()); }
	ruleProcedureDecl{ after(grammarAccess.getSCEstModuleAccess().getIntProcedureDeclsProcedureDeclParserRuleCall_5_0_0_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__StatementsAssignment_5_0_1_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getStatementsSCEstStatementParserRuleCall_5_0_1_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getSCEstModuleAccess().getStatementsSCEstStatementParserRuleCall_5_0_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__StatementsAssignment_5_0_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getStatementsMetaStatementParserRuleCall_5_0_1_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getSCEstModuleAccess().getStatementsMetaStatementParserRuleCall_5_0_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__StatementsAssignment_5_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getStatementsSCEstStatementParserRuleCall_5_0_1_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getSCEstModuleAccess().getStatementsSCEstStatementParserRuleCall_5_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__DeclarationsAssignment_5_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getDeclarationsDeclarationParserRuleCall_5_1_0_0()); }
	ruleDeclaration{ after(grammarAccess.getSCEstModuleAccess().getDeclarationsDeclarationParserRuleCall_5_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__StatementsAssignment_5_1_2_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getStatementsSCEstStatementParserRuleCall_5_1_2_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getSCEstModuleAccess().getStatementsSCEstStatementParserRuleCall_5_1_2_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__StatementsAssignment_5_1_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getStatementsMetaStatementParserRuleCall_5_1_2_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getSCEstModuleAccess().getStatementsMetaStatementParserRuleCall_5_1_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SCEstModule__StatementsAssignment_5_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSCEstModuleAccess().getStatementsSCEstStatementParserRuleCall_5_1_2_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getSCEstModuleAccess().getStatementsSCEstStatementParserRuleCall_5_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelParallel__ThreadsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelParallelAccess().getThreadsEsterelThreadParserRuleCall_0_0()); }
	ruleEsterelThread{ after(grammarAccess.getEsterelParallelAccess().getThreadsEsterelThreadParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelParallel__ThreadsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelParallelAccess().getThreadsEsterelThreadParserRuleCall_1_1_0()); }
	ruleEsterelThread{ after(grammarAccess.getEsterelParallelAccess().getThreadsEsterelThreadParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelThread__StatementsAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelThreadAccess().getStatementsSCEstAtomicStatementParserRuleCall_1_0_0_0()); }
	ruleSCEstAtomicStatement{ after(grammarAccess.getEsterelThreadAccess().getStatementsSCEstAtomicStatementParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelThread__StatementsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelThreadAccess().getStatementsMetaStatementParserRuleCall_1_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getEsterelThreadAccess().getStatementsMetaStatementParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelThread__StatementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelThreadAccess().getStatementsSCEstAtomicStatementParserRuleCall_2_0()); }
	ruleSCEstAtomicStatement{ after(grammarAccess.getEsterelThreadAccess().getStatementsSCEstAtomicStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__AnnotationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
	ruleAnnotation{ after(grammarAccess.getBlockAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__StatementsAssignment_3_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementsSCEstStatementParserRuleCall_3_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getBlockAccess().getStatementsSCEstStatementParserRuleCall_3_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__StatementsAssignment_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementsMetaStatementParserRuleCall_3_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getBlockAccess().getStatementsMetaStatementParserRuleCall_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__StatementsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementsSCEstStatementParserRuleCall_3_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getBlockAccess().getStatementsSCEstStatementParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Present__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getPresentAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Present__ExpressionAssignment_2_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getExpressionSignalExpressionParserRuleCall_2_0_0_0_0()); }
	ruleSignalExpression{ after(grammarAccess.getPresentAccess().getExpressionSignalExpressionParserRuleCall_2_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Present__ExpressionAssignment_2_0_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getExpressionSignalExpressionParserRuleCall_2_0_0_1_1_0()); }
	ruleSignalExpression{ after(grammarAccess.getPresentAccess().getExpressionSignalExpressionParserRuleCall_2_0_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Present__ThenAnnotationsAssignment_2_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getThenAnnotationsAnnotationParserRuleCall_2_0_1_0_0()); }
	ruleAnnotation{ after(grammarAccess.getPresentAccess().getThenAnnotationsAnnotationParserRuleCall_2_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Present__ThenStatementsAssignment_2_0_1_2_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getThenStatementsSCEstStatementParserRuleCall_2_0_1_2_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getPresentAccess().getThenStatementsSCEstStatementParserRuleCall_2_0_1_2_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Present__ThenStatementsAssignment_2_0_1_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getThenStatementsMetaStatementParserRuleCall_2_0_1_2_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getPresentAccess().getThenStatementsMetaStatementParserRuleCall_2_0_1_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Present__ThenStatementsAssignment_2_0_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getThenStatementsSCEstStatementParserRuleCall_2_0_1_2_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getPresentAccess().getThenStatementsSCEstStatementParserRuleCall_2_0_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Present__CasesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getCasesPresentCaseParserRuleCall_2_1_0()); }
	rulePresentCase{ after(grammarAccess.getPresentAccess().getCasesPresentCaseParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Present__ElseAnnotationsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getElseAnnotationsAnnotationParserRuleCall_3_0_0()); }
	ruleAnnotation{ after(grammarAccess.getPresentAccess().getElseAnnotationsAnnotationParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Present__ElseStatementsAssignment_3_2_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getElseStatementsSCEstStatementParserRuleCall_3_2_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getPresentAccess().getElseStatementsSCEstStatementParserRuleCall_3_2_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Present__ElseStatementsAssignment_3_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getElseStatementsMetaStatementParserRuleCall_3_2_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getPresentAccess().getElseStatementsMetaStatementParserRuleCall_3_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Present__ElseStatementsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getElseStatementsSCEstStatementParserRuleCall_3_2_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getPresentAccess().getElseStatementsSCEstStatementParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getPresentCaseAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__ExpressionAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getExpressionSignalExpressionParserRuleCall_2_0_0()); }
	ruleSignalExpression{ after(grammarAccess.getPresentCaseAccess().getExpressionSignalExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__ExpressionAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getExpressionSignalExpressionParserRuleCall_2_1_1_0()); }
	ruleSignalExpression{ after(grammarAccess.getPresentCaseAccess().getExpressionSignalExpressionParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__StatementsAssignment_3_1_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getStatementsSCEstStatementParserRuleCall_3_1_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getPresentCaseAccess().getStatementsSCEstStatementParserRuleCall_3_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__StatementsAssignment_3_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getStatementsMetaStatementParserRuleCall_3_1_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getPresentCaseAccess().getStatementsMetaStatementParserRuleCall_3_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__StatementsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getStatementsSCEstStatementParserRuleCall_3_1_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getPresentCaseAccess().getStatementsSCEstStatementParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getIfTestAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getIfTestAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__ThenAnnotationsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getThenAnnotationsAnnotationParserRuleCall_3_0_0()); }
	ruleAnnotation{ after(grammarAccess.getIfTestAccess().getThenAnnotationsAnnotationParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__ThenStatementsAssignment_3_2_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getThenStatementsSCEstStatementParserRuleCall_3_2_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getIfTestAccess().getThenStatementsSCEstStatementParserRuleCall_3_2_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__ThenStatementsAssignment_3_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getThenStatementsMetaStatementParserRuleCall_3_2_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getIfTestAccess().getThenStatementsMetaStatementParserRuleCall_3_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__ThenStatementsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getThenStatementsSCEstStatementParserRuleCall_3_2_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getIfTestAccess().getThenStatementsSCEstStatementParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__ElseifAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getElseifElsIfParserRuleCall_4_0()); }
	ruleElsIf{ after(grammarAccess.getIfTestAccess().getElseifElsIfParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__ElseAnnotationsAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getElseAnnotationsAnnotationParserRuleCall_5_0_0()); }
	ruleAnnotation{ after(grammarAccess.getIfTestAccess().getElseAnnotationsAnnotationParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__ElseStatementsAssignment_5_2_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getElseStatementsSCEstStatementParserRuleCall_5_2_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getIfTestAccess().getElseStatementsSCEstStatementParserRuleCall_5_2_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__ElseStatementsAssignment_5_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getElseStatementsMetaStatementParserRuleCall_5_2_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getIfTestAccess().getElseStatementsMetaStatementParserRuleCall_5_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__ElseStatementsAssignment_5_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getElseStatementsSCEstStatementParserRuleCall_5_2_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getIfTestAccess().getElseStatementsSCEstStatementParserRuleCall_5_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElsIf__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getElsIfAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElsIf__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getElsIfAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElsIf__ThenStatementsAssignment_3_1_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfAccess().getThenStatementsSCEstStatementParserRuleCall_3_1_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getElsIfAccess().getThenStatementsSCEstStatementParserRuleCall_3_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElsIf__ThenStatementsAssignment_3_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfAccess().getThenStatementsMetaStatementParserRuleCall_3_1_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getElsIfAccess().getThenStatementsMetaStatementParserRuleCall_3_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElsIf__ThenStatementsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfAccess().getThenStatementsSCEstStatementParserRuleCall_3_1_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getElsIfAccess().getThenStatementsSCEstStatementParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__AnnotationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
	ruleAnnotation{ after(grammarAccess.getLoopAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__StatementsAssignment_3_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getStatementsSCEstStatementParserRuleCall_3_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getLoopAccess().getStatementsSCEstStatementParserRuleCall_3_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__StatementsAssignment_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getStatementsMetaStatementParserRuleCall_3_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getLoopAccess().getStatementsMetaStatementParserRuleCall_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__StatementsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getStatementsSCEstStatementParserRuleCall_3_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getLoopAccess().getStatementsSCEstStatementParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__DelayAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getDelayDelayExprParserRuleCall_4_1_1_0()); }
	ruleDelayExpr{ after(grammarAccess.getLoopAccess().getDelayDelayExprParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getRepeatAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__PositiveAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getPositivePositiveKeyword_1_0()); }
(
{ before(grammarAccess.getRepeatAccess().getPositivePositiveKeyword_1_0()); }

	'positive' 

{ after(grammarAccess.getRepeatAccess().getPositivePositiveKeyword_1_0()); }
)

{ after(grammarAccess.getRepeatAccess().getPositivePositiveKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getExpressionExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getRepeatAccess().getExpressionExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__StatementsAssignment_5_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getStatementsSCEstStatementParserRuleCall_5_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getRepeatAccess().getStatementsSCEstStatementParserRuleCall_5_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__StatementsAssignment_5_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getStatementsMetaStatementParserRuleCall_5_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getRepeatAccess().getStatementsMetaStatementParserRuleCall_5_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__StatementsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getStatementsSCEstStatementParserRuleCall_5_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getRepeatAccess().getStatementsSCEstStatementParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getAbortAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__WeakAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getWeakWeakKeyword_1_0_0()); }
(
{ before(grammarAccess.getAbortAccess().getWeakWeakKeyword_1_0_0()); }

	'weak' 

{ after(grammarAccess.getAbortAccess().getWeakWeakKeyword_1_0_0()); }
)

{ after(grammarAccess.getAbortAccess().getWeakWeakKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__StatementsAssignment_2_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getStatementsSCEstStatementParserRuleCall_2_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getAbortAccess().getStatementsSCEstStatementParserRuleCall_2_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__StatementsAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getStatementsMetaStatementParserRuleCall_2_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getAbortAccess().getStatementsMetaStatementParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__StatementsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getStatementsSCEstStatementParserRuleCall_2_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getAbortAccess().getStatementsSCEstStatementParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__DelayAssignment_4_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getDelayDelayExprParserRuleCall_4_0_0_0()); }
	ruleDelayExpr{ after(grammarAccess.getAbortAccess().getDelayDelayExprParserRuleCall_4_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__DoStatementsAssignment_4_0_1_1_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getDoStatementsSCEstStatementParserRuleCall_4_0_1_1_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getAbortAccess().getDoStatementsSCEstStatementParserRuleCall_4_0_1_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__DoStatementsAssignment_4_0_1_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getDoStatementsMetaStatementParserRuleCall_4_0_1_1_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getAbortAccess().getDoStatementsMetaStatementParserRuleCall_4_0_1_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__DoStatementsAssignment_4_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getDoStatementsSCEstStatementParserRuleCall_4_0_1_1_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getAbortAccess().getDoStatementsSCEstStatementParserRuleCall_4_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__DelayAssignment_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getDelayDelayExprParserRuleCall_4_1_0_0()); }
	ruleDelayExpr{ after(grammarAccess.getAbortAccess().getDelayDelayExprParserRuleCall_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__CasesAssignment_4_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getCasesCaseParserRuleCall_4_2_0_0()); }
	ruleCase{ after(grammarAccess.getAbortAccess().getCasesCaseParserRuleCall_4_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getCaseAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__DelayAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getDelayDelayExprParserRuleCall_2_0()); }
	ruleDelayExpr{ after(grammarAccess.getCaseAccess().getDelayDelayExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__StatementsAssignment_3_1_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getStatementsSCEstStatementParserRuleCall_3_1_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getCaseAccess().getStatementsSCEstStatementParserRuleCall_3_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__StatementsAssignment_3_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getStatementsMetaStatementParserRuleCall_3_1_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getCaseAccess().getStatementsMetaStatementParserRuleCall_3_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Case__StatementsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCaseAccess().getStatementsSCEstStatementParserRuleCall_3_1_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getCaseAccess().getStatementsSCEstStatementParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Await__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getAwaitAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Await__DelayAssignment_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getDelayDelayExprParserRuleCall_2_0_0_0()); }
	ruleDelayExpr{ after(grammarAccess.getAwaitAccess().getDelayDelayExprParserRuleCall_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Await__StatementsAssignment_2_0_1_1_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getStatementsSCEstStatementParserRuleCall_2_0_1_1_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getAwaitAccess().getStatementsSCEstStatementParserRuleCall_2_0_1_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Await__StatementsAssignment_2_0_1_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getStatementsMetaStatementParserRuleCall_2_0_1_1_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getAwaitAccess().getStatementsMetaStatementParserRuleCall_2_0_1_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Await__StatementsAssignment_2_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getStatementsSCEstStatementParserRuleCall_2_0_1_1_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getAwaitAccess().getStatementsSCEstStatementParserRuleCall_2_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Await__CasesAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getCasesCaseParserRuleCall_2_1_0_0()); }
	ruleCase{ after(grammarAccess.getAwaitAccess().getCasesCaseParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getEveryDoAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__DelayAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getDelayDelayExprParserRuleCall_2_0()); }
	ruleDelayExpr{ after(grammarAccess.getEveryDoAccess().getDelayDelayExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__StatementsAssignment_4_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getStatementsSCEstStatementParserRuleCall_4_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getEveryDoAccess().getStatementsSCEstStatementParserRuleCall_4_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__StatementsAssignment_4_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getStatementsMetaStatementParserRuleCall_4_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getEveryDoAccess().getStatementsMetaStatementParserRuleCall_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__StatementsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getStatementsSCEstStatementParserRuleCall_4_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getEveryDoAccess().getStatementsSCEstStatementParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Suspend__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getSuspendAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Suspend__WeakAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getWeakWeakKeyword_1_0_0()); }
(
{ before(grammarAccess.getSuspendAccess().getWeakWeakKeyword_1_0_0()); }

	'weak' 

{ after(grammarAccess.getSuspendAccess().getWeakWeakKeyword_1_0_0()); }
)

{ after(grammarAccess.getSuspendAccess().getWeakWeakKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Suspend__StatementsAssignment_2_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getStatementsSCEstStatementParserRuleCall_2_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getSuspendAccess().getStatementsSCEstStatementParserRuleCall_2_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Suspend__StatementsAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getStatementsMetaStatementParserRuleCall_2_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getSuspendAccess().getStatementsMetaStatementParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Suspend__StatementsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getStatementsSCEstStatementParserRuleCall_2_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getSuspendAccess().getStatementsSCEstStatementParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Suspend__DelayAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getDelayDelayExprParserRuleCall_4_0()); }
	ruleDelayExpr{ after(grammarAccess.getSuspendAccess().getDelayDelayExprParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getTrapAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__TrapSignalsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getTrapSignalsTrapSignalParserRuleCall_2_0()); }
	ruleTrapSignal{ after(grammarAccess.getTrapAccess().getTrapSignalsTrapSignalParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__TrapSignalsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getTrapSignalsTrapSignalParserRuleCall_3_1_0()); }
	ruleTrapSignal{ after(grammarAccess.getTrapAccess().getTrapSignalsTrapSignalParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__StatementsAssignment_5_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getStatementsSCEstStatementParserRuleCall_5_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getTrapAccess().getStatementsSCEstStatementParserRuleCall_5_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__StatementsAssignment_5_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getStatementsMetaStatementParserRuleCall_5_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getTrapAccess().getStatementsMetaStatementParserRuleCall_5_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__StatementsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getStatementsSCEstStatementParserRuleCall_5_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getTrapAccess().getStatementsSCEstStatementParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__TrapHandlerAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getTrapHandlerTrapHandlerParserRuleCall_6_0()); }
	ruleTrapHandler{ after(grammarAccess.getTrapAccess().getTrapHandlerTrapHandlerParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapHandler__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getTrapHandlerAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapHandler__TrapExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerAccess().getTrapExprTrapExprParserRuleCall_2_0()); }
	ruleTrapExpr{ after(grammarAccess.getTrapHandlerAccess().getTrapExprTrapExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapHandler__StatementsAssignment_4_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerAccess().getStatementsSCEstStatementParserRuleCall_4_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getTrapHandlerAccess().getStatementsSCEstStatementParserRuleCall_4_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapHandler__StatementsAssignment_4_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerAccess().getStatementsMetaStatementParserRuleCall_4_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getTrapHandlerAccess().getStatementsMetaStatementParserRuleCall_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapHandler__StatementsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerAccess().getStatementsSCEstStatementParserRuleCall_4_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getTrapHandlerAccess().getStatementsSCEstStatementParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getExecAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__TaskAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getTaskTaskCrossReference_1_0_1_0()); }
(
{ before(grammarAccess.getExecAccess().getTaskTaskIDTerminalRuleCall_1_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getExecAccess().getTaskTaskIDTerminalRuleCall_1_0_1_0_1()); }
)
{ after(grammarAccess.getExecAccess().getTaskTaskCrossReference_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__VarsAssignment_1_0_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getVarsIVariableCrossReference_1_0_3_0_0()); }
(
{ before(grammarAccess.getExecAccess().getVarsIVariableIDTerminalRuleCall_1_0_3_0_0_1()); }
	RULE_ID{ after(grammarAccess.getExecAccess().getVarsIVariableIDTerminalRuleCall_1_0_3_0_0_1()); }
)
{ after(grammarAccess.getExecAccess().getVarsIVariableCrossReference_1_0_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__VarsAssignment_1_0_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getVarsIVariableCrossReference_1_0_3_1_1_0()); }
(
{ before(grammarAccess.getExecAccess().getVarsIVariableIDTerminalRuleCall_1_0_3_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getExecAccess().getVarsIVariableIDTerminalRuleCall_1_0_3_1_1_0_1()); }
)
{ after(grammarAccess.getExecAccess().getVarsIVariableCrossReference_1_0_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__KexpressionsAssignment_1_0_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getKexpressionsExpressionParserRuleCall_1_0_6_0_0()); }
	ruleExpression{ after(grammarAccess.getExecAccess().getKexpressionsExpressionParserRuleCall_1_0_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__KexpressionsAssignment_1_0_6_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getKexpressionsExpressionParserRuleCall_1_0_6_1_1_0()); }
	ruleExpression{ after(grammarAccess.getExecAccess().getKexpressionsExpressionParserRuleCall_1_0_6_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__RetSignalAssignment_1_0_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getRetSignalISignalCrossReference_1_0_9_0()); }
(
{ before(grammarAccess.getExecAccess().getRetSignalISignalIDTerminalRuleCall_1_0_9_0_1()); }
	RULE_ID{ after(grammarAccess.getExecAccess().getRetSignalISignalIDTerminalRuleCall_1_0_9_0_1()); }
)
{ after(grammarAccess.getExecAccess().getRetSignalISignalCrossReference_1_0_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__StatementsAssignment_1_0_10_1_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getStatementsSCEstStatementParserRuleCall_1_0_10_1_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getExecAccess().getStatementsSCEstStatementParserRuleCall_1_0_10_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__StatementsAssignment_1_0_10_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getStatementsMetaStatementParserRuleCall_1_0_10_1_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getExecAccess().getStatementsMetaStatementParserRuleCall_1_0_10_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__StatementsAssignment_1_0_10_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getStatementsSCEstStatementParserRuleCall_1_0_10_1_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getExecAccess().getStatementsSCEstStatementParserRuleCall_1_0_10_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__ExecCaseListAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getExecCaseListExecCaseParserRuleCall_1_1_1_0()); }
	ruleExecCase{ after(grammarAccess.getExecAccess().getExecCaseListExecCaseParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getExecCaseAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__TaskAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getTaskTaskCrossReference_2_0()); }
(
{ before(grammarAccess.getExecCaseAccess().getTaskTaskIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getExecCaseAccess().getTaskTaskIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getExecCaseAccess().getTaskTaskCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__VarsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getVarsIVariableCrossReference_4_0_0()); }
(
{ before(grammarAccess.getExecCaseAccess().getVarsIVariableIDTerminalRuleCall_4_0_0_1()); }
	RULE_ID{ after(grammarAccess.getExecCaseAccess().getVarsIVariableIDTerminalRuleCall_4_0_0_1()); }
)
{ after(grammarAccess.getExecCaseAccess().getVarsIVariableCrossReference_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__VarsAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getVarsIVariableCrossReference_4_1_1_0()); }
(
{ before(grammarAccess.getExecCaseAccess().getVarsIVariableIDTerminalRuleCall_4_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getExecCaseAccess().getVarsIVariableIDTerminalRuleCall_4_1_1_0_1()); }
)
{ after(grammarAccess.getExecCaseAccess().getVarsIVariableCrossReference_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__KexpressionsAssignment_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getKexpressionsExpressionParserRuleCall_7_0_0()); }
	ruleExpression{ after(grammarAccess.getExecCaseAccess().getKexpressionsExpressionParserRuleCall_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__KexpressionsAssignment_7_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getKexpressionsExpressionParserRuleCall_7_1_1_0()); }
	ruleExpression{ after(grammarAccess.getExecCaseAccess().getKexpressionsExpressionParserRuleCall_7_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__RetSignalAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getRetSignalISignalCrossReference_10_0()); }
(
{ before(grammarAccess.getExecCaseAccess().getRetSignalISignalIDTerminalRuleCall_10_0_1()); }
	RULE_ID{ after(grammarAccess.getExecCaseAccess().getRetSignalISignalIDTerminalRuleCall_10_0_1()); }
)
{ after(grammarAccess.getExecCaseAccess().getRetSignalISignalCrossReference_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__StatementsAssignment_11_1_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getStatementsSCEstStatementParserRuleCall_11_1_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getExecCaseAccess().getStatementsSCEstStatementParserRuleCall_11_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__StatementsAssignment_11_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getStatementsMetaStatementParserRuleCall_11_1_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getExecCaseAccess().getStatementsMetaStatementParserRuleCall_11_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__StatementsAssignment_11_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getStatementsSCEstStatementParserRuleCall_11_1_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getExecCaseAccess().getStatementsSCEstStatementParserRuleCall_11_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getLocalSignalDeclAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__SignalsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getSignalsISignalParserRuleCall_2_0()); }
	ruleISignal{ after(grammarAccess.getLocalSignalDeclAccess().getSignalsISignalParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__SignalsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getSignalsISignalParserRuleCall_3_1_0()); }
	ruleISignal{ after(grammarAccess.getLocalSignalDeclAccess().getSignalsISignalParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__StatementsAssignment_5_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getStatementsSCEstStatementParserRuleCall_5_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getLocalSignalDeclAccess().getStatementsSCEstStatementParserRuleCall_5_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__StatementsAssignment_5_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getStatementsMetaStatementParserRuleCall_5_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getLocalSignalDeclAccess().getStatementsMetaStatementParserRuleCall_5_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__StatementsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getStatementsSCEstStatementParserRuleCall_5_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getLocalSignalDeclAccess().getStatementsSCEstStatementParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getLocalVariableAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__VarDeclsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getVarDeclsVariableDeclParserRuleCall_2_0()); }
	ruleVariableDecl{ after(grammarAccess.getLocalVariableAccess().getVarDeclsVariableDeclParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__VarDeclsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getVarDeclsVariableDeclParserRuleCall_3_1_0()); }
	ruleVariableDecl{ after(grammarAccess.getLocalVariableAccess().getVarDeclsVariableDeclParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__StatementsAssignment_5_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getStatementsSCEstStatementParserRuleCall_5_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getLocalVariableAccess().getStatementsSCEstStatementParserRuleCall_5_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__StatementsAssignment_5_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getStatementsMetaStatementParserRuleCall_5_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getLocalVariableAccess().getStatementsMetaStatementParserRuleCall_5_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__StatementsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getStatementsSCEstStatementParserRuleCall_5_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getLocalVariableAccess().getStatementsSCEstStatementParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleRenaming__ModuleAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleRenamingAccess().getModuleSCEstModuleCrossReference_0_0()); }
(
{ before(grammarAccess.getModuleRenamingAccess().getModuleSCEstModuleIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getModuleRenamingAccess().getModuleSCEstModuleIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getModuleRenamingAccess().getModuleSCEstModuleCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleRenaming__NewNameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleRenamingAccess().getNewNameIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getModuleRenamingAccess().getNewNameIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleRenaming__ModuleAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleRenamingAccess().getModuleSCEstModuleCrossReference_1_2_0()); }
(
{ before(grammarAccess.getModuleRenamingAccess().getModuleSCEstModuleIDTerminalRuleCall_1_2_0_1()); }
	RULE_ID{ after(grammarAccess.getModuleRenamingAccess().getModuleSCEstModuleIDTerminalRuleCall_1_2_0_1()); }
)
{ after(grammarAccess.getModuleRenamingAccess().getModuleSCEstModuleCrossReference_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Do__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getDoAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Do__StatementsAssignment_2_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getStatementsSCEstStatementParserRuleCall_2_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getDoAccess().getStatementsSCEstStatementParserRuleCall_2_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Do__StatementsAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getStatementsMetaStatementParserRuleCall_2_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getDoAccess().getStatementsMetaStatementParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Do__StatementsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getStatementsSCEstStatementParserRuleCall_2_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getDoAccess().getStatementsSCEstStatementParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Do__EndingAnnotationsAssignment_3_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getEndingAnnotationsAnnotationParserRuleCall_3_0_0_0()); }
	ruleAnnotation{ after(grammarAccess.getDoAccess().getEndingAnnotationsAnnotationParserRuleCall_3_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Do__ExpressionAssignment_3_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getExpressionDelayExprParserRuleCall_3_0_2_0()); }
	ruleDelayExpr{ after(grammarAccess.getDoAccess().getExpressionDelayExprParserRuleCall_3_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Do__EndingAnnotationsAssignment_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getEndingAnnotationsAnnotationParserRuleCall_3_1_0_0()); }
	ruleAnnotation{ after(grammarAccess.getDoAccess().getEndingAnnotationsAnnotationParserRuleCall_3_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Do__DelayAssignment_3_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getDelayDelayExprParserRuleCall_3_1_2_0()); }
	ruleDelayExpr{ after(grammarAccess.getDoAccess().getDelayDelayExprParserRuleCall_3_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Do__WatchingStatementsAssignment_3_1_3_1_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getWatchingStatementsSCEstStatementParserRuleCall_3_1_3_1_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getDoAccess().getWatchingStatementsSCEstStatementParserRuleCall_3_1_3_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Do__WatchingStatementsAssignment_3_1_3_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getWatchingStatementsMetaStatementParserRuleCall_3_1_3_1_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getDoAccess().getWatchingStatementsMetaStatementParserRuleCall_3_1_3_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Do__WatchingStatementsAssignment_3_1_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getWatchingStatementsSCEstStatementParserRuleCall_3_1_3_1_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getDoAccess().getWatchingStatementsSCEstStatementParserRuleCall_3_1_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnEmit__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnEmitAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getUnEmitAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnEmit__SignalAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnEmitAccess().getSignalISignalCrossReference_2_0()); }
(
{ before(grammarAccess.getUnEmitAccess().getSignalISignalIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getUnEmitAccess().getSignalISignalIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getUnEmitAccess().getSignalISignalCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Set__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getSetAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Set__SignalAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAccess().getSignalISignalCrossReference_2_0()); }
(
{ before(grammarAccess.getSetAccess().getSignalISignalIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getSetAccess().getSignalISignalIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getSetAccess().getSignalISignalCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Set__ExpressionAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSetAccess().getExpressionExpressionParserRuleCall_3_1_0()); }
	ruleExpression{ after(grammarAccess.getSetAccess().getExpressionExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getConditionalAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getConditionalAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__DeclarationsAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getDeclarationsDeclarationParserRuleCall_3_2_0()); }
	ruleDeclaration{ after(grammarAccess.getConditionalAccess().getDeclarationsDeclarationParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__StatementsAssignment_3_3_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getStatementsSCEstStatementParserRuleCall_3_3_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getConditionalAccess().getStatementsSCEstStatementParserRuleCall_3_3_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__StatementsAssignment_3_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getStatementsMetaStatementParserRuleCall_3_3_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getConditionalAccess().getStatementsMetaStatementParserRuleCall_3_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__StatementsAssignment_3_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getStatementsSCEstStatementParserRuleCall_3_3_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getConditionalAccess().getStatementsSCEstStatementParserRuleCall_3_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__ElseAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAccess().getElseElseScopeParserRuleCall_4_0()); }
	ruleElseScope{ after(grammarAccess.getConditionalAccess().getElseElseScopeParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElseScope__AnnotationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseScopeAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
	ruleAnnotation{ after(grammarAccess.getElseScopeAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElseScope__DeclarationsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseScopeAccess().getDeclarationsDeclarationParserRuleCall_4_0()); }
	ruleDeclaration{ after(grammarAccess.getElseScopeAccess().getDeclarationsDeclarationParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElseScope__StatementsAssignment_5_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseScopeAccess().getStatementsSCEstStatementParserRuleCall_5_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getElseScopeAccess().getStatementsSCEstStatementParserRuleCall_5_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElseScope__StatementsAssignment_5_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseScopeAccess().getStatementsMetaStatementParserRuleCall_5_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getElseScopeAccess().getStatementsMetaStatementParserRuleCall_5_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElseScope__StatementsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElseScopeAccess().getStatementsSCEstStatementParserRuleCall_5_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getElseScopeAccess().getStatementsSCEstStatementParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__AnnotationsAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getAnnotationsAnnotationParserRuleCall_1_0_0_0()); }
	ruleAnnotation{ after(grammarAccess.getThreadAccess().getAnnotationsAnnotationParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__DeclarationsAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getDeclarationsDeclarationParserRuleCall_1_0_2_0()); }
	ruleDeclaration{ after(grammarAccess.getThreadAccess().getDeclarationsDeclarationParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__StatementsAssignment_1_0_3_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getStatementsSCEstStatementParserRuleCall_1_0_3_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getThreadAccess().getStatementsSCEstStatementParserRuleCall_1_0_3_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__StatementsAssignment_1_0_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getStatementsMetaStatementParserRuleCall_1_0_3_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getThreadAccess().getStatementsMetaStatementParserRuleCall_1_0_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__StatementsAssignment_1_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getStatementsSCEstStatementParserRuleCall_1_0_3_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getThreadAccess().getStatementsSCEstStatementParserRuleCall_1_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__StatementsAssignment_1_1_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getStatementsSCEstStatementParserRuleCall_1_1_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getThreadAccess().getStatementsSCEstStatementParserRuleCall_1_1_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__StatementsAssignment_1_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getStatementsMetaStatementParserRuleCall_1_1_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getThreadAccess().getStatementsMetaStatementParserRuleCall_1_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Thread__StatementsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThreadAccess().getStatementsSCEstStatementParserRuleCall_1_1_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getThreadAccess().getStatementsSCEstStatementParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParallelAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getParallelAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__ThreadsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParallelAccess().getThreadsThreadParserRuleCall_2_0_0()); }
	ruleThread{ after(grammarAccess.getParallelAccess().getThreadsThreadParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parallel__ThreadsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParallelAccess().getThreadsThreadParserRuleCall_2_1_1_0()); }
	ruleThread{ after(grammarAccess.getParallelAccess().getThreadsThreadParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeStatement__AnnotationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeStatementAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
	ruleAnnotation{ after(grammarAccess.getScopeStatementAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeStatement__DeclarationsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeStatementAccess().getDeclarationsDeclarationParserRuleCall_3_0()); }
	ruleDeclaration{ after(grammarAccess.getScopeStatementAccess().getDeclarationsDeclarationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeStatement__StatementsAssignment_4_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeStatementAccess().getStatementsSCEstStatementParserRuleCall_4_0_0_0_0()); }
	ruleSCEstStatement{ after(grammarAccess.getScopeStatementAccess().getStatementsSCEstStatementParserRuleCall_4_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeStatement__StatementsAssignment_4_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeStatementAccess().getStatementsMetaStatementParserRuleCall_4_0_1_0()); }
	ruleMetaStatement{ after(grammarAccess.getScopeStatementAccess().getStatementsMetaStatementParserRuleCall_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScopeStatement__StatementsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScopeStatementAccess().getStatementsSCEstStatementParserRuleCall_4_1_0()); }
	ruleSCEstStatement{ after(grammarAccess.getScopeStatementAccess().getStatementsSCEstStatementParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getModuleAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__IntSignalDeclsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getIntSignalDeclsInterfaceSignalDeclParserRuleCall_4_0_0()); }
	ruleInterfaceSignalDecl{ after(grammarAccess.getModuleAccess().getIntSignalDeclsInterfaceSignalDeclParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__IntTypeDeclsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getIntTypeDeclsTypeDeclParserRuleCall_4_1_0()); }
	ruleTypeDecl{ after(grammarAccess.getModuleAccess().getIntTypeDeclsTypeDeclParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__IntSensorDeclsAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getIntSensorDeclsSensorDeclParserRuleCall_4_2_0()); }
	ruleSensorDecl{ after(grammarAccess.getModuleAccess().getIntSensorDeclsSensorDeclParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__IntConstantDeclsAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getIntConstantDeclsConstantDeclsParserRuleCall_4_3_0()); }
	ruleConstantDecls{ after(grammarAccess.getModuleAccess().getIntConstantDeclsConstantDeclsParserRuleCall_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__IntRelationDeclsAssignment_4_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getIntRelationDeclsRelationDeclParserRuleCall_4_4_0()); }
	ruleRelationDecl{ after(grammarAccess.getModuleAccess().getIntRelationDeclsRelationDeclParserRuleCall_4_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__IntTaskDeclsAssignment_4_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getIntTaskDeclsTaskDeclParserRuleCall_4_5_0()); }
	ruleTaskDecl{ after(grammarAccess.getModuleAccess().getIntTaskDeclsTaskDeclParserRuleCall_4_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__IntFunctionDeclsAssignment_4_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getIntFunctionDeclsFunctionDeclParserRuleCall_4_6_0()); }
	ruleFunctionDecl{ after(grammarAccess.getModuleAccess().getIntFunctionDeclsFunctionDeclParserRuleCall_4_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__IntProcedureDeclsAssignment_4_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getIntProcedureDeclsProcedureDeclParserRuleCall_4_7_0()); }
	ruleProcedureDecl{ after(grammarAccess.getModuleAccess().getIntProcedureDeclsProcedureDeclParserRuleCall_4_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__StatementsAssignment_5_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getStatementsEsterelStatementParserRuleCall_5_0_0_0()); }
	ruleEsterelStatement{ after(grammarAccess.getModuleAccess().getStatementsEsterelStatementParserRuleCall_5_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__StatementsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getStatementsEsterelStatementParserRuleCall_5_1_0()); }
	ruleEsterelStatement{ after(grammarAccess.getModuleAccess().getStatementsEsterelStatementParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getTypeEsterel_ValueTypeEnumRuleCall_0_0()); }
	ruleEsterel_ValueType{ after(grammarAccess.getTypeIdentifierAccess().getTypeEsterel_ValueTypeEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__TypeIDAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getTypeIDIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTypeIdentifierAccess().getTypeIDIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__TypeAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getTypeEsterel_ValueTypeEnumRuleCall_2_1_0_0()); }
	ruleEsterel_ValueType{ after(grammarAccess.getTypeIdentifierAccess().getTypeEsterel_ValueTypeEnumRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__TypeIDAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getTypeIDIDTerminalRuleCall_2_1_1_0()); }
	RULE_ID{ after(grammarAccess.getTypeIdentifierAccess().getTypeIDIDTerminalRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__OperatorAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getOperatorEsterel_CombineOperatorEnumRuleCall_2_3_0()); }
	ruleEsterel_CombineOperator{ after(grammarAccess.getTypeIdentifierAccess().getOperatorEsterel_CombineOperatorEnumRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__EstTypeAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getEstTypeTypeCrossReference_3_1_0()); }
(
{ before(grammarAccess.getTypeIdentifierAccess().getEstTypeTypeIDTerminalRuleCall_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTypeIdentifierAccess().getEstTypeTypeIDTerminalRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getTypeIdentifierAccess().getEstTypeTypeCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getTypeDeclAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__TypesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclAccess().getTypesTypeParserRuleCall_2_0()); }
	ruleType{ after(grammarAccess.getTypeDeclAccess().getTypesTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__TypesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclAccess().getTypesTypeParserRuleCall_3_1_0()); }
	ruleType{ after(grammarAccess.getTypeDeclAccess().getTypesTypeParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecls__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclsAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getConstantDeclsAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecls__ConstantsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclsAccess().getConstantsOneTypeConstantDeclsParserRuleCall_2_0()); }
	ruleOneTypeConstantDecls{ after(grammarAccess.getConstantDeclsAccess().getConstantsOneTypeConstantDeclsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecls__ConstantsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclsAccess().getConstantsOneTypeConstantDeclsParserRuleCall_3_1_0()); }
	ruleOneTypeConstantDecls{ after(grammarAccess.getConstantDeclsAccess().getConstantsOneTypeConstantDeclsParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneTypeConstantDecls__ConstantsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclsAccess().getConstantsConstantParserRuleCall_0_0()); }
	ruleConstant{ after(grammarAccess.getOneTypeConstantDeclsAccess().getConstantsConstantParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneTypeConstantDecls__ConstantsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclsAccess().getConstantsConstantParserRuleCall_1_1_0()); }
	ruleConstant{ after(grammarAccess.getOneTypeConstantDeclsAccess().getConstantsConstantParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneTypeConstantDecls__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclsAccess().getTypeTypeIdentifierParserRuleCall_3_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getOneTypeConstantDeclsAccess().getTypeTypeIdentifierParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getConstantAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getValueConstantValueParserRuleCall_2_1_0()); }
	ruleConstantValue{ after(grammarAccess.getConstantAccess().getValueConstantValueParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getFunctionDeclAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__FunctionsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclAccess().getFunctionsFunctionParserRuleCall_2_0()); }
	ruleFunction{ after(grammarAccess.getFunctionDeclAccess().getFunctionsFunctionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__FunctionsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclAccess().getFunctionsFunctionParserRuleCall_3_1_0()); }
	ruleFunction{ after(grammarAccess.getFunctionDeclAccess().getFunctionsFunctionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__IdListAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getIdListTypeIdentifierParserRuleCall_2_0_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getFunctionAccess().getIdListTypeIdentifierParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__IdListAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getIdListTypeIdentifierParserRuleCall_2_1_1_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getFunctionAccess().getIdListTypeIdentifierParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__TypeAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getTypeTypeIdentifierParserRuleCall_5_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getFunctionAccess().getTypeTypeIdentifierParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureDecl__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureDeclAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getProcedureDeclAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureDecl__ProceduresAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureDeclAccess().getProceduresProcedureParserRuleCall_2_0()); }
	ruleProcedure{ after(grammarAccess.getProcedureDeclAccess().getProceduresProcedureParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureDecl__ProceduresAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureDeclAccess().getProceduresProcedureParserRuleCall_3_1_0()); }
	ruleProcedure{ after(grammarAccess.getProcedureDeclAccess().getProceduresProcedureParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getProcedureAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__VariablesAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getVariablesTypeIdentifierParserRuleCall_2_0_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getProcedureAccess().getVariablesTypeIdentifierParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__VariablesAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getVariablesTypeIdentifierParserRuleCall_2_1_1_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getProcedureAccess().getVariablesTypeIdentifierParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__ExpressionsAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getExpressionsTypeIdentifierParserRuleCall_5_0_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getProcedureAccess().getExpressionsTypeIdentifierParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__ExpressionsAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getExpressionsTypeIdentifierParserRuleCall_5_1_1_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getProcedureAccess().getExpressionsTypeIdentifierParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDecl__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getTaskDeclAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDecl__TasksAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclAccess().getTasksTaskParserRuleCall_2_0()); }
	ruleTask{ after(grammarAccess.getTaskDeclAccess().getTasksTaskParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDecl__TasksAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclAccess().getTasksTaskParserRuleCall_3_1_0()); }
	ruleTask{ after(grammarAccess.getTaskDeclAccess().getTasksTaskParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Task__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Task__VariablesAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getVariablesTypeIdentifierParserRuleCall_2_0_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getTaskAccess().getVariablesTypeIdentifierParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Task__VariablesAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getVariablesTypeIdentifierParserRuleCall_2_1_1_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getTaskAccess().getVariablesTypeIdentifierParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Task__ExpressionsAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getExpressionsTypeIdentifierParserRuleCall_5_0_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getTaskAccess().getExpressionsTypeIdentifierParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Task__ExpressionsAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getExpressionsTypeIdentifierParserRuleCall_5_1_1_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getTaskAccess().getExpressionsTypeIdentifierParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__AnnotationsAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getAnnotationsAnnotationParserRuleCall_0_1_0()); }
	ruleAnnotation{ after(grammarAccess.getInterfaceSignalDeclAccess().getAnnotationsAnnotationParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__SignalsAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_0_3_0()); }
	ruleISignal{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__SignalsAssignment_0_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_0_4_1_0()); }
	ruleISignal{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_0_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__AnnotationsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getAnnotationsAnnotationParserRuleCall_1_1_0()); }
	ruleAnnotation{ after(grammarAccess.getInterfaceSignalDeclAccess().getAnnotationsAnnotationParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__SignalsAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_1_3_0()); }
	ruleISignal{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__SignalsAssignment_1_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_1_4_1_0()); }
	ruleISignal{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_1_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__AnnotationsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getAnnotationsAnnotationParserRuleCall_2_1_0()); }
	ruleAnnotation{ after(grammarAccess.getInterfaceSignalDeclAccess().getAnnotationsAnnotationParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__SignalsAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_2_3_0()); }
	ruleISignal{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__SignalsAssignment_2_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_2_4_1_0()); }
	ruleISignal{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_2_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__AnnotationsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
	ruleAnnotation{ after(grammarAccess.getInterfaceSignalDeclAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__SignalsAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_3_3_0()); }
	ruleISignal{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__SignalsAssignment_3_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_3_4_1_0()); }
	ruleISignal{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_3_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getISignalAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__TypeAssignment_2_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getTypeEsterel_ValueTypeEnumRuleCall_2_0_1_0_0()); }
	ruleEsterel_ValueType{ after(grammarAccess.getISignalAccess().getTypeEsterel_ValueTypeEnumRuleCall_2_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__TypeIDAssignment_2_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getTypeIDIDTerminalRuleCall_2_0_1_1_0()); }
	RULE_ID{ after(grammarAccess.getISignalAccess().getTypeIDIDTerminalRuleCall_2_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__TypeAssignment_2_0_1_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getTypeEsterel_ValueTypeEnumRuleCall_2_0_1_2_1_0_0()); }
	ruleEsterel_ValueType{ after(grammarAccess.getISignalAccess().getTypeEsterel_ValueTypeEnumRuleCall_2_0_1_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__TypeIDAssignment_2_0_1_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getTypeIDIDTerminalRuleCall_2_0_1_2_1_1_0()); }
	RULE_ID{ after(grammarAccess.getISignalAccess().getTypeIDIDTerminalRuleCall_2_0_1_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__FuncAssignment_2_0_1_2_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getFuncFunctionCrossReference_2_0_1_2_3_0_0()); }
(
{ before(grammarAccess.getISignalAccess().getFuncFunctionIDTerminalRuleCall_2_0_1_2_3_0_0_1()); }
	RULE_ID{ after(grammarAccess.getISignalAccess().getFuncFunctionIDTerminalRuleCall_2_0_1_2_3_0_0_1()); }
)
{ after(grammarAccess.getISignalAccess().getFuncFunctionCrossReference_2_0_1_2_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__CombineOperatorAssignment_2_0_1_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getCombineOperatorEsterel_CombineOperatorEnumRuleCall_2_0_1_2_3_1_0()); }
	ruleEsterel_CombineOperator{ after(grammarAccess.getISignalAccess().getCombineOperatorEsterel_CombineOperatorEnumRuleCall_2_0_1_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__TypeAssignment_2_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getTypeEsterel_ValueTypeEnumRuleCall_2_1_1_0_0()); }
	ruleEsterel_ValueType{ after(grammarAccess.getISignalAccess().getTypeEsterel_ValueTypeEnumRuleCall_2_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__TypeIDAssignment_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getTypeIDIDTerminalRuleCall_2_1_1_1_0()); }
	RULE_ID{ after(grammarAccess.getISignalAccess().getTypeIDIDTerminalRuleCall_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__TypeAssignment_2_1_1_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getTypeEsterel_ValueTypeEnumRuleCall_2_1_1_2_1_0_0()); }
	ruleEsterel_ValueType{ after(grammarAccess.getISignalAccess().getTypeEsterel_ValueTypeEnumRuleCall_2_1_1_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__TypeIDAssignment_2_1_1_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getTypeIDIDTerminalRuleCall_2_1_1_2_1_1_0()); }
	RULE_ID{ after(grammarAccess.getISignalAccess().getTypeIDIDTerminalRuleCall_2_1_1_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__FuncAssignment_2_1_1_2_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getFuncFunctionCrossReference_2_1_1_2_3_0_0()); }
(
{ before(grammarAccess.getISignalAccess().getFuncFunctionIDTerminalRuleCall_2_1_1_2_3_0_0_1()); }
	RULE_ID{ after(grammarAccess.getISignalAccess().getFuncFunctionIDTerminalRuleCall_2_1_1_2_3_0_0_1()); }
)
{ after(grammarAccess.getISignalAccess().getFuncFunctionCrossReference_2_1_1_2_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__CombineOperatorAssignment_2_1_1_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getCombineOperatorEsterel_CombineOperatorEnumRuleCall_2_1_1_2_3_1_0()); }
	ruleEsterel_CombineOperator{ after(grammarAccess.getISignalAccess().getCombineOperatorEsterel_CombineOperatorEnumRuleCall_2_1_1_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__ExpressionAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getExpressionExpressionParserRuleCall_2_2_1_0()); }
	ruleExpression{ after(grammarAccess.getISignalAccess().getExpressionExpressionParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__TypeAssignment_2_2_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getTypeEsterel_ValueTypeEnumRuleCall_2_2_3_0_0()); }
	ruleEsterel_ValueType{ after(grammarAccess.getISignalAccess().getTypeEsterel_ValueTypeEnumRuleCall_2_2_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__TypeIDAssignment_2_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getTypeIDIDTerminalRuleCall_2_2_3_1_0()); }
	RULE_ID{ after(grammarAccess.getISignalAccess().getTypeIDIDTerminalRuleCall_2_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__TypeAssignment_2_2_3_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getTypeEsterel_ValueTypeEnumRuleCall_2_2_3_2_1_0_0()); }
	ruleEsterel_ValueType{ after(grammarAccess.getISignalAccess().getTypeEsterel_ValueTypeEnumRuleCall_2_2_3_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__TypeIDAssignment_2_2_3_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getTypeIDIDTerminalRuleCall_2_2_3_2_1_1_0()); }
	RULE_ID{ after(grammarAccess.getISignalAccess().getTypeIDIDTerminalRuleCall_2_2_3_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__FuncAssignment_2_2_3_2_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getFuncFunctionCrossReference_2_2_3_2_3_0_0()); }
(
{ before(grammarAccess.getISignalAccess().getFuncFunctionIDTerminalRuleCall_2_2_3_2_3_0_0_1()); }
	RULE_ID{ after(grammarAccess.getISignalAccess().getFuncFunctionIDTerminalRuleCall_2_2_3_2_3_0_0_1()); }
)
{ after(grammarAccess.getISignalAccess().getFuncFunctionCrossReference_2_2_3_2_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__CombineOperatorAssignment_2_2_3_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getCombineOperatorEsterel_CombineOperatorEnumRuleCall_2_2_3_2_3_1_0()); }
	ruleEsterel_CombineOperator{ after(grammarAccess.getISignalAccess().getCombineOperatorEsterel_CombineOperatorEnumRuleCall_2_2_3_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDecl__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDeclAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getSensorDeclAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDecl__SensorsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDeclAccess().getSensorsSensorWithTypeParserRuleCall_2_0()); }
	ruleSensorWithType{ after(grammarAccess.getSensorDeclAccess().getSensorsSensorWithTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDecl__SensorsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDeclAccess().getSensorsSensorWithTypeParserRuleCall_3_1_0()); }
	ruleSensorWithType{ after(grammarAccess.getSensorDeclAccess().getSensorsSensorWithTypeParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SensorWithType__SensorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorWithTypeAccess().getSensorSensorParserRuleCall_0_0()); }
	ruleSensor{ after(grammarAccess.getSensorWithTypeAccess().getSensorSensorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SensorWithType__TypeAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorWithTypeAccess().getTypeTypeIdentifierParserRuleCall_1_0_1_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getSensorWithTypeAccess().getTypeTypeIdentifierParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SensorWithType__TypeAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorWithTypeAccess().getTypeTypeIdentifierParserRuleCall_1_1_1_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getSensorWithTypeAccess().getTypeTypeIdentifierParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getSensorAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDecl__AnnotationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
	ruleAnnotation{ after(grammarAccess.getRelationDeclAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDecl__RelationsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getRelationsRelationTypeParserRuleCall_3_0()); }
	ruleRelationType{ after(grammarAccess.getRelationDeclAccess().getRelationsRelationTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDecl__RelationsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getRelationsRelationTypeParserRuleCall_4_1_0()); }
	ruleRelationType{ after(grammarAccess.getRelationDeclAccess().getRelationsRelationTypeParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationImplication__FirstAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationImplicationAccess().getFirstISignalCrossReference_0_0()); }
(
{ before(grammarAccess.getRelationImplicationAccess().getFirstISignalIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getRelationImplicationAccess().getFirstISignalIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getRelationImplicationAccess().getFirstISignalCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationImplication__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationImplicationAccess().getTypeEqualsSignGreaterThanSignKeyword_1_0()); }
(
{ before(grammarAccess.getRelationImplicationAccess().getTypeEqualsSignGreaterThanSignKeyword_1_0()); }

	'=>' 

{ after(grammarAccess.getRelationImplicationAccess().getTypeEqualsSignGreaterThanSignKeyword_1_0()); }
)

{ after(grammarAccess.getRelationImplicationAccess().getTypeEqualsSignGreaterThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationImplication__SecondAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationImplicationAccess().getSecondISignalCrossReference_2_0()); }
(
{ before(grammarAccess.getRelationImplicationAccess().getSecondISignalIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getRelationImplicationAccess().getSecondISignalIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getRelationImplicationAccess().getSecondISignalCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationIncompatibility__IncompAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getIncompISignalCrossReference_0_0()); }
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getIncompISignalIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getRelationIncompatibilityAccess().getIncompISignalIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getRelationIncompatibilityAccess().getIncompISignalCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationIncompatibility__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getTypeNumberSignKeyword_1_0()); }
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getTypeNumberSignKeyword_1_0()); }

	'#' 

{ after(grammarAccess.getRelationIncompatibilityAccess().getTypeNumberSignKeyword_1_0()); }
)

{ after(grammarAccess.getRelationIncompatibilityAccess().getTypeNumberSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationIncompatibility__IncompAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getIncompISignalCrossReference_2_0()); }
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getIncompISignalIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getRelationIncompatibilityAccess().getIncompISignalIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getRelationIncompatibilityAccess().getIncompISignalCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationIncompatibility__IncompAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getIncompISignalCrossReference_3_1_0()); }
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getIncompISignalIDTerminalRuleCall_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getRelationIncompatibilityAccess().getIncompISignalIDTerminalRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getRelationIncompatibilityAccess().getIncompISignalCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Nothing__AnnotationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNothingAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
	ruleAnnotation{ after(grammarAccess.getNothingAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Halt__AnnotationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHaltAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
	ruleAnnotation{ after(grammarAccess.getHaltAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Emit__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getEmitAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Emit__SignalAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getSignalISignalCrossReference_2_0()); }
(
{ before(grammarAccess.getEmitAccess().getSignalISignalIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getEmitAccess().getSignalISignalIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getEmitAccess().getSignalISignalCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Emit__ExpressionAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getExpressionExpressionParserRuleCall_3_1_0()); }
	ruleExpression{ after(grammarAccess.getEmitAccess().getExpressionExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sustain__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getSustainAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sustain__SignalAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getSignalISignalCrossReference_2_0()); }
(
{ before(grammarAccess.getSustainAccess().getSignalISignalIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getSustainAccess().getSignalISignalIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getSustainAccess().getSignalISignalCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sustain__ExpressionAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getExpressionExpressionParserRuleCall_3_1_0()); }
	ruleExpression{ after(grammarAccess.getSustainAccess().getExpressionExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelAssignment__VarAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelAssignmentAccess().getVarIVariableCrossReference_0_0()); }
(
{ before(grammarAccess.getEsterelAssignmentAccess().getVarIVariableIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getEsterelAssignmentAccess().getVarIVariableIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getEsterelAssignmentAccess().getVarIVariableCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelAssignment__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelAssignmentAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getEsterelAssignmentAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getProcCallAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__ProcAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getProcProcedureCrossReference_2_0()); }
(
{ before(grammarAccess.getProcCallAccess().getProcProcedureIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getProcCallAccess().getProcProcedureIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getProcCallAccess().getProcProcedureCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__VarListAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getVarListIVariableCrossReference_4_0_0()); }
(
{ before(grammarAccess.getProcCallAccess().getVarListIVariableIDTerminalRuleCall_4_0_0_1()); }
	RULE_ID{ after(grammarAccess.getProcCallAccess().getVarListIVariableIDTerminalRuleCall_4_0_0_1()); }
)
{ after(grammarAccess.getProcCallAccess().getVarListIVariableCrossReference_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__VarListAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getVarListIVariableCrossReference_4_1_1_0()); }
(
{ before(grammarAccess.getProcCallAccess().getVarListIVariableIDTerminalRuleCall_4_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getProcCallAccess().getVarListIVariableIDTerminalRuleCall_4_1_1_0_1()); }
)
{ after(grammarAccess.getProcCallAccess().getVarListIVariableCrossReference_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__KexpressionsAssignment_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getKexpressionsExpressionParserRuleCall_7_0_0()); }
	ruleExpression{ after(grammarAccess.getProcCallAccess().getKexpressionsExpressionParserRuleCall_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__KexpressionsAssignment_7_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getKexpressionsExpressionParserRuleCall_7_1_1_0()); }
	ruleExpression{ after(grammarAccess.getProcCallAccess().getKexpressionsExpressionParserRuleCall_7_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTrapSignalAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__TypeAssignment_2_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getTypeEsterel_ValueTypeEnumRuleCall_2_0_1_0_0()); }
	ruleEsterel_ValueType{ after(grammarAccess.getTrapSignalAccess().getTypeEsterel_ValueTypeEnumRuleCall_2_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__TypeIDAssignment_2_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getTypeIDIDTerminalRuleCall_2_0_1_1_0()); }
	RULE_ID{ after(grammarAccess.getTrapSignalAccess().getTypeIDIDTerminalRuleCall_2_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__TypeAssignment_2_0_1_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getTypeEsterel_ValueTypeEnumRuleCall_2_0_1_2_1_0_0()); }
	ruleEsterel_ValueType{ after(grammarAccess.getTrapSignalAccess().getTypeEsterel_ValueTypeEnumRuleCall_2_0_1_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__TypeIDAssignment_2_0_1_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getTypeIDIDTerminalRuleCall_2_0_1_2_1_1_0()); }
	RULE_ID{ after(grammarAccess.getTrapSignalAccess().getTypeIDIDTerminalRuleCall_2_0_1_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__FuncAssignment_2_0_1_2_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getFuncFunctionCrossReference_2_0_1_2_3_0_0()); }
(
{ before(grammarAccess.getTrapSignalAccess().getFuncFunctionIDTerminalRuleCall_2_0_1_2_3_0_0_1()); }
	RULE_ID{ after(grammarAccess.getTrapSignalAccess().getFuncFunctionIDTerminalRuleCall_2_0_1_2_3_0_0_1()); }
)
{ after(grammarAccess.getTrapSignalAccess().getFuncFunctionCrossReference_2_0_1_2_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__CombineOperatorAssignment_2_0_1_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getCombineOperatorEsterel_CombineOperatorEnumRuleCall_2_0_1_2_3_1_0()); }
	ruleEsterel_CombineOperator{ after(grammarAccess.getTrapSignalAccess().getCombineOperatorEsterel_CombineOperatorEnumRuleCall_2_0_1_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__TypeAssignment_2_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getTypeEsterel_ValueTypeEnumRuleCall_2_1_1_0_0()); }
	ruleEsterel_ValueType{ after(grammarAccess.getTrapSignalAccess().getTypeEsterel_ValueTypeEnumRuleCall_2_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__TypeIDAssignment_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getTypeIDIDTerminalRuleCall_2_1_1_1_0()); }
	RULE_ID{ after(grammarAccess.getTrapSignalAccess().getTypeIDIDTerminalRuleCall_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__TypeAssignment_2_1_1_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getTypeEsterel_ValueTypeEnumRuleCall_2_1_1_2_1_0_0()); }
	ruleEsterel_ValueType{ after(grammarAccess.getTrapSignalAccess().getTypeEsterel_ValueTypeEnumRuleCall_2_1_1_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__TypeIDAssignment_2_1_1_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getTypeIDIDTerminalRuleCall_2_1_1_2_1_1_0()); }
	RULE_ID{ after(grammarAccess.getTrapSignalAccess().getTypeIDIDTerminalRuleCall_2_1_1_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__FuncAssignment_2_1_1_2_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getFuncFunctionCrossReference_2_1_1_2_3_0_0()); }
(
{ before(grammarAccess.getTrapSignalAccess().getFuncFunctionIDTerminalRuleCall_2_1_1_2_3_0_0_1()); }
	RULE_ID{ after(grammarAccess.getTrapSignalAccess().getFuncFunctionIDTerminalRuleCall_2_1_1_2_3_0_0_1()); }
)
{ after(grammarAccess.getTrapSignalAccess().getFuncFunctionCrossReference_2_1_1_2_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__CombineOperatorAssignment_2_1_1_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getCombineOperatorEsterel_CombineOperatorEnumRuleCall_2_1_1_2_3_1_0()); }
	ruleEsterel_CombineOperator{ after(grammarAccess.getTrapSignalAccess().getCombineOperatorEsterel_CombineOperatorEnumRuleCall_2_1_1_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__ExpressionAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getExpressionExpressionParserRuleCall_2_2_1_0()); }
	ruleExpression{ after(grammarAccess.getTrapSignalAccess().getExpressionExpressionParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__TypeAssignment_2_2_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getTypeEsterel_ValueTypeEnumRuleCall_2_2_3_0_0()); }
	ruleEsterel_ValueType{ after(grammarAccess.getTrapSignalAccess().getTypeEsterel_ValueTypeEnumRuleCall_2_2_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__TypeIDAssignment_2_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getTypeIDIDTerminalRuleCall_2_2_3_1_0()); }
	RULE_ID{ after(grammarAccess.getTrapSignalAccess().getTypeIDIDTerminalRuleCall_2_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__TypeAssignment_2_2_3_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getTypeEsterel_ValueTypeEnumRuleCall_2_2_3_2_1_0_0()); }
	ruleEsterel_ValueType{ after(grammarAccess.getTrapSignalAccess().getTypeEsterel_ValueTypeEnumRuleCall_2_2_3_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__TypeIDAssignment_2_2_3_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getTypeIDIDTerminalRuleCall_2_2_3_2_1_1_0()); }
	RULE_ID{ after(grammarAccess.getTrapSignalAccess().getTypeIDIDTerminalRuleCall_2_2_3_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__FuncAssignment_2_2_3_2_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getFuncFunctionCrossReference_2_2_3_2_3_0_0()); }
(
{ before(grammarAccess.getTrapSignalAccess().getFuncFunctionIDTerminalRuleCall_2_2_3_2_3_0_0_1()); }
	RULE_ID{ after(grammarAccess.getTrapSignalAccess().getFuncFunctionIDTerminalRuleCall_2_2_3_2_3_0_0_1()); }
)
{ after(grammarAccess.getTrapSignalAccess().getFuncFunctionCrossReference_2_2_3_2_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapSignal__CombineOperatorAssignment_2_2_3_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapSignalAccess().getCombineOperatorEsterel_CombineOperatorEnumRuleCall_2_2_3_2_3_1_0()); }
	ruleEsterel_CombineOperator{ after(grammarAccess.getTrapSignalAccess().getCombineOperatorEsterel_CombineOperatorEnumRuleCall_2_2_3_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getExitAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__TrapAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitAccess().getTrapTrapSignalCrossReference_2_0()); }
(
{ before(grammarAccess.getExitAccess().getTrapTrapSignalIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getExitAccess().getTrapTrapSignalIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getExitAccess().getTrapTrapSignalCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__ExpressionAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitAccess().getExpressionExpressionParserRuleCall_3_1_0()); }
	ruleExpression{ after(grammarAccess.getExitAccess().getExpressionExpressionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__VariablesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getVariablesIVariableParserRuleCall_0_0()); }
	ruleIVariable{ after(grammarAccess.getVariableDeclAccess().getVariablesIVariableParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__VariablesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getVariablesIVariableParserRuleCall_1_1_0()); }
	ruleIVariable{ after(grammarAccess.getVariableDeclAccess().getVariablesIVariableParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getTypeTypeIdentifierParserRuleCall_3_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getVariableDeclAccess().getTypeTypeIdentifierParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IVariable__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getIVariableAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IVariable__ExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getIVariableAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Run__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getRunAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Run__ModuleAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getModuleModuleRenamingParserRuleCall_1_0_1_0()); }
	ruleModuleRenaming{ after(grammarAccess.getRunAccess().getModuleModuleRenamingParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Run__ListAssignment_1_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getListRenamingParserRuleCall_1_0_2_1_0()); }
	ruleRenaming{ after(grammarAccess.getRunAccess().getListRenamingParserRuleCall_1_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Run__ListAssignment_1_0_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getListRenamingParserRuleCall_1_0_2_2_1_0()); }
	ruleRenaming{ after(grammarAccess.getRunAccess().getListRenamingParserRuleCall_1_0_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Run__ModuleAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getModuleModuleRenamingParserRuleCall_1_1_1_0()); }
	ruleModuleRenaming{ after(grammarAccess.getRunAccess().getModuleModuleRenamingParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Run__ListAssignment_1_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getListRenamingParserRuleCall_1_1_2_1_0()); }
	ruleRenaming{ after(grammarAccess.getRunAccess().getListRenamingParserRuleCall_1_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Run__ListAssignment_1_1_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getListRenamingParserRuleCall_1_1_2_2_1_0()); }
	ruleRenaming{ after(grammarAccess.getRunAccess().getListRenamingParserRuleCall_1_1_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getRenamingAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingsAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsTypeRenamingParserRuleCall_1_0_1_0()); }
	ruleTypeRenaming{ after(grammarAccess.getRenamingAccess().getRenamingsTypeRenamingParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingsAssignment_1_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsTypeRenamingParserRuleCall_1_0_2_1_0()); }
	ruleTypeRenaming{ after(grammarAccess.getRenamingAccess().getRenamingsTypeRenamingParserRuleCall_1_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsConstantRenamingParserRuleCall_1_1_1_0()); }
	ruleConstantRenaming{ after(grammarAccess.getRenamingAccess().getRenamingsConstantRenamingParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingsAssignment_1_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsConstantRenamingParserRuleCall_1_1_2_1_0()); }
	ruleConstantRenaming{ after(grammarAccess.getRenamingAccess().getRenamingsConstantRenamingParserRuleCall_1_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsFunctionRenamingParserRuleCall_1_2_1_0()); }
	ruleFunctionRenaming{ after(grammarAccess.getRenamingAccess().getRenamingsFunctionRenamingParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingsAssignment_1_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsFunctionRenamingParserRuleCall_1_2_2_1_0()); }
	ruleFunctionRenaming{ after(grammarAccess.getRenamingAccess().getRenamingsFunctionRenamingParserRuleCall_1_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingsAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsProcedureRenamingParserRuleCall_1_3_1_0()); }
	ruleProcedureRenaming{ after(grammarAccess.getRenamingAccess().getRenamingsProcedureRenamingParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingsAssignment_1_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsProcedureRenamingParserRuleCall_1_3_2_1_0()); }
	ruleProcedureRenaming{ after(grammarAccess.getRenamingAccess().getRenamingsProcedureRenamingParserRuleCall_1_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingsAssignment_1_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsTaskRenamingParserRuleCall_1_4_1_0()); }
	ruleTaskRenaming{ after(grammarAccess.getRenamingAccess().getRenamingsTaskRenamingParserRuleCall_1_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingsAssignment_1_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsTaskRenamingParserRuleCall_1_4_2_1_0()); }
	ruleTaskRenaming{ after(grammarAccess.getRenamingAccess().getRenamingsTaskRenamingParserRuleCall_1_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingsAssignment_1_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsSignalRenamingParserRuleCall_1_5_1_0()); }
	ruleSignalRenaming{ after(grammarAccess.getRenamingAccess().getRenamingsSignalRenamingParserRuleCall_1_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingsAssignment_1_5_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsSignalRenamingParserRuleCall_1_5_2_1_0()); }
	ruleSignalRenaming{ after(grammarAccess.getRenamingAccess().getRenamingsSignalRenamingParserRuleCall_1_5_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRenaming__NewNameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRenamingAccess().getNewNameTypeCrossReference_0_0_0()); }
(
{ before(grammarAccess.getTypeRenamingAccess().getNewNameTypeIDTerminalRuleCall_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getTypeRenamingAccess().getNewNameTypeIDTerminalRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getTypeRenamingAccess().getNewNameTypeCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRenaming__NewTypeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRenamingAccess().getNewTypeEsterel_ValueTypeEnumRuleCall_0_1_0()); }
	ruleEsterel_ValueType{ after(grammarAccess.getTypeRenamingAccess().getNewTypeEsterel_ValueTypeEnumRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRenaming__OldNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRenamingAccess().getOldNameTypeCrossReference_2_0()); }
(
{ before(grammarAccess.getTypeRenamingAccess().getOldNameTypeIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getTypeRenamingAccess().getOldNameTypeIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getTypeRenamingAccess().getOldNameTypeCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantRenaming__NewNameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantRenamingAccess().getNewNameConstantCrossReference_0_0_0()); }
(
{ before(grammarAccess.getConstantRenamingAccess().getNewNameConstantIDTerminalRuleCall_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getConstantRenamingAccess().getNewNameConstantIDTerminalRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getConstantRenamingAccess().getNewNameConstantCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantRenaming__NewValueAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantRenamingAccess().getNewValueConstantValueParserRuleCall_0_1_0()); }
	ruleConstantValue{ after(grammarAccess.getConstantRenamingAccess().getNewValueConstantValueParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantRenaming__OldNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantRenamingAccess().getOldNameConstantCrossReference_2_0()); }
(
{ before(grammarAccess.getConstantRenamingAccess().getOldNameConstantIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getConstantRenamingAccess().getOldNameConstantIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getConstantRenamingAccess().getOldNameConstantCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionRenaming__NewNameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionRenamingAccess().getNewNameFunctionCrossReference_0_0_0()); }
(
{ before(grammarAccess.getFunctionRenamingAccess().getNewNameFunctionIDTerminalRuleCall_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getFunctionRenamingAccess().getNewNameFunctionIDTerminalRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getFunctionRenamingAccess().getNewNameFunctionCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionRenaming__NewFuncAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionRenamingAccess().getNewFuncBuildInFunctionParserRuleCall_0_1_0()); }
	ruleBuildInFunction{ after(grammarAccess.getFunctionRenamingAccess().getNewFuncBuildInFunctionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionRenaming__OldNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionRenamingAccess().getOldNameFunctionCrossReference_2_0()); }
(
{ before(grammarAccess.getFunctionRenamingAccess().getOldNameFunctionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getFunctionRenamingAccess().getOldNameFunctionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getFunctionRenamingAccess().getOldNameFunctionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureRenaming__NewNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureRenamingAccess().getNewNameProcedureCrossReference_0_0()); }
(
{ before(grammarAccess.getProcedureRenamingAccess().getNewNameProcedureIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getProcedureRenamingAccess().getNewNameProcedureIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getProcedureRenamingAccess().getNewNameProcedureCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureRenaming__OldNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureRenamingAccess().getOldNameProcedureCrossReference_2_0()); }
(
{ before(grammarAccess.getProcedureRenamingAccess().getOldNameProcedureIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getProcedureRenamingAccess().getOldNameProcedureIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getProcedureRenamingAccess().getOldNameProcedureCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaskRenaming__NewNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskRenamingAccess().getNewNameTaskCrossReference_0_0()); }
(
{ before(grammarAccess.getTaskRenamingAccess().getNewNameTaskIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getTaskRenamingAccess().getNewNameTaskIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getTaskRenamingAccess().getNewNameTaskCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaskRenaming__OldNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskRenamingAccess().getOldNameTaskCrossReference_2_0()); }
(
{ before(grammarAccess.getTaskRenamingAccess().getOldNameTaskIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getTaskRenamingAccess().getOldNameTaskIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getTaskRenamingAccess().getOldNameTaskCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalRenaming__NewNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalRenamingAccess().getNewNameISignalCrossReference_0_0()); }
(
{ before(grammarAccess.getSignalRenamingAccess().getNewNameISignalIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getSignalRenamingAccess().getNewNameISignalIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getSignalRenamingAccess().getNewNameISignalCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalRenaming__OldNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalRenamingAccess().getOldNameISignalCrossReference_2_0()); }
(
{ before(grammarAccess.getSignalRenamingAccess().getOldNameISignalIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getSignalRenamingAccess().getOldNameISignalIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getSignalRenamingAccess().getOldNameISignalCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapExpression__TrapAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapExpressionAccess().getTrapISignalCrossReference_2_0()); }
(
{ before(grammarAccess.getTrapExpressionAccess().getTrapISignalIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getTrapExpressionAccess().getTrapISignalIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getTrapExpressionAccess().getTrapISignalCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__FunctionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getFunctionFunctionCrossReference_1_0()); }
(
{ before(grammarAccess.getFunctionExpressionAccess().getFunctionFunctionIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getFunctionExpressionAccess().getFunctionFunctionIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getFunctionExpressionAccess().getFunctionFunctionCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__KexpressionsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getKexpressionsExpressionParserRuleCall_3_0_0()); }
	ruleExpression{ after(grammarAccess.getFunctionExpressionAccess().getKexpressionsExpressionParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__KexpressionsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getKexpressionsExpressionParserRuleCall_3_1_1_0()); }
	ruleExpression{ after(grammarAccess.getFunctionExpressionAccess().getKexpressionsExpressionParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__ConstantAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantExpressionAccess().getConstantConstantCrossReference_1_0_0()); }
(
{ before(grammarAccess.getConstantExpressionAccess().getConstantConstantIDTerminalRuleCall_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getConstantExpressionAccess().getConstantConstantIDTerminalRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getConstantExpressionAccess().getConstantConstantCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantExpressionAccess().getValueConstantValueParserRuleCall_1_1_0()); }
	ruleConstantValue{ after(grammarAccess.getConstantExpressionAccess().getValueConstantValueParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapExpr__OperatorAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapExprAccess().getOperatorEsterel_OrOperatorEnumRuleCall_1_1_0_0()); }
	ruleEsterel_OrOperator{ after(grammarAccess.getTrapExprAccess().getOperatorEsterel_OrOperatorEnumRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapExpr__SubExpressionsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapExprAccess().getSubExpressionsTrapAndExpressionParserRuleCall_1_1_1_0()); }
	ruleTrapAndExpression{ after(grammarAccess.getTrapExprAccess().getSubExpressionsTrapAndExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapAndExpression__OperatorAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAndExpressionAccess().getOperatorEsterel_AndOperatorEnumRuleCall_1_1_0_0()); }
	ruleEsterel_AndOperator{ after(grammarAccess.getTrapAndExpressionAccess().getOperatorEsterel_AndOperatorEnumRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapAndExpression__SubExpressionsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAndExpressionAccess().getSubExpressionsTrapNotExpressionParserRuleCall_1_1_1_0()); }
	ruleTrapNotExpression{ after(grammarAccess.getTrapAndExpressionAccess().getSubExpressionsTrapNotExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapNotExpression__OperatorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapNotExpressionAccess().getOperatorEsterel_NotOperatorEnumRuleCall_0_1_0()); }
	ruleEsterel_NotOperator{ after(grammarAccess.getTrapNotExpressionAccess().getOperatorEsterel_NotOperatorEnumRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapNotExpression__SubExpressionsAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapNotExpressionAccess().getSubExpressionsTrapAtomicExpressionParserRuleCall_0_2_0()); }
	ruleTrapAtomicExpression{ after(grammarAccess.getTrapNotExpressionAccess().getSubExpressionsTrapAtomicExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapReferenceExpr__ValuedObjectAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapReferenceExprAccess().getValuedObjectTrapSignalCrossReference_1_0()); }
(
{ before(grammarAccess.getTrapReferenceExprAccess().getValuedObjectTrapSignalIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTrapReferenceExprAccess().getValuedObjectTrapSignalIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getTrapReferenceExprAccess().getValuedObjectTrapSignalCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalExpression__OperatorAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalExpressionAccess().getOperatorEsterel_OrOperatorEnumRuleCall_1_1_0_0()); }
	ruleEsterel_OrOperator{ after(grammarAccess.getSignalExpressionAccess().getOperatorEsterel_OrOperatorEnumRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalExpression__SubExpressionsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalExpressionAccess().getSubExpressionsSignalAndExpressionParserRuleCall_1_1_1_0()); }
	ruleSignalAndExpression{ after(grammarAccess.getSignalExpressionAccess().getSubExpressionsSignalAndExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAndExpression__OperatorAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAndExpressionAccess().getOperatorEsterel_AndOperatorEnumRuleCall_1_1_0_0()); }
	ruleEsterel_AndOperator{ after(grammarAccess.getSignalAndExpressionAccess().getOperatorEsterel_AndOperatorEnumRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAndExpression__SubExpressionsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAndExpressionAccess().getSubExpressionsSignalNotExpressionParserRuleCall_1_1_1_0()); }
	ruleSignalNotExpression{ after(grammarAccess.getSignalAndExpressionAccess().getSubExpressionsSignalNotExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalNotExpression__OperatorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalNotExpressionAccess().getOperatorEsterel_NotOperatorEnumRuleCall_0_1_0()); }
	ruleEsterel_NotOperator{ after(grammarAccess.getSignalNotExpressionAccess().getOperatorEsterel_NotOperatorEnumRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalNotExpression__SubExpressionsAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalNotExpressionAccess().getSubExpressionsSignalAtomicExpressionParserRuleCall_0_2_0()); }
	ruleSignalAtomicExpression{ after(grammarAccess.getSignalNotExpressionAccess().getSubExpressionsSignalAtomicExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReferenceExpr__ValuedObjectAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReferenceExprAccess().getValuedObjectISignalCrossReference_1_0()); }
(
{ before(grammarAccess.getSignalReferenceExprAccess().getValuedObjectISignalIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getSignalReferenceExprAccess().getValuedObjectISignalIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getSignalReferenceExprAccess().getValuedObjectISignalCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalPreExpr__OperatorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalPreExprAccess().getOperatorEsterel_PreOperatorEnumRuleCall_1_0()); }
	ruleEsterel_PreOperator{ after(grammarAccess.getSignalPreExprAccess().getOperatorEsterel_PreOperatorEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalPreExpr__SubExpressionsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalPreExprAccess().getSubExpressionsSignalReferenceExprParserRuleCall_3_0()); }
	ruleSignalReferenceExpr{ after(grammarAccess.getSignalPreExprAccess().getSubExpressionsSignalReferenceExprParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayExpr__ExpressionAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayExprAccess().getExpressionExpressionParserRuleCall_0_0_0()); }
	ruleExpression{ after(grammarAccess.getDelayExprAccess().getExpressionExpressionParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayExpr__IsImmediateAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayExprAccess().getIsImmediateImmediateKeyword_0_1_0()); }
(
{ before(grammarAccess.getDelayExprAccess().getIsImmediateImmediateKeyword_0_1_0()); }

	'immediate' 

{ after(grammarAccess.getDelayExprAccess().getIsImmediateImmediateKeyword_0_1_0()); }
)

{ after(grammarAccess.getDelayExprAccess().getIsImmediateImmediateKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayExpr__SignalExprAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayExprAccess().getSignalExprSignalReferenceExprParserRuleCall_1_0_0()); }
	ruleSignalReferenceExpr{ after(grammarAccess.getDelayExprAccess().getSignalExprSignalReferenceExprParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayExpr__SignalExprAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayExprAccess().getSignalExprSignalExpressionParserRuleCall_1_1_1_0()); }
	ruleSignalExpression{ after(grammarAccess.getDelayExprAccess().getSignalExprSignalExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__OperatorAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOperatorEsterel_OrOperatorEnumRuleCall_1_1_0_0()); }
	ruleEsterel_OrOperator{ after(grammarAccess.getOrExpressionAccess().getOperatorEsterel_OrOperatorEnumRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__SubExpressionsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getSubExpressionsAndExpressionParserRuleCall_1_1_1_0()); }
	ruleAndExpression{ after(grammarAccess.getOrExpressionAccess().getSubExpressionsAndExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__OperatorAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOperatorEsterel_AndOperatorEnumRuleCall_1_1_0_0()); }
	ruleEsterel_AndOperator{ after(grammarAccess.getAndExpressionAccess().getOperatorEsterel_AndOperatorEnumRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__SubExpressionsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_1_1_0()); }
	ruleCompareOperation{ after(grammarAccess.getAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getOperatorEsterel_CompareOperatorEnumRuleCall_1_1_0()); }
	ruleEsterel_CompareOperator{ after(grammarAccess.getCompareOperationAccess().getOperatorEsterel_CompareOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getSubExpressionsNotOrValuedExpressionParserRuleCall_1_2_0()); }
	ruleNotOrValuedExpression{ after(grammarAccess.getCompareOperationAccess().getSubExpressionsNotOrValuedExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__OperatorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getOperatorEsterel_NotOperatorEnumRuleCall_0_1_0()); }
	ruleEsterel_NotOperator{ after(grammarAccess.getNotExpressionAccess().getOperatorEsterel_NotOperatorEnumRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__SubExpressionsAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getSubExpressionsNotExpressionParserRuleCall_0_2_0()); }
	ruleNotExpression{ after(grammarAccess.getNotExpressionAccess().getSubExpressionsNotExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__OperatorAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getOperatorEsterel_AddOperatorEnumRuleCall_1_1_0_0()); }
	ruleEsterel_AddOperator{ after(grammarAccess.getAddExpressionAccess().getOperatorEsterel_AddOperatorEnumRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__SubExpressionsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getSubExpressionsSubExpressionParserRuleCall_1_1_1_0()); }
	ruleSubExpression{ after(grammarAccess.getAddExpressionAccess().getSubExpressionsSubExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__OperatorAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getOperatorEsterel_SubOperatorEnumRuleCall_1_1_0_0()); }
	ruleEsterel_SubOperator{ after(grammarAccess.getSubExpressionAccess().getOperatorEsterel_SubOperatorEnumRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__SubExpressionsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getSubExpressionsMultExpressionParserRuleCall_1_1_1_0()); }
	ruleMultExpression{ after(grammarAccess.getSubExpressionAccess().getSubExpressionsMultExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__OperatorAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getOperatorEsterel_MultOperatorEnumRuleCall_1_1_0_0()); }
	ruleEsterel_MultOperator{ after(grammarAccess.getMultExpressionAccess().getOperatorEsterel_MultOperatorEnumRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__SubExpressionsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getSubExpressionsDivExpressionParserRuleCall_1_1_1_0()); }
	ruleDivExpression{ after(grammarAccess.getMultExpressionAccess().getSubExpressionsDivExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getOperatorEsterel_DivOperatorEnumRuleCall_1_1_0()); }
	ruleEsterel_DivOperator{ after(grammarAccess.getDivExpressionAccess().getOperatorEsterel_DivOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getSubExpressionsModExpressionParserRuleCall_1_2_0()); }
	ruleModExpression{ after(grammarAccess.getDivExpressionAccess().getSubExpressionsModExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getOperatorEsterel_ModOperatorEnumRuleCall_1_1_0()); }
	ruleEsterel_ModOperator{ after(grammarAccess.getModExpressionAccess().getOperatorEsterel_ModOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_2_0()); }
	ruleAtomicValuedExpression{ after(grammarAccess.getModExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__OperatorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getOperatorEsterel_SubOperatorEnumRuleCall_0_1_0()); }
	ruleEsterel_SubOperator{ after(grammarAccess.getNegExpressionAccess().getOperatorEsterel_SubOperatorEnumRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__SubExpressionsAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_2_0()); }
	ruleNegExpression{ after(grammarAccess.getNegExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__OperatorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorEsterel_PreOperatorEnumRuleCall_0_1_0()); }
	ruleEsterel_PreOperator{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorEsterel_PreOperatorEnumRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectTestExpressionParserRuleCall_0_3_0()); }
	ruleValuedObjectTestExpression{ after(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectTestExpressionParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorEsterel_ValueTestOperatorEnumRuleCall_1_1_0()); }
	ruleEsterel_ValueTestOperator{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorEsterel_ValueTestOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectReferenceParserRuleCall_1_2_0()); }
	ruleValuedObjectReference{ after(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectReferenceParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Pause__AnnotationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPauseAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
	ruleAnnotation{ after(grammarAccess.getPauseAccess().getAnnotationsAnnotationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Label__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getLabelAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Label__NameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Goto__TargetAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGotoAccess().getTargetLabelCrossReference_1_0()); }
(
{ before(grammarAccess.getGotoAccess().getTargetLabelIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getGotoAccess().getTargetLabelIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getGotoAccess().getTargetLabelCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ValuedObjectAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getValuedObjectValuedObjectCrossReference_1_0()); }
(
{ before(grammarAccess.getAssignmentAccess().getValuedObjectValuedObjectIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getAssignmentAccess().getValuedObjectValuedObjectIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getAssignmentAccess().getValuedObjectValuedObjectCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__IndicesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getIndicesExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getAssignmentAccess().getIndicesExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExpressionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__TestEntity__ExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestEntityAccess().getExpressionAnnotatedExpressionParserRuleCall_0_0()); }
	ruleAnnotatedExpression{ after(grammarAccess.getTestEntityAccess().getExpressionAnnotatedExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestEntity__EffectAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestEntityAccess().getEffectEffectParserRuleCall_1_0()); }
	ruleEffect{ after(grammarAccess.getTestEntityAccess().getEffectEffectParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatedExpression__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotatedExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getAnnotatedExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatedExpression__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotatedExpressionAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getAnnotatedExpressionAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__ConstAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getConstConstKeyword_1_0()); }
(
{ before(grammarAccess.getDeclarationAccess().getConstConstKeyword_1_0()); }

	'const' 

{ after(grammarAccess.getDeclarationAccess().getConstConstKeyword_1_0()); }
)

{ after(grammarAccess.getDeclarationAccess().getConstConstKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__ExternAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getExternExternKeyword_2_0()); }
(
{ before(grammarAccess.getDeclarationAccess().getExternExternKeyword_2_0()); }

	'extern' 

{ after(grammarAccess.getDeclarationAccess().getExternExternKeyword_2_0()); }
)

{ after(grammarAccess.getDeclarationAccess().getExternExternKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__VolatileAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getVolatileVolatileKeyword_3_0()); }
(
{ before(grammarAccess.getDeclarationAccess().getVolatileVolatileKeyword_3_0()); }

	'volatile' 

{ after(grammarAccess.getDeclarationAccess().getVolatileVolatileKeyword_3_0()); }
)

{ after(grammarAccess.getDeclarationAccess().getVolatileVolatileKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__InputAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getInputInputKeyword_4_0()); }
(
{ before(grammarAccess.getDeclarationAccess().getInputInputKeyword_4_0()); }

	'input' 

{ after(grammarAccess.getDeclarationAccess().getInputInputKeyword_4_0()); }
)

{ after(grammarAccess.getDeclarationAccess().getInputInputKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__OutputAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getOutputOutputKeyword_5_0()); }
(
{ before(grammarAccess.getDeclarationAccess().getOutputOutputKeyword_5_0()); }

	'output' 

{ after(grammarAccess.getDeclarationAccess().getOutputOutputKeyword_5_0()); }
)

{ after(grammarAccess.getDeclarationAccess().getOutputOutputKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__StaticAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getStaticStaticKeyword_6_0()); }
(
{ before(grammarAccess.getDeclarationAccess().getStaticStaticKeyword_6_0()); }

	'static' 

{ after(grammarAccess.getDeclarationAccess().getStaticStaticKeyword_6_0()); }
)

{ after(grammarAccess.getDeclarationAccess().getStaticStaticKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__SignalAssignment_7_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSignalSignalKeyword_7_0_0_0()); }
(
{ before(grammarAccess.getDeclarationAccess().getSignalSignalKeyword_7_0_0_0()); }

	'signal' 

{ after(grammarAccess.getDeclarationAccess().getSignalSignalKeyword_7_0_0_0()); }
)

{ after(grammarAccess.getDeclarationAccess().getSignalSignalKeyword_7_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__TypeAssignment_7_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getTypeValueTypeEnumRuleCall_7_0_1_0()); }
	ruleValueType{ after(grammarAccess.getDeclarationAccess().getTypeValueTypeEnumRuleCall_7_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__SignalAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSignalSignalKeyword_7_1_0()); }
(
{ before(grammarAccess.getDeclarationAccess().getSignalSignalKeyword_7_1_0()); }

	'signal' 

{ after(grammarAccess.getDeclarationAccess().getSignalSignalKeyword_7_1_0()); }
)

{ after(grammarAccess.getDeclarationAccess().getSignalSignalKeyword_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__ValuedObjectsAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_8_0()); }
	ruleValuedObject{ after(grammarAccess.getDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__ValuedObjectsAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_9_1_0()); }
	ruleValuedObject{ after(grammarAccess.getDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getValuedObjectAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__CardinalitiesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getCardinalitiesExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getValuedObjectAccess().getCardinalitiesExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__InitialValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getInitialValueExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getValuedObjectAccess().getInitialValueExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObject__CombineOperatorAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectAccess().getCombineOperatorCombineOperatorEnumRuleCall_3_1_0()); }
	ruleCombineOperator{ after(grammarAccess.getValuedObjectAccess().getCombineOperatorCombineOperatorEnumRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getAnnotationsRestrictedAnnotationParserRuleCall_0_0()); }
	ruleRestrictedAnnotation{ after(grammarAccess.getEmissionAccess().getAnnotationsRestrictedAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__ValuedObjectAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getValuedObjectValuedObjectCrossReference_1_0()); }
(
{ before(grammarAccess.getEmissionAccess().getValuedObjectValuedObjectIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getEmissionAccess().getValuedObjectValuedObjectIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getEmissionAccess().getValuedObjectValuedObjectCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__NewValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getNewValueExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getEmissionAccess().getNewValueExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixEffect__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getPostfixEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixEffect__ValuedObjectAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixEffectAccess().getValuedObjectValuedObjectCrossReference_1_0()); }
(
{ before(grammarAccess.getPostfixEffectAccess().getValuedObjectValuedObjectIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getPostfixEffectAccess().getValuedObjectValuedObjectIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getPostfixEffectAccess().getValuedObjectValuedObjectCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixEffect__IndicesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixEffectAccess().getIndicesExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getPostfixEffectAccess().getIndicesExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixEffect__OperatorAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixEffectAccess().getOperatorPostfixOperatorEnumRuleCall_3_0()); }
	rulePostfixOperator{ after(grammarAccess.getPostfixEffectAccess().getOperatorPostfixOperatorEnumRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HostcodeEffect__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHostcodeEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getHostcodeEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HostcodeEffect__TextAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHostcodeEffectAccess().getTextHOSTCODETerminalRuleCall_1_0()); }
	RULE_HOSTCODE{ after(grammarAccess.getHostcodeEffectAccess().getTextHOSTCODETerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getFunctionCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__FunctionNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getFunctionNameExtendedIDParserRuleCall_2_0()); }
	ruleExtendedID{ after(grammarAccess.getFunctionCallEffectAccess().getFunctionNameExtendedIDParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__ParametersAssignment_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_3_0_1_0()); }
	ruleParameter{ after(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCallEffect__ParametersAssignment_3_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_3_0_2_1_0()); }
	ruleParameter{ after(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_3_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__OperatorAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getOperatorLogicalOrOperatorEnumRuleCall_1_1_0_0()); }
	ruleLogicalOrOperator{ after(grammarAccess.getLogicalOrExpressionAccess().getOperatorLogicalOrOperatorEnumRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalOrExpression__SubExpressionsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_1_1_0()); }
	ruleLogicalAndExpression{ after(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__OperatorAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getOperatorLogicalAndOperatorEnumRuleCall_1_1_0_0()); }
	ruleLogicalAndOperator{ after(grammarAccess.getLogicalAndExpressionAccess().getOperatorLogicalAndOperatorEnumRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LogicalAndExpression__SubExpressionsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_1_1_0()); }
	ruleBitwiseOrExpression{ after(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsBitwiseOrExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpression__OperatorAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getOperatorBitwiseOrOperatorEnumRuleCall_1_1_0_0()); }
	ruleBitwiseOrOperator{ after(grammarAccess.getBitwiseOrExpressionAccess().getOperatorBitwiseOrOperatorEnumRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOrExpression__SubExpressionsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_1_1_0()); }
	ruleBitwiseAndExpression{ after(grammarAccess.getBitwiseOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpression__OperatorAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getOperatorBitwiseAndOperatorEnumRuleCall_1_1_0_0()); }
	ruleBitwiseAndOperator{ after(grammarAccess.getBitwiseAndExpressionAccess().getOperatorBitwiseAndOperatorEnumRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseAndExpression__SubExpressionsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_1_1_0()); }
	ruleCompareOperation{ after(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectReference__ValuedObjectAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0()); }
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectReference__IndicesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getIndicesExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getValuedObjectReferenceAccess().getIndicesExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__FunctionNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getFunctionNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getFunctionCallAccess().getFunctionNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ParametersAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_2_0_1_0()); }
	ruleParameter{ after(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__ParametersAssignment_2_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_2_0_2_1_0()); }
	ruleParameter{ after(grammarAccess.getFunctionCallAccess().getParametersParameterParserRuleCall_2_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__PureOutputAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getPureOutputExclamationMarkKeyword_0_0_0()); }
(
{ before(grammarAccess.getParameterAccess().getPureOutputExclamationMarkKeyword_0_0_0()); }

	'!' 

{ after(grammarAccess.getParameterAccess().getPureOutputExclamationMarkKeyword_0_0_0()); }
)

{ after(grammarAccess.getParameterAccess().getPureOutputExclamationMarkKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__CallByReferenceAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getCallByReferenceAmpersandKeyword_0_1_0()); }
(
{ before(grammarAccess.getParameterAccess().getCallByReferenceAmpersandKeyword_0_1_0()); }

	'&' 

{ after(grammarAccess.getParameterAccess().getCallByReferenceAmpersandKeyword_0_1_0()); }
)

{ after(grammarAccess.getParameterAccess().getCallByReferenceAmpersandKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getParameterAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__TextAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextExpressionAccess().getTextHOSTCODETerminalRuleCall_0()); }
	RULE_HOSTCODE{ after(grammarAccess.getTextExpressionAccess().getTextHOSTCODETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatValueAccess().getValueFLOATTerminalRuleCall_0()); }
	RULE_FLOAT{ after(grammarAccess.getFloatValueAccess().getValueFLOATTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BoolValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoolValueAccess().getValueBOOLEANTerminalRuleCall_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getBoolValueAccess().getValueBOOLEANTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommentAnnotation__ValuesAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAnnotationAccess().getValuesCOMMENT_ANNOTATIONTerminalRuleCall_0()); }
	RULE_COMMENT_ANNOTATION{ after(grammarAccess.getCommentAnnotationAccess().getValuesCOMMENT_ANNOTATIONTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getTagAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__ValuesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__ValuesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringParserRuleCall_3_1_0()); }
	ruleEString{ after(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); }
	ruleExtendedID{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__ValuesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_5_0()); }
	ruleEStringBoolean{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__ValuesAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_6_1_0()); }
	ruleEStringBoolean{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedKeyStringValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedKeyStringValueAnnotation__ValuesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedKeyStringValueAnnotation__ValuesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_3_1_0()); }
	RULE_STRING{ after(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedTypedKeyStringValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedTypedKeyStringValueAnnotation__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); }
	ruleExtendedID{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_5_0()); }
	RULE_STRING{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QuotedTypedKeyStringValueAnnotation__ValuesAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_6_1_0()); }
	RULE_STRING{ after(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getValueBOOLEANTerminalRuleCall_2_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getValueBOOLEANTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getKeyIntValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getValueIntegerParserRuleCall_2_0()); }
	ruleInteger{ after(grammarAccess.getKeyIntValueAnnotationAccess().getValueIntegerParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getValueFloategerParserRuleCall_2_0()); }
	ruleFloateger{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getValueFloategerParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ML_COMMENT : ('%' '{' ( options {greedy=false;} : . )*'}' '%'|'/*' ~('*') ( options {greedy=false;} : . )*'*/');

RULE_SL_COMMENT : ('//'|'%') ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_STRING : '"' (~('"')|'"' '"')* '"';

RULE_HOSTCODE : '\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'';

RULE_COMMENT_ANNOTATION : '/**' ( options {greedy=false;} : . )*'*/';

fragment RULE_NUMBER : '0'..'9';

RULE_INT : RULE_NUMBER+;

RULE_FLOAT : (RULE_NUMBER+ '.' RULE_NUMBER* (('e'|'E') ('+'|'-')? RULE_NUMBER+)? 'f'?|RULE_NUMBER+ 'f');

RULE_BOOLEAN : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


