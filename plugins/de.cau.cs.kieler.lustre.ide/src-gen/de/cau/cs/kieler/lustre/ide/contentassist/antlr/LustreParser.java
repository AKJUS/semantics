/*
 * generated by Xtext
 */
package de.cau.cs.kieler.lustre.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import de.cau.cs.kieler.lustre.ide.contentassist.antlr.internal.InternalLustreParser;
import de.cau.cs.kieler.lustre.services.LustreGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class LustreParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(LustreGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, LustreGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getLustreProgramAccess().getAlternatives_1(), "rule__LustreProgram__Alternatives_1");
			builder.put(grammarAccess.getPackBodyAccess().getAlternatives(), "rule__PackBody__Alternatives");
			builder.put(grammarAccess.getTypeDeclarationAccess().getAlternatives_1_1(), "rule__TypeDeclaration__Alternatives_1_1");
			builder.put(grammarAccess.getTypeAccess().getAlternatives_0(), "rule__Type__Alternatives_0");
			builder.put(grammarAccess.getExternalNodeDeclarationAccess().getAlternatives_2(), "rule__ExternalNodeDeclaration__Alternatives_2");
			builder.put(grammarAccess.getNodeDeclarationAccess().getAlternatives_1(), "rule__NodeDeclaration__Alternatives_1");
			builder.put(grammarAccess.getNodeDeclarationAccess().getAlternatives_4(), "rule__NodeDeclaration__Alternatives_4");
			builder.put(grammarAccess.getNodeDeclarationAccess().getAlternatives_4_0_3(), "rule__NodeDeclaration__Alternatives_4_0_3");
			builder.put(grammarAccess.getNodeDeclarationAccess().getAlternatives_4_0_3_1_1(), "rule__NodeDeclaration__Alternatives_4_0_3_1_1");
			builder.put(grammarAccess.getNodeDeclarationAccess().getAlternatives_4_0_3_1_3(), "rule__NodeDeclaration__Alternatives_4_0_3_1_3");
			builder.put(grammarAccess.getNodeDeclarationAccess().getAlternatives_4_0_3_1_5(), "rule__NodeDeclaration__Alternatives_4_0_3_1_5");
			builder.put(grammarAccess.getStaticParamAccess().getAlternatives(), "rule__StaticParam__Alternatives");
			builder.put(grammarAccess.getStaticParamAccess().getAlternatives_2_1(), "rule__StaticParam__Alternatives_2_1");
			builder.put(grammarAccess.getStaticArgAccess().getAlternatives(), "rule__StaticArg__Alternatives");
			builder.put(grammarAccess.getStaticArgAccess().getAlternatives_2_0(), "rule__StaticArg__Alternatives_2_0");
			builder.put(grammarAccess.getStaticArgAccess().getAlternatives_2_2_2_0(), "rule__StaticArg__Alternatives_2_2_2_0");
			builder.put(grammarAccess.getByNameStaticArgAccess().getAlternatives(), "rule__ByNameStaticArg__Alternatives");
			builder.put(grammarAccess.getByNameStaticArgAccess().getAlternatives_2_0(), "rule__ByNameStaticArg__Alternatives_2_0");
			builder.put(grammarAccess.getByNameStaticArgAccess().getAlternatives_2_4_2_0(), "rule__ByNameStaticArg__Alternatives_2_4_2_0");
			builder.put(grammarAccess.getLustreTypedValuedIdsAccess().getAlternatives_1(), "rule__LustreTypedValuedIds__Alternatives_1");
			builder.put(grammarAccess.getLustreClockedIdDeclarationAccess().getAlternatives(), "rule__LustreClockedIdDeclaration__Alternatives");
			builder.put(grammarAccess.getClockExpressionAccess().getAlternatives(), "rule__ClockExpression__Alternatives");
			builder.put(grammarAccess.getPackListAccess().getAlternatives(), "rule__PackList__Alternatives");
			builder.put(grammarAccess.getProvideAccess().getAlternatives(), "rule__Provide__Alternatives");
			builder.put(grammarAccess.getProvideAccess().getAlternatives_2_1(), "rule__Provide__Alternatives_2_1");
			builder.put(grammarAccess.getPackageEquationAccess().getAlternatives_5_0(), "rule__PackageEquation__Alternatives_5_0");
			builder.put(grammarAccess.getConstant_DeclarationAccess().getAlternatives(), "rule__Constant_Declaration__Alternatives");
			builder.put(grammarAccess.getLocal_Constant_DeclarationAccess().getAlternatives(), "rule__Local_Constant_Declaration__Alternatives");
			builder.put(grammarAccess.getEquationAccess().getAlternatives(), "rule__Equation__Alternatives");
			builder.put(grammarAccess.getAStateAccess().getAlternatives_2(), "rule__AState__Alternatives_2");
			builder.put(grammarAccess.getATransitionAccess().getAlternatives_0(), "rule__ATransition__Alternatives_0");
			builder.put(grammarAccess.getATransitionAccess().getAlternatives_2(), "rule__ATransition__Alternatives_2");
			builder.put(grammarAccess.getLeft_PartAccess().getAlternatives(), "rule__Left_Part__Alternatives");
			builder.put(grammarAccess.getSelectorAccess().getAlternatives(), "rule__Selector__Alternatives");
			builder.put(grammarAccess.getExpressionAccess().getAlternatives(), "rule__Expression__Alternatives");
			builder.put(grammarAccess.getEqualityAccess().getOpAlternatives_1_1_0(), "rule__Equality__OpAlternatives_1_1_0");
			builder.put(grammarAccess.getComparisonAccess().getOpAlternatives_1_1_0(), "rule__Comparison__OpAlternatives_1_1_0");
			builder.put(grammarAccess.getPlusOrMinusAccess().getAlternatives_1_0(), "rule__PlusOrMinus__Alternatives_1_0");
			builder.put(grammarAccess.getMulOrDivAccess().getAlternatives_1_0(), "rule__MulOrDiv__Alternatives_1_0");
			builder.put(grammarAccess.getPrimaryAccess().getAlternatives(), "rule__Primary__Alternatives");
			builder.put(grammarAccess.getAtomicExpressionAccess().getAlternatives(), "rule__AtomicExpression__Alternatives");
			builder.put(grammarAccess.getConstantExpressionAccess().getAlternatives(), "rule__ConstantExpression__Alternatives");
			builder.put(grammarAccess.getIdentRefAccess().getAlternatives(), "rule__IdentRef__Alternatives");
			builder.put(grammarAccess.getLustreProgramAccess().getGroup(), "rule__LustreProgram__Group__0");
			builder.put(grammarAccess.getIncludeAccess().getGroup(), "rule__Include__Group__0");
			builder.put(grammarAccess.getPackBodyAccess().getGroup_1(), "rule__PackBody__Group_1__0");
			builder.put(grammarAccess.getConstantsDeclarationAccess().getGroup(), "rule__ConstantsDeclaration__Group__0");
			builder.put(grammarAccess.getConstantsDeclarationAccess().getGroup_3(), "rule__ConstantsDeclaration__Group_3__0");
			builder.put(grammarAccess.getTypeDeclarationAccess().getGroup(), "rule__TypeDeclaration__Group__0");
			builder.put(grammarAccess.getTypeDeclarationAccess().getGroup_1(), "rule__TypeDeclaration__Group_1__0");
			builder.put(grammarAccess.getTypeAccess().getGroup(), "rule__Type__Group__0");
			builder.put(grammarAccess.getTypeAccess().getGroup_1(), "rule__Type__Group_1__0");
			builder.put(grammarAccess.getEnumTypeAccess().getGroup(), "rule__EnumType__Group__0");
			builder.put(grammarAccess.getEnumTypeAccess().getGroup_3(), "rule__EnumType__Group_3__0");
			builder.put(grammarAccess.getStructTypeAccess().getGroup(), "rule__StructType__Group__0");
			builder.put(grammarAccess.getStructTypeAccess().getGroup_3(), "rule__StructType__Group_3__0");
			builder.put(grammarAccess.getExternalNodeDeclarationAccess().getGroup(), "rule__ExternalNodeDeclaration__Group__0");
			builder.put(grammarAccess.getNodeDeclarationAccess().getGroup(), "rule__NodeDeclaration__Group__0");
			builder.put(grammarAccess.getNodeDeclarationAccess().getGroup_3(), "rule__NodeDeclaration__Group_3__0");
			builder.put(grammarAccess.getNodeDeclarationAccess().getGroup_3_2(), "rule__NodeDeclaration__Group_3_2__0");
			builder.put(grammarAccess.getNodeDeclarationAccess().getGroup_4_0(), "rule__NodeDeclaration__Group_4_0__0");
			builder.put(grammarAccess.getNodeDeclarationAccess().getGroup_4_0_3_0(), "rule__NodeDeclaration__Group_4_0_3_0__0");
			builder.put(grammarAccess.getNodeDeclarationAccess().getGroup_4_0_3_0_2(), "rule__NodeDeclaration__Group_4_0_3_0_2__0");
			builder.put(grammarAccess.getNodeDeclarationAccess().getGroup_4_0_3_0_2_2(), "rule__NodeDeclaration__Group_4_0_3_0_2_2__0");
			builder.put(grammarAccess.getNodeDeclarationAccess().getGroup_4_0_3_1(), "rule__NodeDeclaration__Group_4_0_3_1__0");
			builder.put(grammarAccess.getNodeDeclarationAccess().getGroup_4_0_3_1_1_1(), "rule__NodeDeclaration__Group_4_0_3_1_1_1__0");
			builder.put(grammarAccess.getNodeDeclarationAccess().getGroup_4_0_3_1_1_1_2(), "rule__NodeDeclaration__Group_4_0_3_1_1_1_2__0");
			builder.put(grammarAccess.getNodeDeclarationAccess().getGroup_4_1(), "rule__NodeDeclaration__Group_4_1__0");
			builder.put(grammarAccess.getNodeDeclarationAccess().getGroup_4_1_2(), "rule__NodeDeclaration__Group_4_1_2__0");
			builder.put(grammarAccess.getNodeDeclarationAccess().getGroup_4_1_2_2(), "rule__NodeDeclaration__Group_4_1_2_2__0");
			builder.put(grammarAccess.getParamsAccess().getGroup(), "rule__Params__Group__0");
			builder.put(grammarAccess.getParamsAccess().getGroup_2(), "rule__Params__Group_2__0");
			builder.put(grammarAccess.getParamsAccess().getGroup_2_1(), "rule__Params__Group_2_1__0");
			builder.put(grammarAccess.getStaticParamAccess().getGroup_0(), "rule__StaticParam__Group_0__0");
			builder.put(grammarAccess.getStaticParamAccess().getGroup_1(), "rule__StaticParam__Group_1__0");
			builder.put(grammarAccess.getStaticParamAccess().getGroup_2(), "rule__StaticParam__Group_2__0");
			builder.put(grammarAccess.getStaticArgAccess().getGroup_0(), "rule__StaticArg__Group_0__0");
			builder.put(grammarAccess.getStaticArgAccess().getGroup_1(), "rule__StaticArg__Group_1__0");
			builder.put(grammarAccess.getStaticArgAccess().getGroup_2(), "rule__StaticArg__Group_2__0");
			builder.put(grammarAccess.getStaticArgAccess().getGroup_2_2(), "rule__StaticArg__Group_2_2__0");
			builder.put(grammarAccess.getStaticArgAccess().getGroup_2_2_2(), "rule__StaticArg__Group_2_2_2__0");
			builder.put(grammarAccess.getByNameStaticArgAccess().getGroup_0(), "rule__ByNameStaticArg__Group_0__0");
			builder.put(grammarAccess.getByNameStaticArgAccess().getGroup_1(), "rule__ByNameStaticArg__Group_1__0");
			builder.put(grammarAccess.getByNameStaticArgAccess().getGroup_2(), "rule__ByNameStaticArg__Group_2__0");
			builder.put(grammarAccess.getByNameStaticArgAccess().getGroup_2_4(), "rule__ByNameStaticArg__Group_2_4__0");
			builder.put(grammarAccess.getByNameStaticArgAccess().getGroup_2_4_2(), "rule__ByNameStaticArg__Group_2_4_2__0");
			builder.put(grammarAccess.getByNameStaticArgAccess().getGroup_3(), "rule__ByNameStaticArg__Group_3__0");
			builder.put(grammarAccess.getLustreTypedIdAccess().getGroup(), "rule__LustreTypedId__Group__0");
			builder.put(grammarAccess.getLustreTypedIdAccess().getGroup_1(), "rule__LustreTypedId__Group_1__0");
			builder.put(grammarAccess.getLustreTypedValuedIdsAccess().getGroup(), "rule__LustreTypedValuedIds__Group__0");
			builder.put(grammarAccess.getLustreTypedValuedIdsAccess().getGroup_1_0(), "rule__LustreTypedValuedIds__Group_1_0__0");
			builder.put(grammarAccess.getLustreTypedValuedIdsAccess().getGroup_1_0_0(), "rule__LustreTypedValuedIds__Group_1_0_0__0");
			builder.put(grammarAccess.getLustreTypedValuedIdsAccess().getGroup_1_0_3(), "rule__LustreTypedValuedIds__Group_1_0_3__0");
			builder.put(grammarAccess.getLustreTypedValuedIdsAccess().getGroup_1_1(), "rule__LustreTypedValuedIds__Group_1_1__0");
			builder.put(grammarAccess.getLustreClockedIdDeclarationAccess().getGroup_0(), "rule__LustreClockedIdDeclaration__Group_0__0");
			builder.put(grammarAccess.getLustreClockedIdDeclarationAccess().getGroup_0_1(), "rule__LustreClockedIdDeclaration__Group_0_1__0");
			builder.put(grammarAccess.getLustreClockedIdDeclarationAccess().getGroup_1(), "rule__LustreClockedIdDeclaration__Group_1__0");
			builder.put(grammarAccess.getLustreClockedIdDeclarationAccess().getGroup_1_2(), "rule__LustreClockedIdDeclaration__Group_1_2__0");
			builder.put(grammarAccess.getClockExpressionAccess().getGroup_0(), "rule__ClockExpression__Group_0__0");
			builder.put(grammarAccess.getClockExpressionAccess().getGroup_2(), "rule__ClockExpression__Group_2__0");
			builder.put(grammarAccess.getClockExpressionAccess().getGroup_3(), "rule__ClockExpression__Group_3__0");
			builder.put(grammarAccess.getModelDeclarationAccess().getGroup(), "rule__ModelDeclaration__Group__0");
			builder.put(grammarAccess.getModelDeclarationAccess().getGroup_2(), "rule__ModelDeclaration__Group_2__0");
			builder.put(grammarAccess.getModelDeclarationAccess().getGroup_2_2(), "rule__ModelDeclaration__Group_2_2__0");
			builder.put(grammarAccess.getModelDeclarationAccess().getGroup_5(), "rule__ModelDeclaration__Group_5__0");
			builder.put(grammarAccess.getModelDeclarationAccess().getGroup_7(), "rule__ModelDeclaration__Group_7__0");
			builder.put(grammarAccess.getModelDeclarationAccess().getGroup_7_3(), "rule__ModelDeclaration__Group_7_3__0");
			builder.put(grammarAccess.getProvideAccess().getGroup_0(), "rule__Provide__Group_0__0");
			builder.put(grammarAccess.getProvideAccess().getGroup_0_4(), "rule__Provide__Group_0_4__0");
			builder.put(grammarAccess.getProvideAccess().getGroup_1(), "rule__Provide__Group_1__0");
			builder.put(grammarAccess.getProvideAccess().getGroup_2(), "rule__Provide__Group_2__0");
			builder.put(grammarAccess.getProvideAccess().getGroup_2_3(), "rule__Provide__Group_2_3__0");
			builder.put(grammarAccess.getProvideAccess().getGroup_2_3_2(), "rule__Provide__Group_2_3_2__0");
			builder.put(grammarAccess.getPackageDeclarationAccess().getGroup(), "rule__PackageDeclaration__Group__0");
			builder.put(grammarAccess.getPackageDeclarationAccess().getGroup_2(), "rule__PackageDeclaration__Group_2__0");
			builder.put(grammarAccess.getPackageDeclarationAccess().getGroup_2_2(), "rule__PackageDeclaration__Group_2_2__0");
			builder.put(grammarAccess.getPackageDeclarationAccess().getGroup_3(), "rule__PackageDeclaration__Group_3__0");
			builder.put(grammarAccess.getPackageDeclarationAccess().getGroup_3_3(), "rule__PackageDeclaration__Group_3_3__0");
			builder.put(grammarAccess.getPackageEquationAccess().getGroup(), "rule__PackageEquation__Group__0");
			builder.put(grammarAccess.getPackageEquationAccess().getGroup_5(), "rule__PackageEquation__Group_5__0");
			builder.put(grammarAccess.getPackage_ProvidedAccess().getGroup(), "rule__Package_Provided__Group__0");
			builder.put(grammarAccess.getPackage_ProvidedAccess().getGroup_3(), "rule__Package_Provided__Group_3__0");
			builder.put(grammarAccess.getPackage_ProvidedAccess().getGroup_3_1(), "rule__Package_Provided__Group_3_1__0");
			builder.put(grammarAccess.getPackage_ProvidedAccess().getGroup_8(), "rule__Package_Provided__Group_8__0");
			builder.put(grammarAccess.getPackage_Provided_IOAccess().getGroup(), "rule__Package_Provided_IO__Group__0");
			builder.put(grammarAccess.getArray_TypeAccess().getGroup(), "rule__Array_Type__Group__0");
			builder.put(grammarAccess.getRecord_TypeAccess().getGroup(), "rule__Record_Type__Group__0");
			builder.put(grammarAccess.getRecord_TypeAccess().getGroup_3(), "rule__Record_Type__Group_3__0");
			builder.put(grammarAccess.getFieldAccess().getGroup(), "rule__Field__Group__0");
			builder.put(grammarAccess.getConstant_DeclarationAccess().getGroup_0(), "rule__Constant_Declaration__Group_0__0");
			builder.put(grammarAccess.getConstant_DeclarationAccess().getGroup_1(), "rule__Constant_Declaration__Group_1__0");
			builder.put(grammarAccess.getConstant_DeclarationAccess().getGroup_2(), "rule__Constant_Declaration__Group_2__0");
			builder.put(grammarAccess.getVariable_DeclarationAccess().getGroup(), "rule__Variable_Declaration__Group__0");
			builder.put(grammarAccess.getVariable_DeclarationAccess().getGroup_3(), "rule__Variable_Declaration__Group_3__0");
			builder.put(grammarAccess.getLocal_Variable_DeclarationAccess().getGroup(), "rule__Local_Variable_Declaration__Group__0");
			builder.put(grammarAccess.getLocal_Constant_DeclarationAccess().getGroup_0(), "rule__Local_Constant_Declaration__Group_0__0");
			builder.put(grammarAccess.getLocal_Constant_DeclarationAccess().getGroup_1(), "rule__Local_Constant_Declaration__Group_1__0");
			builder.put(grammarAccess.getEquationAccess().getGroup_0(), "rule__Equation__Group_0__0");
			builder.put(grammarAccess.getEquationAccess().getGroup_1(), "rule__Equation__Group_1__0");
			builder.put(grammarAccess.getEquationAccess().getGroup_2(), "rule__Equation__Group_2__0");
			builder.put(grammarAccess.getAssertionAccess().getGroup(), "rule__Assertion__Group__0");
			builder.put(grammarAccess.getAutomatonAccess().getGroup(), "rule__Automaton__Group__0");
			builder.put(grammarAccess.getAutomatonAccess().getGroup_2(), "rule__Automaton__Group_2__0");
			builder.put(grammarAccess.getAStateAccess().getGroup(), "rule__AState__Group__0");
			builder.put(grammarAccess.getATransitionAccess().getGroup(), "rule__ATransition__Group__0");
			builder.put(grammarAccess.getLeft_PartAccess().getGroup_0(), "rule__Left_Part__Group_0__0");
			builder.put(grammarAccess.getLeft_ListAccess().getGroup(), "rule__Left_List__Group__0");
			builder.put(grammarAccess.getLeft_ListAccess().getGroup_1(), "rule__Left_List__Group_1__0");
			builder.put(grammarAccess.getLeftAccess().getGroup(), "rule__Left__Group__0");
			builder.put(grammarAccess.getSelectorAccess().getGroup_0(), "rule__Selector__Group_0__0");
			builder.put(grammarAccess.getSelectorAccess().getGroup_1(), "rule__Selector__Group_1__0");
			builder.put(grammarAccess.getSelTrancheEndAccess().getGroup(), "rule__SelTrancheEnd__Group__0");
			builder.put(grammarAccess.getExpressionAccess().getGroup_0(), "rule__Expression__Group_0__0");
			builder.put(grammarAccess.getFbyAccess().getGroup(), "rule__Fby__Group__0");
			builder.put(grammarAccess.getFbyAccess().getGroup_1(), "rule__Fby__Group_1__0");
			builder.put(grammarAccess.getFbyAccess().getGroup_1_1(), "rule__Fby__Group_1_1__0");
			builder.put(grammarAccess.getArrowAccess().getGroup(), "rule__Arrow__Group__0");
			builder.put(grammarAccess.getArrowAccess().getGroup_1(), "rule__Arrow__Group_1__0");
			builder.put(grammarAccess.getArrowAccess().getGroup_1_1(), "rule__Arrow__Group_1_1__0");
			builder.put(grammarAccess.getOrAccess().getGroup(), "rule__Or__Group__0");
			builder.put(grammarAccess.getOrAccess().getGroup_1(), "rule__Or__Group_1__0");
			builder.put(grammarAccess.getOrAccess().getGroup_1_1(), "rule__Or__Group_1_1__0");
			builder.put(grammarAccess.getAndAccess().getGroup(), "rule__And__Group__0");
			builder.put(grammarAccess.getAndAccess().getGroup_1(), "rule__And__Group_1__0");
			builder.put(grammarAccess.getAndAccess().getGroup_1_1(), "rule__And__Group_1_1__0");
			builder.put(grammarAccess.getEqualityAccess().getGroup(), "rule__Equality__Group__0");
			builder.put(grammarAccess.getEqualityAccess().getGroup_1(), "rule__Equality__Group_1__0");
			builder.put(grammarAccess.getComparisonAccess().getGroup(), "rule__Comparison__Group__0");
			builder.put(grammarAccess.getComparisonAccess().getGroup_1(), "rule__Comparison__Group_1__0");
			builder.put(grammarAccess.getModAccess().getGroup(), "rule__Mod__Group__0");
			builder.put(grammarAccess.getModAccess().getGroup_1(), "rule__Mod__Group_1__0");
			builder.put(grammarAccess.getPlusOrMinusAccess().getGroup(), "rule__PlusOrMinus__Group__0");
			builder.put(grammarAccess.getPlusOrMinusAccess().getGroup_1(), "rule__PlusOrMinus__Group_1__0");
			builder.put(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_0(), "rule__PlusOrMinus__Group_1_0_0__0");
			builder.put(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_1(), "rule__PlusOrMinus__Group_1_0_1__0");
			builder.put(grammarAccess.getMulOrDivAccess().getGroup(), "rule__MulOrDiv__Group__0");
			builder.put(grammarAccess.getMulOrDivAccess().getGroup_1(), "rule__MulOrDiv__Group_1__0");
			builder.put(grammarAccess.getMulOrDivAccess().getGroup_1_0_0(), "rule__MulOrDiv__Group_1_0_0__0");
			builder.put(grammarAccess.getMulOrDivAccess().getGroup_1_0_1(), "rule__MulOrDiv__Group_1_0_1__0");
			builder.put(grammarAccess.getPrimaryAccess().getGroup_0(), "rule__Primary__Group_0__0");
			builder.put(grammarAccess.getPrimaryAccess().getGroup_1(), "rule__Primary__Group_1__0");
			builder.put(grammarAccess.getPrimaryAccess().getGroup_2(), "rule__Primary__Group_2__0");
			builder.put(grammarAccess.getPrimaryAccess().getGroup_3(), "rule__Primary__Group_3__0");
			builder.put(grammarAccess.getPrimaryAccess().getGroup_4(), "rule__Primary__Group_4__0");
			builder.put(grammarAccess.getVariableReferenceAccess().getGroup(), "rule__VariableReference__Group__0");
			builder.put(grammarAccess.getConstantExpressionAccess().getGroup_0(), "rule__ConstantExpression__Group_0__0");
			builder.put(grammarAccess.getConstantExpressionAccess().getGroup_1(), "rule__ConstantExpression__Group_1__0");
			builder.put(grammarAccess.getConstantExpressionAccess().getGroup_2(), "rule__ConstantExpression__Group_2__0");
			builder.put(grammarAccess.getIdentRefAccess().getGroup_1(), "rule__IdentRef__Group_1__0");
			builder.put(grammarAccess.getLustreProgramAccess().getIncludesAssignment_0(), "rule__LustreProgram__IncludesAssignment_0");
			builder.put(grammarAccess.getLustreProgramAccess().getPackBodyAssignment_1_0(), "rule__LustreProgram__PackBodyAssignment_1_0");
			builder.put(grammarAccess.getLustreProgramAccess().getPackListAssignment_1_1(), "rule__LustreProgram__PackListAssignment_1_1");
			builder.put(grammarAccess.getPackBodyAccess().getConstantsAssignment_0(), "rule__PackBody__ConstantsAssignment_0");
			builder.put(grammarAccess.getPackBodyAccess().getTypesAssignment_1_1(), "rule__PackBody__TypesAssignment_1_1");
			builder.put(grammarAccess.getPackBodyAccess().getExternalsAssignment_2(), "rule__PackBody__ExternalsAssignment_2");
			builder.put(grammarAccess.getPackBodyAccess().getNodesAssignment_3(), "rule__PackBody__NodesAssignment_3");
			builder.put(grammarAccess.getConstantsDeclarationAccess().getConstantsAssignment_1(), "rule__ConstantsDeclaration__ConstantsAssignment_1");
			builder.put(grammarAccess.getConstantsDeclarationAccess().getConstantsAssignment_3_0(), "rule__ConstantsDeclaration__ConstantsAssignment_3_0");
			builder.put(grammarAccess.getTypeDeclarationAccess().getNameAssignment_0(), "rule__TypeDeclaration__NameAssignment_0");
			builder.put(grammarAccess.getTypeDeclarationAccess().getTypesAssignment_1_1_0(), "rule__TypeDeclaration__TypesAssignment_1_1_0");
			builder.put(grammarAccess.getTypeDeclarationAccess().getEnumsAssignment_1_1_1(), "rule__TypeDeclaration__EnumsAssignment_1_1_1");
			builder.put(grammarAccess.getTypeDeclarationAccess().getStructAssignment_1_1_2(), "rule__TypeDeclaration__StructAssignment_1_1_2");
			builder.put(grammarAccess.getTypeAccess().getNameAssignment_0_0(), "rule__Type__NameAssignment_0_0");
			builder.put(grammarAccess.getTypeAccess().getNameAssignment_0_1(), "rule__Type__NameAssignment_0_1");
			builder.put(grammarAccess.getTypeAccess().getNameAssignment_0_2(), "rule__Type__NameAssignment_0_2");
			builder.put(grammarAccess.getTypeAccess().getNameAssignment_0_3(), "rule__Type__NameAssignment_0_3");
			builder.put(grammarAccess.getTypeAccess().getArraySizeAssignment_1_1(), "rule__Type__ArraySizeAssignment_1_1");
			builder.put(grammarAccess.getEnumTypeAccess().getValuesAssignment_2(), "rule__EnumType__ValuesAssignment_2");
			builder.put(grammarAccess.getEnumTypeAccess().getValuesAssignment_3_1(), "rule__EnumType__ValuesAssignment_3_1");
			builder.put(grammarAccess.getStructTypeAccess().getElementsAssignment_2(), "rule__StructType__ElementsAssignment_2");
			builder.put(grammarAccess.getStructTypeAccess().getElementsAssignment_3_1(), "rule__StructType__ElementsAssignment_3_1");
			builder.put(grammarAccess.getExternalNodeDeclarationAccess().getIsUnsafeAssignment_0(), "rule__ExternalNodeDeclaration__IsUnsafeAssignment_0");
			builder.put(grammarAccess.getExternalNodeDeclarationAccess().getHasStateAssignment_2_1(), "rule__ExternalNodeDeclaration__HasStateAssignment_2_1");
			builder.put(grammarAccess.getExternalNodeDeclarationAccess().getNameAssignment_3(), "rule__ExternalNodeDeclaration__NameAssignment_3");
			builder.put(grammarAccess.getExternalNodeDeclarationAccess().getInputAssignment_4(), "rule__ExternalNodeDeclaration__InputAssignment_4");
			builder.put(grammarAccess.getExternalNodeDeclarationAccess().getOutputAssignment_6(), "rule__ExternalNodeDeclaration__OutputAssignment_6");
			builder.put(grammarAccess.getNodeDeclarationAccess().getIsUnsafeAssignment_0(), "rule__NodeDeclaration__IsUnsafeAssignment_0");
			builder.put(grammarAccess.getNodeDeclarationAccess().getHasStateAssignment_1_1(), "rule__NodeDeclaration__HasStateAssignment_1_1");
			builder.put(grammarAccess.getNodeDeclarationAccess().getNameAssignment_2(), "rule__NodeDeclaration__NameAssignment_2");
			builder.put(grammarAccess.getNodeDeclarationAccess().getStaticParamsAssignment_3_1(), "rule__NodeDeclaration__StaticParamsAssignment_3_1");
			builder.put(grammarAccess.getNodeDeclarationAccess().getStaticParamsAssignment_3_2_1(), "rule__NodeDeclaration__StaticParamsAssignment_3_2_1");
			builder.put(grammarAccess.getNodeDeclarationAccess().getInputAssignment_4_0_0(), "rule__NodeDeclaration__InputAssignment_4_0_0");
			builder.put(grammarAccess.getNodeDeclarationAccess().getOutputAssignment_4_0_2(), "rule__NodeDeclaration__OutputAssignment_4_0_2");
			builder.put(grammarAccess.getNodeDeclarationAccess().getEffectiveNodeAssignment_4_0_3_0_1(), "rule__NodeDeclaration__EffectiveNodeAssignment_4_0_3_0_1");
			builder.put(grammarAccess.getNodeDeclarationAccess().getStaticArgsAssignment_4_0_3_0_2_1(), "rule__NodeDeclaration__StaticArgsAssignment_4_0_3_0_2_1");
			builder.put(grammarAccess.getNodeDeclarationAccess().getStaticArgsAssignment_4_0_3_0_2_2_1(), "rule__NodeDeclaration__StaticArgsAssignment_4_0_3_0_2_2_1");
			builder.put(grammarAccess.getNodeDeclarationAccess().getConstantsAssignment_4_0_3_1_1_0(), "rule__NodeDeclaration__ConstantsAssignment_4_0_3_1_1_0");
			builder.put(grammarAccess.getNodeDeclarationAccess().getVariablesAssignment_4_0_3_1_1_1_1(), "rule__NodeDeclaration__VariablesAssignment_4_0_3_1_1_1_1");
			builder.put(grammarAccess.getNodeDeclarationAccess().getVariablesAssignment_4_0_3_1_1_1_2_1(), "rule__NodeDeclaration__VariablesAssignment_4_0_3_1_1_1_2_1");
			builder.put(grammarAccess.getNodeDeclarationAccess().getEquationsAssignment_4_0_3_1_3_0(), "rule__NodeDeclaration__EquationsAssignment_4_0_3_1_3_0");
			builder.put(grammarAccess.getNodeDeclarationAccess().getAssertionsAssignment_4_0_3_1_3_1(), "rule__NodeDeclaration__AssertionsAssignment_4_0_3_1_3_1");
			builder.put(grammarAccess.getNodeDeclarationAccess().getAutomatonsAssignment_4_0_3_1_3_2(), "rule__NodeDeclaration__AutomatonsAssignment_4_0_3_1_3_2");
			builder.put(grammarAccess.getNodeDeclarationAccess().getEffectiveNodeAssignment_4_1_1(), "rule__NodeDeclaration__EffectiveNodeAssignment_4_1_1");
			builder.put(grammarAccess.getNodeDeclarationAccess().getStaticArgsAssignment_4_1_2_1(), "rule__NodeDeclaration__StaticArgsAssignment_4_1_2_1");
			builder.put(grammarAccess.getNodeDeclarationAccess().getStaticArgsAssignment_4_1_2_2_1(), "rule__NodeDeclaration__StaticArgsAssignment_4_1_2_2_1");
			builder.put(grammarAccess.getParamsAccess().getParameterAssignment_2_0(), "rule__Params__ParameterAssignment_2_0");
			builder.put(grammarAccess.getParamsAccess().getParameterAssignment_2_1_1(), "rule__Params__ParameterAssignment_2_1_1");
			builder.put(grammarAccess.getStaticParamAccess().getNameAssignment_0_1(), "rule__StaticParam__NameAssignment_0_1");
			builder.put(grammarAccess.getStaticParamAccess().getNameAssignment_1_1(), "rule__StaticParam__NameAssignment_1_1");
			builder.put(grammarAccess.getStaticParamAccess().getTypeAssignment_1_3(), "rule__StaticParam__TypeAssignment_1_3");
			builder.put(grammarAccess.getStaticParamAccess().getNameAssignment_2_2(), "rule__StaticParam__NameAssignment_2_2");
			builder.put(grammarAccess.getStaticParamAccess().getNodeInputAssignment_2_3(), "rule__StaticParam__NodeInputAssignment_2_3");
			builder.put(grammarAccess.getStaticParamAccess().getNodeOutputAssignment_2_5(), "rule__StaticParam__NodeOutputAssignment_2_5");
			builder.put(grammarAccess.getStaticArgAccess().getTypeAssignment_0_1(), "rule__StaticArg__TypeAssignment_0_1");
			builder.put(grammarAccess.getStaticArgAccess().getExprAssignment_1_1(), "rule__StaticArg__ExprAssignment_1_1");
			builder.put(grammarAccess.getStaticArgAccess().getNameAssignment_2_1(), "rule__StaticArg__NameAssignment_2_1");
			builder.put(grammarAccess.getStaticArgAccess().getStaticArgsAssignment_2_2_1(), "rule__StaticArg__StaticArgsAssignment_2_2_1");
			builder.put(grammarAccess.getStaticArgAccess().getStaticArgsAssignment_2_2_2_1(), "rule__StaticArg__StaticArgsAssignment_2_2_2_1");
			builder.put(grammarAccess.getByNameStaticArgAccess().getNameAssignment_0_1(), "rule__ByNameStaticArg__NameAssignment_0_1");
			builder.put(grammarAccess.getByNameStaticArgAccess().getTypeAssignment_0_3(), "rule__ByNameStaticArg__TypeAssignment_0_3");
			builder.put(grammarAccess.getByNameStaticArgAccess().getNameAssignment_1_1(), "rule__ByNameStaticArg__NameAssignment_1_1");
			builder.put(grammarAccess.getByNameStaticArgAccess().getExprAssignment_1_3(), "rule__ByNameStaticArg__ExprAssignment_1_3");
			builder.put(grammarAccess.getByNameStaticArgAccess().getNameAssignment_2_1(), "rule__ByNameStaticArg__NameAssignment_2_1");
			builder.put(grammarAccess.getByNameStaticArgAccess().getNodeRefAssignment_2_3(), "rule__ByNameStaticArg__NodeRefAssignment_2_3");
			builder.put(grammarAccess.getByNameStaticArgAccess().getStaticArgsAssignment_2_4_1(), "rule__ByNameStaticArg__StaticArgsAssignment_2_4_1");
			builder.put(grammarAccess.getByNameStaticArgAccess().getStaticArgsAssignment_2_4_2_1(), "rule__ByNameStaticArg__StaticArgsAssignment_2_4_2_1");
			builder.put(grammarAccess.getByNameStaticArgAccess().getNameAssignment_3_0(), "rule__ByNameStaticArg__NameAssignment_3_0");
			builder.put(grammarAccess.getLustreTypedIdAccess().getVariableNamesAssignment_0(), "rule__LustreTypedId__VariableNamesAssignment_0");
			builder.put(grammarAccess.getLustreTypedIdAccess().getVariableNamesAssignment_1_1(), "rule__LustreTypedId__VariableNamesAssignment_1_1");
			builder.put(grammarAccess.getLustreTypedIdAccess().getTypeAssignment_3(), "rule__LustreTypedId__TypeAssignment_3");
			builder.put(grammarAccess.getLustreTypedValuedIdsAccess().getVariableNamesAssignment_0(), "rule__LustreTypedValuedIds__VariableNamesAssignment_0");
			builder.put(grammarAccess.getLustreTypedValuedIdsAccess().getVariableNamesAssignment_1_0_0_1(), "rule__LustreTypedValuedIds__VariableNamesAssignment_1_0_0_1");
			builder.put(grammarAccess.getLustreTypedValuedIdsAccess().getTypeAssignment_1_0_2(), "rule__LustreTypedValuedIds__TypeAssignment_1_0_2");
			builder.put(grammarAccess.getLustreTypedValuedIdsAccess().getValueAssignment_1_0_3_1(), "rule__LustreTypedValuedIds__ValueAssignment_1_0_3_1");
			builder.put(grammarAccess.getLustreTypedValuedIdsAccess().getValueAssignment_1_1_1(), "rule__LustreTypedValuedIds__ValueAssignment_1_1_1");
			builder.put(grammarAccess.getLustreClockedIdDeclarationAccess().getTypedIdsAssignment_0_0(), "rule__LustreClockedIdDeclaration__TypedIdsAssignment_0_0");
			builder.put(grammarAccess.getLustreClockedIdDeclarationAccess().getClockExprAssignment_0_1_1(), "rule__LustreClockedIdDeclaration__ClockExprAssignment_0_1_1");
			builder.put(grammarAccess.getLustreClockedIdDeclarationAccess().getTypedIdsAssignment_1_1(), "rule__LustreClockedIdDeclaration__TypedIdsAssignment_1_1");
			builder.put(grammarAccess.getLustreClockedIdDeclarationAccess().getTypedIdsAssignment_1_2_1(), "rule__LustreClockedIdDeclaration__TypedIdsAssignment_1_2_1");
			builder.put(grammarAccess.getLustreClockedIdDeclarationAccess().getClockExprAssignment_1_5(), "rule__LustreClockedIdDeclaration__ClockExprAssignment_1_5");
			builder.put(grammarAccess.getPackListAccess().getModelDeclarationsAssignment_0(), "rule__PackList__ModelDeclarationsAssignment_0");
			builder.put(grammarAccess.getPackListAccess().getPackageDeclarationsAssignment_1(), "rule__PackList__PackageDeclarationsAssignment_1");
			builder.put(grammarAccess.getPackListAccess().getPackageEquationsAssignment_2(), "rule__PackList__PackageEquationsAssignment_2");
			builder.put(grammarAccess.getModelDeclarationAccess().getNameAssignment_1(), "rule__ModelDeclaration__NameAssignment_1");
			builder.put(grammarAccess.getModelDeclarationAccess().getUsesIdsAssignment_2_1(), "rule__ModelDeclaration__UsesIdsAssignment_2_1");
			builder.put(grammarAccess.getModelDeclarationAccess().getUsesIdsAssignment_2_2_1(), "rule__ModelDeclaration__UsesIdsAssignment_2_2_1");
			builder.put(grammarAccess.getModelDeclarationAccess().getNeedsParamsAssignment_4(), "rule__ModelDeclaration__NeedsParamsAssignment_4");
			builder.put(grammarAccess.getModelDeclarationAccess().getNeedsParamsAssignment_5_1(), "rule__ModelDeclaration__NeedsParamsAssignment_5_1");
			builder.put(grammarAccess.getModelDeclarationAccess().getProvisionsAssignment_7_1(), "rule__ModelDeclaration__ProvisionsAssignment_7_1");
			builder.put(grammarAccess.getModelDeclarationAccess().getProvisionsAssignment_7_3_0(), "rule__ModelDeclaration__ProvisionsAssignment_7_3_0");
			builder.put(grammarAccess.getModelDeclarationAccess().getBodyAssignment_9(), "rule__ModelDeclaration__BodyAssignment_9");
			builder.put(grammarAccess.getProvideAccess().getNameAssignment_0_1(), "rule__Provide__NameAssignment_0_1");
			builder.put(grammarAccess.getProvideAccess().getTypeAssignment_0_3(), "rule__Provide__TypeAssignment_0_3");
			builder.put(grammarAccess.getProvideAccess().getValueAssignment_0_4_1(), "rule__Provide__ValueAssignment_0_4_1");
			builder.put(grammarAccess.getProvideAccess().getTypesAssignment_1_1(), "rule__Provide__TypesAssignment_1_1");
			builder.put(grammarAccess.getProvideAccess().getNameAssignment_2_2(), "rule__Provide__NameAssignment_2_2");
			builder.put(grammarAccess.getProvideAccess().getStaticParamsAssignment_2_3_1(), "rule__Provide__StaticParamsAssignment_2_3_1");
			builder.put(grammarAccess.getProvideAccess().getStaticParamsAssignment_2_3_2_1(), "rule__Provide__StaticParamsAssignment_2_3_2_1");
			builder.put(grammarAccess.getProvideAccess().getInputAssignment_2_4(), "rule__Provide__InputAssignment_2_4");
			builder.put(grammarAccess.getProvideAccess().getOutputAssignment_2_6(), "rule__Provide__OutputAssignment_2_6");
			builder.put(grammarAccess.getPackageDeclarationAccess().getNameAssignment_1(), "rule__PackageDeclaration__NameAssignment_1");
			builder.put(grammarAccess.getPackageDeclarationAccess().getUsesIdsAssignment_2_1(), "rule__PackageDeclaration__UsesIdsAssignment_2_1");
			builder.put(grammarAccess.getPackageDeclarationAccess().getUsesIdsAssignment_2_2_1(), "rule__PackageDeclaration__UsesIdsAssignment_2_2_1");
			builder.put(grammarAccess.getPackageDeclarationAccess().getProvisionsAssignment_3_1(), "rule__PackageDeclaration__ProvisionsAssignment_3_1");
			builder.put(grammarAccess.getPackageDeclarationAccess().getProvisionsAssignment_3_3_0(), "rule__PackageDeclaration__ProvisionsAssignment_3_3_0");
			builder.put(grammarAccess.getPackageDeclarationAccess().getBodyAssignment_5(), "rule__PackageDeclaration__BodyAssignment_5");
			builder.put(grammarAccess.getPackageEquationAccess().getNameAssignment_1(), "rule__PackageEquation__NameAssignment_1");
			builder.put(grammarAccess.getPackageEquationAccess().getEqOrIsAssignment_2(), "rule__PackageEquation__EqOrIsAssignment_2");
			builder.put(grammarAccess.getPackageEquationAccess().getByNameStaticArgsAssignment_4(), "rule__PackageEquation__ByNameStaticArgsAssignment_4");
			builder.put(grammarAccess.getPackageEquationAccess().getByNameStaticArgsAssignment_5_1(), "rule__PackageEquation__ByNameStaticArgsAssignment_5_1");
			builder.put(grammarAccess.getPackage_ProvidedAccess().getNameAssignment_1(), "rule__Package_Provided__NameAssignment_1");
			builder.put(grammarAccess.getPackage_ProvidedAccess().getParametersAssignment_3_0(), "rule__Package_Provided__ParametersAssignment_3_0");
			builder.put(grammarAccess.getPackage_ProvidedAccess().getParametersAssignment_3_1_1(), "rule__Package_Provided__ParametersAssignment_3_1_1");
			builder.put(grammarAccess.getPackage_ProvidedAccess().getReturnedAssignment_7(), "rule__Package_Provided__ReturnedAssignment_7");
			builder.put(grammarAccess.getPackage_ProvidedAccess().getReturnedAssignment_8_1(), "rule__Package_Provided__ReturnedAssignment_8_1");
			builder.put(grammarAccess.getPackage_Provided_IOAccess().getNameAssignment_0(), "rule__Package_Provided_IO__NameAssignment_0");
			builder.put(grammarAccess.getPackage_Provided_IOAccess().getTypeAssignment_2(), "rule__Package_Provided_IO__TypeAssignment_2");
			builder.put(grammarAccess.getArray_TypeAccess().getTypeAssignment_0(), "rule__Array_Type__TypeAssignment_0");
			builder.put(grammarAccess.getArray_TypeAccess().getLengthAssignment_2(), "rule__Array_Type__LengthAssignment_2");
			builder.put(grammarAccess.getRecord_TypeAccess().getFieldsAssignment_2(), "rule__Record_Type__FieldsAssignment_2");
			builder.put(grammarAccess.getRecord_TypeAccess().getFieldsAssignment_3_1(), "rule__Record_Type__FieldsAssignment_3_1");
			builder.put(grammarAccess.getFieldAccess().getNameAssignment_0(), "rule__Field__NameAssignment_0");
			builder.put(grammarAccess.getFieldAccess().getTypeAssignment_2(), "rule__Field__TypeAssignment_2");
			builder.put(grammarAccess.getConstant_DeclarationAccess().getNameAssignment_0_1(), "rule__Constant_Declaration__NameAssignment_0_1");
			builder.put(grammarAccess.getConstant_DeclarationAccess().getTypeAssignment_0_3(), "rule__Constant_Declaration__TypeAssignment_0_3");
			builder.put(grammarAccess.getConstant_DeclarationAccess().getNameAssignment_1_1(), "rule__Constant_Declaration__NameAssignment_1_1");
			builder.put(grammarAccess.getConstant_DeclarationAccess().getExprAssignment_1_3(), "rule__Constant_Declaration__ExprAssignment_1_3");
			builder.put(grammarAccess.getConstant_DeclarationAccess().getNameAssignment_2_1(), "rule__Constant_Declaration__NameAssignment_2_1");
			builder.put(grammarAccess.getConstant_DeclarationAccess().getTypeAssignment_2_3(), "rule__Constant_Declaration__TypeAssignment_2_3");
			builder.put(grammarAccess.getConstant_DeclarationAccess().getExprAssignment_2_5(), "rule__Constant_Declaration__ExprAssignment_2_5");
			builder.put(grammarAccess.getVariable_DeclarationAccess().getNameAssignment_0(), "rule__Variable_Declaration__NameAssignment_0");
			builder.put(grammarAccess.getVariable_DeclarationAccess().getTypeAssignment_2(), "rule__Variable_Declaration__TypeAssignment_2");
			builder.put(grammarAccess.getVariable_DeclarationAccess().getClockAssignment_3_1(), "rule__Variable_Declaration__ClockAssignment_3_1");
			builder.put(grammarAccess.getLocal_Constant_DeclarationAccess().getNameAssignment_0_2(), "rule__Local_Constant_Declaration__NameAssignment_0_2");
			builder.put(grammarAccess.getLocal_Constant_DeclarationAccess().getExprAssignment_0_4(), "rule__Local_Constant_Declaration__ExprAssignment_0_4");
			builder.put(grammarAccess.getLocal_Constant_DeclarationAccess().getNameAssignment_1_2(), "rule__Local_Constant_Declaration__NameAssignment_1_2");
			builder.put(grammarAccess.getLocal_Constant_DeclarationAccess().getTypeAssignment_1_4(), "rule__Local_Constant_Declaration__TypeAssignment_1_4");
			builder.put(grammarAccess.getLocal_Constant_DeclarationAccess().getExprAssignment_1_6(), "rule__Local_Constant_Declaration__ExprAssignment_1_6");
			builder.put(grammarAccess.getEquationAccess().getLeftAssignment_0_0(), "rule__Equation__LeftAssignment_0_0");
			builder.put(grammarAccess.getEquationAccess().getRightAssignment_0_2(), "rule__Equation__RightAssignment_0_2");
			builder.put(grammarAccess.getEquationAccess().getLeftAssignment_1_0(), "rule__Equation__LeftAssignment_1_0");
			builder.put(grammarAccess.getEquationAccess().getRightAssignment_1_2(), "rule__Equation__RightAssignment_1_2");
			builder.put(grammarAccess.getEquationAccess().getLeftAssignment_2_0(), "rule__Equation__LeftAssignment_2_0");
			builder.put(grammarAccess.getEquationAccess().getRightAssignment_2_2(), "rule__Equation__RightAssignment_2_2");
			builder.put(grammarAccess.getAutomatonAccess().getStatesAssignment_1(), "rule__Automaton__StatesAssignment_1");
			builder.put(grammarAccess.getAutomatonAccess().getStatesAssignment_2_1(), "rule__Automaton__StatesAssignment_2_1");
			builder.put(grammarAccess.getAStateAccess().getNameAssignment_0(), "rule__AState__NameAssignment_0");
			builder.put(grammarAccess.getAStateAccess().getEquationsAssignment_2_0(), "rule__AState__EquationsAssignment_2_0");
			builder.put(grammarAccess.getAStateAccess().getAssertionsAssignment_2_1(), "rule__AState__AssertionsAssignment_2_1");
			builder.put(grammarAccess.getAStateAccess().getAutomatonsAssignment_2_2(), "rule__AState__AutomatonsAssignment_2_2");
			builder.put(grammarAccess.getAStateAccess().getTransitionsAssignment_3(), "rule__AState__TransitionsAssignment_3");
			builder.put(grammarAccess.getATransitionAccess().getStrongAssignment_0_1(), "rule__ATransition__StrongAssignment_0_1");
			builder.put(grammarAccess.getATransitionAccess().getConditionAssignment_1(), "rule__ATransition__ConditionAssignment_1");
			builder.put(grammarAccess.getATransitionAccess().getHistoryAssignment_2_1(), "rule__ATransition__HistoryAssignment_2_1");
			builder.put(grammarAccess.getATransitionAccess().getNextStateAssignment_3(), "rule__ATransition__NextStateAssignment_3");
			builder.put(grammarAccess.getLeft_ListAccess().getIdAssignment_0(), "rule__Left_List__IdAssignment_0");
			builder.put(grammarAccess.getLeft_ListAccess().getIdAssignment_1_1(), "rule__Left_List__IdAssignment_1_1");
			builder.put(grammarAccess.getLeftAccess().getNameAssignment_0(), "rule__Left__NameAssignment_0");
			builder.put(grammarAccess.getLeftAccess().getSelectorAssignment_1(), "rule__Left__SelectorAssignment_1");
			builder.put(grammarAccess.getSelectorAccess().getNameAssignment_0_1(), "rule__Selector__NameAssignment_0_1");
			builder.put(grammarAccess.getSelectorAccess().getBeginAssignment_1_1(), "rule__Selector__BeginAssignment_1_1");
			builder.put(grammarAccess.getSelectorAccess().getEndAssignment_1_2(), "rule__Selector__EndAssignment_1_2");
			builder.put(grammarAccess.getExpressionAccess().getIfexprAssignment_0_2(), "rule__Expression__IfexprAssignment_0_2");
			builder.put(grammarAccess.getExpressionAccess().getThenexprAssignment_0_4(), "rule__Expression__ThenexprAssignment_0_4");
			builder.put(grammarAccess.getExpressionAccess().getElseexprAssignment_0_6(), "rule__Expression__ElseexprAssignment_0_6");
			builder.put(grammarAccess.getFbyAccess().getSubExpressionsAssignment_1_1_1(), "rule__Fby__SubExpressionsAssignment_1_1_1");
			builder.put(grammarAccess.getArrowAccess().getSubExpressionsAssignment_1_1_1(), "rule__Arrow__SubExpressionsAssignment_1_1_1");
			builder.put(grammarAccess.getOrAccess().getSubExpressionsAssignment_1_1_1(), "rule__Or__SubExpressionsAssignment_1_1_1");
			builder.put(grammarAccess.getAndAccess().getSubExpressionsAssignment_1_1_1(), "rule__And__SubExpressionsAssignment_1_1_1");
			builder.put(grammarAccess.getEqualityAccess().getOpAssignment_1_1(), "rule__Equality__OpAssignment_1_1");
			builder.put(grammarAccess.getEqualityAccess().getRightAssignment_1_2(), "rule__Equality__RightAssignment_1_2");
			builder.put(grammarAccess.getComparisonAccess().getOpAssignment_1_1(), "rule__Comparison__OpAssignment_1_1");
			builder.put(grammarAccess.getComparisonAccess().getRightAssignment_1_2(), "rule__Comparison__RightAssignment_1_2");
			builder.put(grammarAccess.getModAccess().getSubExpressionsAssignment_1_2(), "rule__Mod__SubExpressionsAssignment_1_2");
			builder.put(grammarAccess.getPlusOrMinusAccess().getSubExpressionsAssignment_1_1(), "rule__PlusOrMinus__SubExpressionsAssignment_1_1");
			builder.put(grammarAccess.getMulOrDivAccess().getSubExpressionsAssignment_1_1(), "rule__MulOrDiv__SubExpressionsAssignment_1_1");
			builder.put(grammarAccess.getPrimaryAccess().getExpressionAssignment_1_2(), "rule__Primary__ExpressionAssignment_1_2");
			builder.put(grammarAccess.getPrimaryAccess().getExpressionAssignment_2_2(), "rule__Primary__ExpressionAssignment_2_2");
			builder.put(grammarAccess.getPrimaryAccess().getExpressionAssignment_3_2(), "rule__Primary__ExpressionAssignment_3_2");
			builder.put(grammarAccess.getPrimaryAccess().getExpressionAssignment_4_2(), "rule__Primary__ExpressionAssignment_4_2");
			builder.put(grammarAccess.getVariableReferenceAccess().getValueAssignment_1(), "rule__VariableReference__ValueAssignment_1");
			builder.put(grammarAccess.getConstantExpressionAccess().getValueAssignment_0_1(), "rule__ConstantExpression__ValueAssignment_0_1");
			builder.put(grammarAccess.getConstantExpressionAccess().getValueAssignment_1_1(), "rule__ConstantExpression__ValueAssignment_1_1");
			builder.put(grammarAccess.getConstantExpressionAccess().getValueAssignment_2_1(), "rule__ConstantExpression__ValueAssignment_2_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private LustreGrammarAccess grammarAccess;

	@Override
	protected InternalLustreParser createParser() {
		InternalLustreParser result = new InternalLustreParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] {  };
	}

	public LustreGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(LustreGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
