grammar de.cau.cs.kieler.yakindu.synccharts.model.stext.SyncChartstext
with de.cau.cs.kieler.yakindu.model.stext.Synctext

generate syncChartstext "http://kieler.cs.cau.de/yakindu/synccharts/stext/"

import "http://kieler.cs.cau.de/yakindu/stext/" as synctext
import "http://www.yakindu.org/sct/statechart/SText" as stext
import "http://www.yakindu.org/sct/sgraph/2.0.0" as sgraph
import "http://www.yakindu.org/base/types/2.0.0" as types
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

/********************************************/
/*			 Signal Definition						*/
/********************************************/
SignalDefinition:
	{EventDefinition} (isInput?='input')? (isOutput?='output')? 'signal'
	name=ID (':' type=[types::Type|FQN]
	('=' varInitialValue=Expression)?
	('with' varCombineOperator=CombineOperator)?)? ';';

/************************************************/
/*			 Variable Definition							*/
/************************************************/
// Override the Synctext VariableDefinition rule
// A variable is a Declaration. It has a Direction, a Name, a Type, 
// an InitialValue, and a CombineOperator
VariableDefinition:
	{VariableDefinition} (isStatic?='static')? type=[types::Type|FQN] name=ID
	('=' varInitialValue=Expression)? ';';